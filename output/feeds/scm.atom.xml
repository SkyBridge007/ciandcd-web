<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>ciandcd</title><link href="http://www.ciandcd.com/" rel="alternate"></link><link href="http://www.ciandcd.com/feeds/scm.atom.xml" rel="self"></link><id>http://www.ciandcd.com/</id><updated>2015-06-21T01:11:57+08:00</updated><entry><title>GitLab 7.10.2 Released</title><link href="http://www.ciandcd.com/gitlab-7102-released.html" rel="alternate"></link><updated>2015-06-21T01:11:57+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlab-7102-released.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;GitLab 7.10.2 released&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;Please note that we have discovered an issue in the migrations in this patch
release. The tag migration will fail on certain duplicate tags in the database.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do not upgrade to 7.10.2 at this time.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have already updated to 7.10.2 and everything is working fine,
there is no need to worry. You can keep using GitLab normally.&lt;/p&gt;



&lt;p&gt;We&amp;#8217;ve released GitLab 7.10.2 CE, EE and CI.&lt;/p&gt;

&lt;p&gt;It includes the following fixes, that apply to both CE and EE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A bug when using the Gitorious importer&lt;/li&gt;
&lt;li&gt;A bug that prevented adding group members through the admin screen&lt;/li&gt;
&lt;li&gt;Broken links on the merge request page leading to CI services&lt;/li&gt;
&lt;li&gt;A 500 error when trying to search in the wiki&lt;/li&gt;
&lt;li&gt;A 500 error when trying to add new tags to a project&lt;/li&gt;
&lt;li&gt;A bug where commit data would not appear in some subdirectories due to escaped slashes&lt;/li&gt;
&lt;li&gt;A bug where branches with escaped characters in their names would not always work
in the compare view&lt;/li&gt;
&lt;/ul&gt;


 


&lt;h2&gt;Upgrade barometer&lt;/h2&gt;

&lt;p&gt;There is a migration that loops through all tags.
This can take a while for larger installations.&lt;/p&gt;

&lt;p&gt;The upgrade can be performed online.&lt;/p&gt;

&lt;p&gt;Theoretically, there is a small chance that if a tag is created during
the &lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/db/migrate/20150425164649_add_taggings_counter_cache_to_tags.acts_as_taggable_on_engine.rb"&gt;migration&lt;/a&gt;
of that specific tag, the tag counter gets a value that is
slightly higher or lower than its actual value. We do not believe this
is reason to schedule downtime and recommend performing the upgrade online.&lt;/p&gt;

&lt;h2&gt;Updating&lt;/h2&gt;

&lt;p&gt;To update, check out our &lt;a href="https://about.gitlab.com/update"&gt;update page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Enterprise Edition&lt;/h2&gt;

&lt;p&gt;Omnibus packages for GitLab Enterprise Edition 7.10.2 are available for subscribers &lt;a href="https://gitlab.com/subscribers/gitlab-ee/blob/master/doc/install/packages.md"&gt;here&lt;/a&gt;. For installations from source, use &lt;a href="https://gitlab.com/subscribers/gitlab-ee/blob/master/doc/update/patch_versions.md"&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Interested in GitLab Enterprise Edition?
For an overview of feature exclusive to GitLab Enterprise Edition please have a look at the &lt;a href="http://about.gitlab.com/features/#enterprise"&gt;features exclusive to GitLab EE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Access to GitLab Enterprise Edition is included with a &lt;a href="http://www.gitlab.com/subscription/"&gt;subscription&lt;/a&gt;.
No time to upgrade GitLab yourself?
A subscription also entitles to our upgrade and installation services.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Version Check Functionality</title><link href="http://www.ciandcd.com/version-check-functionality.html" rel="alternate"></link><updated>2015-06-21T01:11:53+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:version-check-functionality.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;Version Check Functionality&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;We&amp;#8217;re working on a version check function for GitLab to reduce the problem of outdated servers.
These servers are a security problem, provide a bad user experience and
lead to issues being created with problems that have already been solved.
By making outdated installations visible to its users we hope that people will upgrade sooner.&lt;/p&gt;

 


&lt;h2&gt;How it&amp;#8217;ll work&lt;/h2&gt;

&lt;p&gt;The version check will work in the following way. The &lt;code&gt;/help&lt;/code&gt; page of GitLab will
load an image from version.gitlab.com. This image will show green for an
up to date version, yellow for an out of date version and red for a missing security update.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/version_check/green.png" alt="No update necessary"&gt;
&lt;img src="/images/version_check/orange.png" alt="New version out!"&gt;
&lt;img src="/images/version_check/red.png" alt="Update ASAP"&gt;&lt;/p&gt;

&lt;p&gt;The image requests parameters requests will contain the GitLab version and the server hostname.
We&amp;#8217;ll store each request with a timestamp, the GitLab version and the server hostname.
We will not store the user ip-address.&lt;/p&gt;

&lt;p&gt;We will send the server hostname to have more information about where and how GitLab is used.
Loading external images is similar to how the gravatar images of users are used.&lt;/p&gt;

&lt;h3&gt;Opt-out&lt;/h3&gt;

&lt;p&gt;Just like the gravatar images you will be able to to turn off the functionality
if you don&amp;#8217;t want your GitLab server to connect outside the firewall.
The version check functionality can be disabled in the application settings.&lt;/p&gt;

&lt;h2&gt;Trade-off&lt;/h2&gt;

&lt;p&gt;Providing the new package server and the version check server requires
constant maintenance and operational capacity.
Getting better insight into where and how GitLab is used
will help us improve GitLab for everyone.&lt;/p&gt;

&lt;p&gt;We realize that it sending the server
hostname by default is not a trivial action and not everyone will be happy about this.
We think that ensuring the sustainability of GitLab package server and
version check services makes it a good trade-off.
There will always be an option to turn this behavior off.&lt;/p&gt;

&lt;p&gt;Please let us know what you think about the above plan in the comments.&lt;/p&gt;

&lt;h2&gt;Update&lt;/h2&gt;

&lt;p&gt;We decided against sending the hostname in the url of the picture request.
But the https picture request itself will have a HTTP referer header.
We can use that to see where and how GitLab is used.
We will still not store the ip-address of the requests.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>GitLab 7.10.4 Released</title><link href="http://www.ciandcd.com/gitlab-7104-released.html" rel="alternate"></link><updated>2015-06-21T01:11:49+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlab-7104-released.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;GitLab 7.10.4 released&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;Last week we had to pull our 7.10.2 release as in a small number of installations
the migrations would fail because of a uniqueness constraint on tags. We
did not release GitLab 7.10.3, as we improved a migration after creating
the 7.10.3 version tag and wanted to include that in our patch release.&lt;/p&gt;

&lt;p&gt;Today we release GitLab 7.10.4 which solves the issues with the migrations
and contains all fixes also present in 7.10.2. If you&amp;#8217;ve already successfully
upgraded to 7.10.2, you do not need to update at this time.&lt;/p&gt;

&lt;p&gt;The fixes in this patch:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix migrations broken in 7.10.2&lt;/li&gt;
&lt;li&gt;Add missing indices to tags for some installations&lt;/li&gt;
&lt;li&gt;Make tags for GitLab installations running on MySQL case sensitive&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And the following were fixed with 7.10.2, also included here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A bug when using the Gitorious importer&lt;/li&gt;
&lt;li&gt;A bug that prevented adding group members through the admin screen&lt;/li&gt;
&lt;li&gt;Broken links on the merge request page leading to CI services&lt;/li&gt;
&lt;li&gt;A 500 error when trying to search in the wiki&lt;/li&gt;
&lt;li&gt;A 500 error when trying to add new tags to a project&lt;/li&gt;
&lt;li&gt;A bug where commit data would not appear in some subdirectories due to escaped slashes&lt;/li&gt;
&lt;li&gt;A bug where branches with escaped characters in their names would not always work
in the compare view&lt;/li&gt;
&lt;/ul&gt;


 


&lt;h2&gt;Upgrade barometer&lt;/h2&gt;

&lt;p&gt;There is a migration that loops through all tags.
This can take a while for larger installations.&lt;/p&gt;

&lt;p&gt;The upgrade can be performed online.&lt;/p&gt;

&lt;p&gt;Theoretically, there is a small chance that if a tag is created during
the &lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/db/migrate/20150425164649_add_taggings_counter_cache_to_tags.acts_as_taggable_on_engine.rb"&gt;migration&lt;/a&gt;
of that specific tag, the tag counter gets a value that is
slightly higher or lower than its actual value. We do not believe this
is reason to schedule downtime and recommend performing the upgrade online.&lt;/p&gt;

&lt;h2&gt;Updating&lt;/h2&gt;

&lt;p&gt;To update, check out our &lt;a href="https://about.gitlab.com/update"&gt;update page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Enterprise Edition&lt;/h2&gt;

&lt;p&gt;Omnibus packages for GitLab Enterprise Edition 7.10.4 are available for subscribers &lt;a href="https://gitlab.com/subscribers/gitlab-ee/blob/master/doc/install/packages.md"&gt;here&lt;/a&gt;. For installations from source, use &lt;a href="https://gitlab.com/subscribers/gitlab-ee/blob/master/doc/update/patch_versions.md"&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Interested in GitLab Enterprise Edition?
For an overview of feature exclusive to GitLab Enterprise Edition please have a look at the &lt;a href="http://about.gitlab.com/features/#enterprise"&gt;features exclusive to GitLab EE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Access to GitLab Enterprise Edition is included with a &lt;a href="http://www.gitlab.com/subscription/"&gt;subscription&lt;/a&gt;.
No time to upgrade GitLab yourself?
A subscription also entitles to our upgrade and installation services.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>A New GitLab Logo</title><link href="http://www.ciandcd.com/a-new-gitlab-logo.html" rel="alternate"></link><updated>2015-06-21T01:11:46+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:a-new-gitlab-logo.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;A new GitLab Logo&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;We hear you:&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;Gitlab seems like a cool service, but my god that logo is scary&lt;/p&gt;&amp;#8212; Matt Bachmann (@MattBachmann) &lt;a href="https://twitter.com/MattBachmann/status/575671070268768256"&gt;March 11, 2015&lt;/a&gt;&lt;/blockquote&gt;


 


&lt;p&gt;We have a scary, angry looking raccoon dog logo.&lt;/p&gt;

&lt;blockquote class="twitter-tweet" lang="en"&gt;&lt;p lang="en" dir="ltr"&gt;this creepy human/racoon hybrid that is the &lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt; logo is starting to really freak me out &lt;a href="http://t.co/HJarlbRNOo"&gt;pic.twitter.com/HJarlbRNOo&lt;/a&gt;&lt;/p&gt;&amp;#8212; hatewell (@hatwell) &lt;a href="https://twitter.com/hatwell/status/556028082709348352"&gt;January 16, 2015&lt;/a&gt;&lt;/blockquote&gt;


 


&lt;p&gt;We figured we could use a better representation of GitLab.&lt;/p&gt;

 


&lt;p&gt;&lt;strong&gt;Update May 20th:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After careful consideration we have decided that this is our new logo:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/new_logo/A.jpg" alt="new GitLab Logo option A"&gt;&lt;/p&gt;

&lt;p&gt;We like the way it looks in GitLab:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/new_logo/l2.png" alt="The new logo in GitLab"&gt;
&lt;img src="/images/new_logo/l3.png" alt="The new logo in GitLab, different color scheme"&gt;&lt;/p&gt;

&lt;p&gt;And compared to the old logo:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/new_logo/l1.png" alt="New vs. old GitLab logo"&gt;&lt;/p&gt;



&lt;p&gt;The options we didn&amp;#8217;t pick:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/new_logo/B.jpg" alt="new GitLab Logo option B"&gt;
&lt;img src="/images/new_logo/C.jpg" alt="new GitLab Logo option C"&gt;
&lt;img src="/images/new_logo/D.jpg" alt="new GitLab Logo option D"&gt;&lt;/p&gt;

&lt;p&gt;If you have a better suggestion than one of the ones above, a certain preference
or opinion, we&amp;#8217;d love to hear it.&lt;/p&gt;

&lt;p&gt;The final choice of our new logo rests with &lt;a href="https://twitter.com/dzaporozhets"&gt;Dmitriy&lt;/a&gt;.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Simple Words for a GitLab Newbie</title><link href="http://www.ciandcd.com/simple-words-for-a-gitlab-newbie.html" rel="alternate"></link><updated>2015-06-21T01:11:41+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:simple-words-for-a-gitlab-newbie.html</id><summary type="html">&lt;div&gt;&lt;p&gt;For most of us, when we work with a new tool, there&amp;#8217;s a process of learning the right vocabulary and the best steps to make things happen; this while we try to keep the best attitude. Not very long ago, I learned how to use Git and GitLab and it was a little bit painful. I read a lot about it, but it was mostly vocabulary that didn&amp;#8217;t make any sense to me. If you&amp;#8217;ve been there or if you are there now, you&amp;#8217;ll know what I&amp;#8217;m talking about (some people may have it naturally).&lt;/p&gt;

&lt;p&gt;So, to make this learning process easier for others, I took many of the basic Git vocabulary and wrote easy definitions for each word. I hope they are useful for you and please share them with your Git and Gitlab newbie friends!&lt;/p&gt;

 


&lt;h2&gt;Cloud Based Services&lt;/h2&gt;

&lt;p&gt;What is a cloud based service? It&amp;#8217;s a service or resource that is opposed to services that are hosted on the servers inside a company, which is the traditional way of doing it. It helps people and companies lower their costs and be more efficient while helping with different functions such as trannings, storage, etc.
GitLab.com is a cloud based service because it can be hosted both in house and in the cloud.&lt;/p&gt;

&lt;h2&gt;Source control or revision control software&lt;/h2&gt;

&lt;p&gt;What is source control? It&amp;#8217;s a system that records and manages changes to projects, files and documents. It helps you recall specific versions later. It also makes it easier to collaborate, because it shows who has changed what and helps you combine contributions.&lt;/p&gt;

&lt;h2&gt;Continuous Integration&lt;/h2&gt;

&lt;p&gt;What is continuous integration? It&amp;#8217;s the system of continuously incorporating the work advances with a shared mainline in a project. Git and GitLab together make continuous integration happen.&lt;/p&gt;

&lt;h2&gt;Continuous deployment&lt;/h2&gt;

&lt;p&gt;What is continuous deployment? It means that whenever there is a change to the code, it is deployed or made live immediately. This is in contrast to continous integration, where code is continuously being merged in the mainline and is always ready to be deployed, rather than actually deployed.
When people talk about CI and CD what they usually mean to say is that they are constantly and automatically testing their code against their tests using a tool such as GitLab CI and upon passing to a certain action. That action could be merging the code into a branch (master, production, etc), deploying it to a server or building a package / piece of software out of it.
Non-continuous integration would be everyone working on something and only integrating all the work as the very last step. Obviously, that results in many conflicts and issues, which is why CI is adopted widely nowadays.&lt;/p&gt;

&lt;h2&gt;Git&lt;/h2&gt;

&lt;p&gt;What is Git? Git is a system where you can create projects of different sizes with speed and efficiency. It helps you manage code, communicate and collaborate on different software projects.
Git will allow you to go back to a previous status on a project or to see its entire evolution since the project was created.
You could think of it as a time machine which will allow you to go back in time to whenever you&amp;#8217;d like in your project.
With Git, 3 basic issues were solved when working on projects:
1. It became easier to manage large projects.
2. It helps you avoid overwriting the team&amp;#8217;s advances and work.
3. With git, you just pull the entire code and history to your machine, so you can calmly work in your own little space without interference or boundaries. It&amp;#8217;s much simpler and much more light-weight.&lt;/p&gt;

&lt;h2&gt;Repository&lt;/h2&gt;

&lt;p&gt;What is a repository? The place where the history of your work is stored.&lt;/p&gt;

&lt;h2&gt;Remote repository&lt;/h2&gt;

&lt;p&gt;What is a remote repository? It&amp;#8217;s a repository that is not-on-your-machine, so it&amp;#8217;s anything that is not your computer. Usually, it is online, GitLab.com for instance. The main remote repository is usually called &amp;#8220;Origin&amp;#8221;.&lt;/p&gt;

&lt;h2&gt;Commit&lt;/h2&gt;

&lt;p&gt;What is a commit? It&amp;#8217;s the way you call the latest changes of source code that you made on a repository. When changes are tracked, commits mark the changes on a document.&lt;/p&gt;

&lt;h2&gt;Master&lt;/h2&gt;

&lt;p&gt;What is a master? It&amp;#8217;s how you call the main and definitive branch (the independent line of development of a project).&lt;/p&gt;

&lt;h2&gt;Branch&lt;/h2&gt;

&lt;p&gt;What is a branch? It&amp;#8217;s an independent line of development. They are a brand new working directory, staging area, and project history. New commits are recorded in the history for the current branch, which results in taking the source from someone&amp;#8217;s repository (the place where the history of your work is stored) at certain point in time, and apply your own changes to it in the history of the project.&lt;/p&gt;

&lt;h2&gt;Fork&lt;/h2&gt;

&lt;p&gt;What is a fork? It&amp;#8217;s a copy of an original repository (the place where the history of your work is stored) that you can put somewhere else or where you can experiment and apply changes that you can later decide if publishing or not, without affecting your original project.&lt;/p&gt;

&lt;h2&gt;Git Clone&lt;/h2&gt;

&lt;p&gt;What is a clone? It&amp;#8217;s to get a copy of a git project to look at or to use the code.&lt;/p&gt;

&lt;h2&gt;Git Merge&lt;/h2&gt;

&lt;p&gt;What is to merge? It&amp;#8217;s integrating separate changes that you made to a project, on different branches.&lt;/p&gt;

&lt;h2&gt;md: markdown&lt;/h2&gt;

&lt;p&gt;What is markdown? It&amp;#8217;s a plain text format that will make any document easy-to-write and easy-to-read.&lt;/p&gt;

&lt;h2&gt;Push a repository&lt;/h2&gt;

&lt;p&gt;What is to push a repository? It&amp;#8217;s to incorporate a local branch (the independent line of development of a project) to a remote repository (online version of your project).&lt;/p&gt;

&lt;h2&gt;README.md&lt;/h2&gt;

&lt;p&gt;What is a README.md? I&amp;#8217;t a file in a simple format which summarizes a repository. If there&amp;#8217;s also a README (without the .md), the README.md will have priority.&lt;/p&gt;

&lt;h2&gt;SSH (secure shell protocol)&lt;/h2&gt;

&lt;p&gt;What is SSH? It&amp;#8217;s how you call the commands that help communicate through a network and that are encrypted and secure. It&amp;#8217;s used for remote logins and it helps users connect to a server in a secure way.&lt;/p&gt;

&lt;h2&gt;Stage Files&lt;/h2&gt;

&lt;p&gt;What is to stage a file? It&amp;#8217;s how you call the act of preparing a file for a commit (the latest changes of source code in a repository).&lt;/p&gt;

&lt;h2&gt;GitLab&lt;/h2&gt;

&lt;p&gt;What is GitLab? GitLab is an online Git repository manager with a wiki, issue tracking, CI and CD. It is a great way to manage git repositories on a centralized server. GitLab gives you complete control over your repositories or projects and allows you to decide whether they are public or private for free.&lt;/p&gt;

&lt;h3&gt;GitLab.com&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;GitLab.com hosts your (private) software projects for free.&lt;/li&gt;
&lt;li&gt;It offers free public and private repositories, issue-tracking and wikis.&lt;/li&gt;
&lt;li&gt;It runs GitLab Enterprise Edition and GitLab CI.&lt;/li&gt;
&lt;li&gt;No installation required, you can just sign up for a free account.
Support Package:&lt;/li&gt;
&lt;li&gt;Free subscribers can use the GitLab.com Support Forum if they have questions.&lt;/li&gt;
&lt;li&gt;GitLab.com Bronze Support will let you email support directly for timely, personal and private answers. This costs $9.99 per user per year for next-business-day response time and is available in packs of 20 users.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;GitLab Community Edition (CE)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Free, self hosted application where you can get support from the Community&lt;/li&gt;
&lt;li&gt;Feature rich: Git repository management, code reviews, issue tracking, activity feeds and wikis. It comes with GitLab CI for continuous integration and delivery.&lt;/li&gt;
&lt;li&gt;Open Source: MIT licensed, community driven, 700+ contributors, inspect and modify the source, easy to integrate into your infrastructure.&lt;/li&gt;
&lt;li&gt;Scalable: support 25,000 users on one server or a highly available active/active cluster.&lt;/li&gt;
&lt;li&gt;Merge requests with line-by-line comments, CI and issue tracker integrations.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;GitLab Enterprise Edition (EE)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Self hosted application that comes with additional support.&lt;/li&gt;
&lt;li&gt;Builds on top of the Community Edition and includes extra features mainly aimed at organizations with more than 100 users.&lt;/li&gt;
&lt;li&gt;It has LDAP group sync, audit logs and multiple roles.&lt;/li&gt;
&lt;li&gt;It includes deeper authentication and authorization integration, has fine-grained workflow management, has extra server management options and it integrates with your tool stack.&lt;/li&gt;
&lt;li&gt;GitLab EE runs on your servers.&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;GitLab Continuous Integration (CI)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Free, self hosted application that integrates with GitLab CE/EE. Also availble as SaaS at ci.gitlab.com.&lt;/li&gt;
&lt;li&gt;Easy to set up since it is included in Omnibus packages of GitLab or use it for free on ci.gitlab.com.&lt;/li&gt;
&lt;li&gt;Beautiful interface with a clear menu structure.&lt;/li&gt;
&lt;li&gt;Performant and stable, as tests run distributed on separate machines.&lt;/li&gt;
&lt;li&gt;Will help you receive test results faster with each commit running in parallel on multiple jobs.&lt;/li&gt;
&lt;li&gt;Free to use and completely open source. All CI code is MIT licensed.&lt;/li&gt;
&lt;/ul&gt;


                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>GitLab, Gitorious, and Free Software</title><link href="http://www.ciandcd.com/gitlab-gitorious-and-free-software.html" rel="alternate"></link><updated>2015-06-21T01:11:37+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlab-gitorious-and-free-software.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;GitLab, Gitorious, and Free Software&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;This is a guest post by &lt;a href="http://mikegerwitz.com/"&gt;Mike Gerwitz&lt;/a&gt;, a &lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;free software&lt;/a&gt; hacker and
 activist, and author of &lt;a href="https://gnu.org/software/easejs"&gt;GNU ease.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In early March of this year, it was announced that
&lt;a href="https://about.gitlab.com/2015/03/03/gitlab-acquires-gitorious/"&gt;GitLab would acquire Gitorious&lt;/a&gt; and shut down &lt;code&gt;gitorious.org&lt;/code&gt; by 1
June, 2015.  &lt;a href="https://news.ycombinator.com/item?id=9138419"&gt;Reactions from the community&lt;/a&gt; were mixed, and
understandably so: while GitLab itself is a formidable alternative to wholly
proprietary services, its acquisition of Gitorious strikes a chord with the
free software community that gathered around Gitorious in the name of
&lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;software freedom&lt;/a&gt;.&lt;/p&gt;

 


&lt;p&gt;After hearing that announcement,
&lt;a href="http://mikegerwitz.com/"&gt;as a free software hacker and activist myself&lt;/a&gt;, I was naturally
uneasy.  Discussions of alternatives to Gitorious and GitLab ensued on the
&lt;a href="https://lists.gnu.org/mailman/listinfo/libreplanet-discuss"&gt;&lt;code&gt;libreplanet-discuss&lt;/code&gt;&lt;/a&gt; mailing list.  Sytse Sijbrandij (GitLab
B.V. CEO) happened to be present on that list;
&lt;a href="https://lists.gnu.org/archive/html/libreplanet-discuss/2015-03/msg00075.html"&gt;I approached him very sternly&lt;/a&gt; with a number of concerns, just as I
would with anyone that I feel does not understand certain aspects of the
&lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;free software philosophy&lt;/a&gt;.  To my surprise, this was not the case at
all.&lt;/p&gt;

&lt;p&gt;Sytse has spent a lot of time accepting and considering community input for
both the Gitorious acquisition and GitLab itself.  He has also worked with
me to address some of the issues that I had raised.  And while these issues
won&amp;#8217;t address everyone&amp;#8217;s concerns, they do strengthen GitLab&amp;#8217;s commitment to
&lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;software freedom&lt;/a&gt;, and are commendable.&lt;/p&gt;

&lt;p&gt;I wish to share some of these details here; but to do so, I first have to
provide some background to explain what the issues are, and why they are
important.&lt;/p&gt;

&lt;h2&gt;Free Software Ideology&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gitorious.org/"&gt;Gitorious&lt;/a&gt; was (and still is) one of the most popular Git repository
hosts, and largely dominated until the introduction of GitHub.  But even as
users flocked to &lt;a href="http://mikegerwitz.com/about/githubbub"&gt;GitHub&amp;#8217;s proprietary services&lt;/a&gt;, users who value freedom
continued to support Gitorious, both on &lt;code&gt;gitorious.org&lt;/code&gt; and by installing
their own instances on their own servers.  Since Gitorious is
&lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;free software&lt;/a&gt;, users are free to study, modify, and share it with
others.  But &lt;a href="https://www.gnu.org/philosophy/who-does-that-server-really-serve.html"&gt;software freedom does not apply to Services as a
Software Substitute (SaaSS)&lt;/a&gt; or remote services&amp;#8212;you cannot apply the
&lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;four freedoms&lt;/a&gt; to something that you do not yourself possess&amp;#8212;so why do
users still insist on using &lt;code&gt;gitorious.org&lt;/code&gt; despite this?&lt;/p&gt;

&lt;p&gt;The matter boils down to supporting a philosophy:  The
&lt;a href="https://www.gnu.org/licenses/gpl.html"&gt;GNU General Public License (GPL)&lt;/a&gt; is a license that turns copyright on
its head: rather than using copyright to restrict what users can do with a
program, the GPL instead &lt;a href="https://www.gnu.org/licenses/quick-guide-gplv3.html"&gt;ensures users' freedoms&lt;/a&gt; to study, modify, and
share it.  But that isn&amp;#8217;t itself enough: to ensure that the software always
remains free (as in freedom), the GPL ensures that all derivatives are
also licensed under similar terms.  This is known as &lt;a href="https://www.gnu.org/philosophy/pragmatic.html"&gt;copyleft&lt;/a&gt;, and it
is vital to the free software movement.&lt;/p&gt;

&lt;p&gt;Gitorious is licensed under the
&lt;a href="https://www.gnu.org/licenses/agpl.html"&gt;GNU Affero General Public License Version 3 (AGPLv3)&lt;/a&gt;&amp;#8212;this takes the
&lt;a href="https://www.gnu.org/licenses/gpl.html"&gt;GPL&lt;/a&gt; and adds an additional requirement: if a modified version of the
program is run on a sever, users communicating with the program on that
server must have access to the modified program&amp;#8217;s source code.  This ensures
that &lt;a href="https://www.gnu.org/licenses/why-affero-gpl.html"&gt;modifications to the program are available to all users&lt;/a&gt;; they
would otherwise be hidden in private behind the server, with others unable
to incorporate, study, or share them.  The AGPLv3 is an ideal license for
Gitorious, since most of its users will only ever interact with it over a
network.&lt;/p&gt;

&lt;p&gt;GitLab is also free software: its &lt;a href="https://www.gnu.org/licenses/license-list.html#Expat"&gt;Expat license&lt;/a&gt; (commonly referred to
ambiguously as the &amp;#8220;MIT license&amp;#8221;) permits all of the same freedoms that
are granted under the the GNU GPL.  But it does so in a way that is highly
permissive: it permits relicensing under any terms, free or not.  In other
words, one can fork GitLab and derive a proprietary version from it, making
changes that deny users &lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;their freedoms&lt;/a&gt; and cannot be incorporated back
into the original work.&lt;/p&gt;

&lt;p&gt;This is the issue that the free software community surrounding Gitorious has
a problem with: any changes contributed to GitLab could in turn benefit a
proprietary derivative.  This situation isn&amp;#8217;t unique to GitLab: it applies
to all non-copyleft (&amp;#8220;permissive&amp;#8221;) &lt;a href="https://www.gnu.org/licenses/license-list.html"&gt;free software licenses&lt;/a&gt;.  And this
issue is realized by GitLab itself in the form of its GitLab Enterprise
Edition (GitLab EE): a proprietary derivative that adds additional
features atop of GitLab&amp;#8217;s free Community Edition (CE).  For this reason,
many free software advocates are uncomfortable contributing to GitLab, and
feel that they should instead support other projects; this, in turn, means
not supporting GitLab by using and drawing attention to their hosting
services.&lt;/p&gt;

&lt;p&gt;The copyleft vs. permissive licensing debate is one of the free software
movement&amp;#8217;s most heated.  I do not wish to get into such a debate here.  One
thing is clear: GitLab Community Edition (GitLab CE) is free
software.  Richard Stallman (RMS) &lt;a href="https://lists.gnu.org/archive/html/libreplanet-discuss/2015-03/msg00095.html"&gt;responded directly to the thread on
&lt;code&gt;libreplanet-discuss&lt;/code&gt;&lt;/a&gt;, stating plainly:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt; We have a simple way of looking at these two versions.  The free
 version is free software, so it is ethical.  The nonfree version is
 nonfree software, so it is not ethical.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Does GitLab CE deserve attention from the free software community?  I
believe so.  Importantly, there is another strong consideration: displacing
proprietary services like GitHub and Bitbucket, which host a large number of
projects and users.  GitLab has a strong foothold, which is an excellent
place for a free software project to be in.&lt;/p&gt;

&lt;p&gt;If we are to work together as a community, we need to respect GitLab&amp;#8217;s
free licensing choices just as we expect GitLab to respect ours.  Providing
respect does not mean that you are conceding: I will never personally use a
non-copyleft license for my software; I&amp;#8217;m firmly rooted in my dedication to
the &lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;free software philosophy&lt;/a&gt;, and I&amp;#8217;m sure that many other readers are
too.  But using a non-copyleft license, although many of us consider it to
be a weaker alternative, &lt;a href="https://www.fsf.org/blogs/rms/selling-exceptions"&gt;is not wrong&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Free JavaScript&lt;/h2&gt;

&lt;p&gt;As I mentioned above,
&lt;a href="https://www.gnu.org/philosophy/who-does-that-server-really-serve.html"&gt;software freedom and network services are separate issues&lt;/a&gt;&amp;#8212;the four
freedoms do not apply to interacting with &lt;code&gt;gitlab.com&lt;/code&gt; purely over a network
connection, for example, because you are not running its software on your
computer.  However, there is an overlap: JavaScript code downloaded to be
executed in your web browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gnu.org/philosophy/javascript-trap.html"&gt;Non-free JavaScript&lt;/a&gt; is a particularly nasty concern: it is software
that is downloaded automatically from a server&amp;#8212;often without prompting
you&amp;#8212;and then immediately executed.  Software is now being executed on your
machine, and &lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;your four freedoms&lt;/a&gt; are once again at risk.  This, then,
&lt;a href="https://www.gnu.org/software/easejs/whyfreejs.html"&gt;is the primary concern&lt;/a&gt; for any users visiting &lt;code&gt;gitlab.com&lt;/code&gt;: not only
would this affect users that use &lt;code&gt;gitlab.com&lt;/code&gt; as a host, but it would also
affect any user that visits the website.  That would be a problem, since
hosting your project there would be inviting users to run proprietary
JavaScript.&lt;/p&gt;

&lt;p&gt;As I was considering migrating my projects to GitLab, this was the
&lt;a href="https://lists.gnu.org/archive/html/libreplanet-discuss/2015-04/msg00019.html"&gt;first concern I brought up to Sytse&lt;/a&gt;.  This problem arises because
&lt;code&gt;gitlab.com&lt;/code&gt; uses a GitLab EE instance: if it had used only its Community
Edition (GitLab CE)&amp;#8212;which is free software&amp;#8212;then all served JavaScript
would have been free.  But any scripts served by GitLab EE that are not
identical to those served by GitLab CE are proprietary, and therefore
unethical.  This same concern applies to GitHub, Bitbucket, and other
proprietary hosts that serve JavaScript.&lt;/p&gt;

&lt;p&gt;Sytse surprised me by stating that he would be willing to
&lt;a href="https://lists.gnu.org/archive/html/libreplanet-discuss/2015-04/msg00020.html"&gt;freely license all JavaScript in GitLab EE&lt;/a&gt;, and by offering to give
anyone access to the GitLab EE source code who wants to help out.  I took
him up on that offer.  Initially, I had submitted a patch to merge all
GitLab EE JavaScript into GitLab CE, but Sytse came up with another,
superior suggestion, that ultimately provided even greater reach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I&amp;#8217;m pleased to announce that Sytse and I were able to agree on a license
change (with absolutely no friction or hesitation on his part) that
liberates all JavaScript served to the client from GitLab EE instances.&lt;/strong&gt;
There are two concerns that I had wanted to address: JavaScript code
directly written for the client, and any code that produced JavaScript as
output.  In the former case, this includes JavaScript derived from other
sources: for example, GitLab uses CoffeeScript, which compiles into
JavaScript.  The latter case is important: if there is any code that
generates fragments of JavaScript&amp;#8212;e.g. dynamically at runtime&amp;#8212;then that
code must also be free, or users would not be able to modify and share the
resulting JavaScript that is actually being run on the client.  Sytse
accepted my change verbatim, while adding his own sentence after mine to
disambiguate.  At the time of writing this post, GitLab EE&amp;#8217;s source code
isn&amp;#8217;t yet publicly visible, so here is the relevant snippet from its
&lt;code&gt;LICENSE&lt;/code&gt; file:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The above copyright notices applies only to the part of this Software that
is not distributed as part of GitLab Community Edition (CE), and that is
not a file that produces client-side JavaScript, in whole or in part. Any
part of this Software distributed as part of GitLab CE or that is a file
that produces client-side JavaScript, in whole or in part, is copyrighted
under the MIT Expat license.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;Further Discussion&lt;/h2&gt;

&lt;p&gt;My discussions with Sytse did not end there: there are other topics that
have not been able to be addressed before my writing of this post that would
do well to demonstrate commitment toward &lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;software freedom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The license change liberating client-side JavaScript was an excellent
move.  To expand upon it, I wish to submit a patch that would make GitLab
&lt;a href="https://www.gnu.org/software/librejs/free-your-javascript.html"&gt;LibreJS compliant&lt;/a&gt;; this provides even greater guarantees, since it
would allow for users to continue to block other non-free JavaScript that
may be served by the GitLab instance, but not produced by it.  For example:
a website/host that uses GitLab may embed proprietary JavaScript, or modify
it without releasing the source code.  Another common issue is the user of
analytics software; &lt;code&gt;gitlab.com&lt;/code&gt; uses Google Analytics.&lt;/p&gt;

&lt;p&gt;If you would like to help with LibreJS compliance, please &lt;a href="http://mikegerwitz.com/"&gt;contact me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was brought into another discussion between Sytse and RMS that is
unrelated to the GitLab software itself, but still a positive demonstration
of a commitment to &lt;a href="https://www.gnu.org/philosophy/free-sw.html"&gt;software freedom&lt;/a&gt;&amp;#8212;the replacement of Disqus on the
&lt;code&gt;gitlab.com&lt;/code&gt; blog with a free alternative.  Sytse ended up making a
suggestion, saying he&amp;#8217;d be &amp;#8220;happy to switch to&amp;#8221; &lt;a href="https://github.com/phusion/juvia"&gt;Juvia&lt;/a&gt; if I&amp;#8217;d help with
the migration.  I&amp;#8217;m looking forward to this, as it is an important
discussion area (that I honestly didn&amp;#8217;t know existed until Sytse told me
about it, because I don&amp;#8217;t permit proprietary JavaScript!).  He was even kind
enough to compile a PDF of comments for one of our discussions, since he was
cognizant ahead of time that I would not want to use Disqus.  (Indeed, I
will be unable to read and participate in the comments to this guest post
unless I take the time to freely read and reply without running Disqus'
proprietary JavaScript.)&lt;/p&gt;

&lt;p&gt;Considering the genuine interest and concern expressed by Sytse in working
with myself and the free software community, I can only expect that GitLab
will continue to accept and apply community input.&lt;/p&gt;

&lt;h2&gt;Actions Speak Louder Than Words&lt;/h2&gt;

&lt;p&gt;It is not possible to address the copyleft issue without a change in
license, which GitLab is not interested in doing.  So the best way to
re-assure the community is through action.  &lt;a href="https://news.ycombinator.com/item?id=9141801"&gt;To quote Sytse&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think the only way to prove we&amp;#8217;re serious about open source is in our
actions, licenses or statements don&amp;#8217;t help.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There are fundamental disagreements that will not be able to be
resolved between GitLab and the free software community&amp;#8212;like their
&lt;a href="https://lists.gnu.org/archive/html/libreplanet-discuss/2015-03/msg00076.html"&gt;&amp;#8220;open core&amp;#8221; business model&lt;/a&gt;.  But after working with Sytse and seeing
his interactions with myself, RMS, and many others in the free software
community, I find his actions to be very encouraging.&lt;/p&gt;

&lt;p&gt;Are you interested in helping other websites liberate their JavaScript?
 Consider &lt;a href="https://fsf.org/campaigns/freejs"&gt;joining the FSF&amp;#8217;s campaign&lt;/a&gt;, and
 &lt;a href="https://www.gnu.org/software/easejs/whyfreejs.html"&gt;please liberate your own&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;This post is licensed under the
 &lt;a href="http://creativecommons.org/licenses/by-sa/3.0/"&gt;Creative Commons Attribution-ShareAlike 3.0 Unported License&lt;/a&gt;.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Security Advisory for Logjam Vulnerability</title><link href="http://www.ciandcd.com/security-advisory-for-logjam-vulnerability.html" rel="alternate"></link><updated>2015-06-21T01:11:34+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:security-advisory-for-logjam-vulnerability.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;Security advisory for Logjam vulnerability&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;A recently announced &lt;a href="https://weakdh.org/"&gt;Logjam vulnerability&lt;/a&gt; allows an attacker to do a man-in-the-middle attack, allowing them to downgrade a TLS connection to 512-bit DH parameters. More details on what that is and means can be &lt;a href="https://www.openssl.org/blog/blog/2015/05/20/logjam-freak-upcoming-changes/"&gt;found on openssl blog&lt;/a&gt;.&lt;/p&gt;

 


&lt;h3&gt;Impact on GitLab&lt;/h3&gt;

&lt;p&gt;GitLab is using, by default, up-to-date SSL ciphers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Export Cipher Suites&lt;/code&gt; are not used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Elliptic-Curve Diffie-Hellman&lt;/code&gt; ciphers are used&lt;/li&gt;
&lt;li&gt;By default, 1024-bit DH groups are used&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This means that GitLab is safe in principle. When using 1028-bit DH groups there is a small chance that an attacker with nation-state resources could be eavesdropping.&lt;/p&gt;

&lt;p&gt;If you find this insufficient for your GitLab installation, you can generate 2048-bit DH groups and enable the &lt;code&gt;ssl_dhparam&lt;/code&gt; option in NGINX config.&lt;/p&gt;

&lt;p&gt;Params can be generated with:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;pre class="line-numbers"&gt;&lt;p class="line-number"&gt;1&lt;/p&gt;
&lt;/pre&gt;&lt;pre&gt;&lt;code class="bash"&gt;&lt;p class="line"&gt;openssl dhparam -out dhparams.pem 2048
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;After the &lt;code&gt;dhparams.pem&lt;/code&gt; file has been generated you will need to tell Nginx where the file is located:&lt;/p&gt;

&lt;h4&gt;GitLab installations using omnibus-gitlab packages&lt;/h4&gt;

&lt;p&gt;For packages version 7.11.0 and up.&lt;/p&gt;

&lt;p&gt;Place the &lt;code&gt;dhparams.pem&lt;/code&gt; file in &lt;code&gt;/etc/gitlab/ssl/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;, enable the following setting:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;pre class="line-numbers"&gt;&lt;p class="line-number"&gt;1&lt;/p&gt;
&lt;/pre&gt;&lt;pre&gt;&lt;code class="ruby"&gt;&lt;p class="line"&gt;&lt;p class="n"&gt;nginx&lt;/p&gt;&lt;p class="o"&gt;[&lt;/p&gt;&lt;p class="s1"&gt;'ssl_dhparam'&lt;/p&gt;&lt;p class="o"&gt;]&lt;/p&gt; &lt;p class="o"&gt;=&lt;/p&gt; &lt;p class="s2"&gt;"/etc/gitlab/ssl/dhparams.pem"&lt;/p&gt;
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;and do &lt;code&gt;sudo gitlab-ctl reconfigure&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;More information can be &lt;a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/7-11-stable/doc/settings/nginx.md#using-custom-ssl-ciphers"&gt;found in the omnibus-gitlab nginx documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Workaround for packages prior to version 7.11.0&lt;/p&gt;

&lt;p&gt;Place the &lt;code&gt;dhparams.pem&lt;/code&gt; file in &lt;code&gt;/etc/gitlab/ssl/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;, enable the following setting:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;pre class="line-numbers"&gt;&lt;p class="line-number"&gt;1&lt;/p&gt;
&lt;/pre&gt;&lt;pre&gt;&lt;code class="ruby"&gt;&lt;p class="line"&gt;&lt;p class="n"&gt;nginx&lt;/p&gt;&lt;p class="o"&gt;[&lt;/p&gt;&lt;p class="s1"&gt;'custom_gitlab_server_config'&lt;/p&gt;&lt;p class="o"&gt;]&lt;/p&gt; &lt;p class="o"&gt;=&lt;/p&gt; &lt;p class="s2"&gt;"ssl_dhparam /etc/gitlab/ssl/dhparams.pem;&lt;/p&gt;&lt;p class="se"&gt;\n&lt;/p&gt;&lt;p class="s2"&gt;"&lt;/p&gt;
&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;and run &lt;code&gt;sudo gitlab-ctl reconfigure&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;GitLab installations from source&lt;/h4&gt;

&lt;p&gt;Place the generated &lt;code&gt;dhparams.pem&lt;/code&gt; in a suitable location, for example &lt;code&gt;/etc/nginx/ssl/dhparams.pem&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In GitLab nginx config find &lt;code&gt;ssl_dhparam&lt;/code&gt; config and set it to &lt;code&gt;ssl_dhparam /etc/nginx/ssl/dhparams.pem;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Reload your nginx config.&lt;/p&gt;

&lt;h3&gt;Impact on GitLab.com&lt;/h3&gt;

&lt;p&gt;GitLab.com is using 1028-bit DH groups. Due to incompatibilities with older Java-based clients we haven&amp;#8217;t enabled 2048-bit DH params yet as this would prevent some people from using GitLab.com. We are looking into ways to keep a good SSLlabs score and allowing users with older Java-base clients to use GitLab.com.&lt;/p&gt;

&lt;p&gt;We are examining the impact of this and we will update this blog post once we have more information.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>GitLab 7.11 Released With Two-factor Authentication and a Publicly Viewable Enterprise Edition</title><link href="http://www.ciandcd.com/gitlab-711-released-with-two-factor-authentication-and-a-publicly-viewable-enterprise-edition.html" rel="alternate"></link><updated>2015-06-21T01:11:28+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlab-711-released-with-two-factor-authentication-and-a-publicly-viewable-enterprise-edition.html</id><summary type="html">&lt;div&gt;&lt;p&gt;It&amp;#8217;s the 22nd of the month, so we have a new GitLab release ready!
GitLab 7.11 brings more improvements to the look and feel of GitLab,
two-factor authentication, a version check and more!&lt;/p&gt;

&lt;p&gt;Of course we&amp;#8217;re also releasing GitLab CI 7.11, with a new backup and restore
utility, improvements in the UI and other new features.&lt;/p&gt;

&lt;p&gt;This month&amp;#8217;s MVP is &lt;a href="http://jamesnewton.com/"&gt;James Newton&lt;/a&gt; (newton on IRC)!
James is very active on our &lt;code&gt;#gitlab&lt;/code&gt; IRC channel, often helping people out
with issues or helping people getting started with GitLab. We&amp;#8217;re very
happy to have James supporting the community and believe that is deserving
of a MVP award!
Thanks James!&lt;/p&gt;

 


&lt;h2&gt;Better looking sidebar&lt;/h2&gt;

&lt;p&gt;We changed the look of the sidebar to reflect its function better and make it look
more pretty:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_11/sidebar.png" alt="The new sidebar in GitLab 7.11"&gt;&lt;/p&gt;

&lt;h2&gt;Clean project dashboard&lt;/h2&gt;

&lt;p&gt;The project dashboard was a good example of design by committee, one GitLab
contributor noted. We broomed through it and cleaned it up:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_11/project.png" alt="Project Dashboard in GitLab 7.11"&gt;&lt;/p&gt;

&lt;h2&gt;Two-factor authentication&lt;/h2&gt;

&lt;p&gt;Keep your code more secure and start using two-factor authentication (2FA)!
GitLab has built-in 2FA in both CE and EE now and makes use of the convenient
Google Authenticator.&lt;/p&gt;

&lt;p&gt;All you have to do is go to your Profile &amp;gt; Account and scan the QR code using
Google&amp;#8217;s app.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_11/2fa.png" alt="two-factor authentication"&gt;&lt;/p&gt;

&lt;p&gt;From now on, on login you&amp;#8217;ll be required to provide the code the app gives you
for GitLab. Two-factor authentication only works with the web-UI for now.&lt;/p&gt;

&lt;h2&gt;User roles in comments&lt;/h2&gt;

&lt;p&gt;Now you know who&amp;#8217;s who in your favorite project. On comments you will see
the role of the person in that project:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_11/roles.png" alt="not an actual conversation"&gt;&lt;/p&gt;

&lt;h2&gt;Task lists everywhere&lt;/h2&gt;

&lt;p&gt;Want a task list in the comments? Now you can!&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_11/task.png" alt="Task list in comments"&gt;&lt;/p&gt;

&lt;h2&gt;Version Check&lt;/h2&gt;

&lt;p&gt;GitLab releases a new version every single month on the 22nd, so we understand
that people are not always up to date. We wanted to give you some help with
this, so from now on you can quickly see which version of GitLab you have running
by visiting the Help or Admin page. It will show if you are up to date and
if there is a security release you should have installed.&lt;/p&gt;

&lt;p&gt;Read more about the version check in our &lt;a href="https://about.gitlab.com/2015/05/07/version-check/"&gt;blog post about it.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can turn off the version check under Admin &amp;gt; Settings.&lt;/p&gt;

&lt;h2&gt;License keys for Enterprise Edition&lt;/h2&gt;

&lt;p&gt;GitLab Enterprise Edition used to live in a private repository, which was fine up
until now. However, with the addition of our package server, we want
to make it easier to start using GitLab Enterprise Edition.&lt;/p&gt;

&lt;p&gt;Rather than locking up the package repository of GitLab EE, we decided to
open up all the code and &lt;a href="https://packages.gitlab.com/gitlab/gitlab-ee"&gt;packages&lt;/a&gt; and start using license keys. The code
is still proprietary, but now is &lt;a href="https://gitlab.com/gitlab-org/gitlab-ee/"&gt;publicly viewable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This has several advantages. The installation of GitLab EE becomes as easy as
installing GitLab CE. You no longer needs access to specific repositories,
rather you can download it using the same methods as CE (including AWS/Azure templates, Docker images, etc).&lt;/p&gt;

&lt;p&gt;In addition, the code for Enterprise Edition is now becoming open to inspect
for everyone. This will make it easier to send enhancements and makes it easier
to do a trial of Enterprise Edition.&lt;/p&gt;

&lt;p&gt;Getting organizations to purchase a subscription after their trial expires or
at renewal time sometimes took a substantial effort from us.
We don&amp;#8217;t want to raise prices for customers that renew without prompting because
we need to invest more time in unresponsive customers.
Therefore we decided to introduce license keys that prompt customers automatically.
We regret the inconvenience that license keys introduce
but we think it is the best solution to keep prices low.&lt;/p&gt;

&lt;h2&gt;True-up model for subscriptions&lt;/h2&gt;

&lt;p&gt;The worst thing about license keys is that they can be very inflexible.
Most GitLab installations quickly grow in popularity within the organization.
Having to purchase a new license key every time this happens is very inefficient.
Also, we noticed that the majority of our customers didn&amp;#8217;t have a compliant subscription, for us this indicates that having to renew the subscription multiple times a year is very inconvenient.&lt;/p&gt;

&lt;p&gt;Therefore we will switch to a true-up model that allows you to grow now and pay later.
When you get a new license you should get it for your current number of active users.
For users that are added during the year you pay half price when you renew.&lt;/p&gt;

&lt;p&gt;So if you have 100 active users today you get a 100 user subscription.
Suppose that when you renew a year from now you have 300 active users.
You pay for a 300 user subscription and pay half a year for the 200 users that you added during the year.&lt;/p&gt;

&lt;h3&gt;Getting the license key&lt;/h3&gt;

&lt;p&gt;If you are currently a GitLab customer, you should have received your license
key already at the email you registered with your payment. You can also email
&lt;code&gt;sales at gitlab dot com&lt;/code&gt; to request it at any time.&lt;/p&gt;

&lt;p&gt;New subscribers will receive their license key automatically.&lt;/p&gt;

&lt;h3&gt;Installing the license key&lt;/h3&gt;

&lt;p&gt;To install the license, vist &lt;code&gt;/admin/license&lt;/code&gt; in your GitLab instance as an
admin. Here you can upload your &lt;code&gt;.gitlab-license&lt;/code&gt; file, which will instantly
unlock GitLab Enterprise Edition.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_11/license.png" alt="Installing your license"&gt;&lt;/p&gt;

&lt;p&gt;You can also download and review your current license here.&lt;/p&gt;

&lt;p&gt;Please note that we will release GitLab 7.10.5 soon, that will allow you to
upload the license key to your GitLab instance before upgrading, to avoid
unnecessary downtime.&lt;/p&gt;

&lt;h2&gt;Two-Factor Authentication for LDAP / Active Directory (EE-only)&lt;/h2&gt;

&lt;p&gt;Want to use two-factor authentication together with your LDAP or Active Directory
integration? With GitLab Enterprise Edition you can.&lt;/p&gt;

&lt;h2&gt;New GitLab CI Features&lt;/h2&gt;

&lt;p&gt;With the release of GitLab 7.11, we also updated GitLab CI to 7.11.
Some changes worth mentioning are an improved runners page,
public accessible build and commit pages for public projects
, a new backup/restore utility that will backup your CI database and
HipChat notifications!&lt;/p&gt;

&lt;h2&gt;Other awesome changes in GitLab CE&lt;/h2&gt;

&lt;p&gt;We can never cover all the new stuff in each GitLab release, but these
are worth to have a quick look at as well:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick quote-reply&lt;/strong&gt; You can now reply with a quotation by simply selecting text in an issue
or merge request and pressing &lt;code&gt;r&lt;/code&gt;. It will set the focus to the editing window
and have the quoted text already in it!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Atom feeds for all!&lt;/strong&gt; There is now an atom feed for each project!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Settings in admin UI&lt;/strong&gt; We moved default project and snippet visibility settings
to the admin web interface.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improved UI for mobile&lt;/strong&gt; GitLab is now better viewable on mobile!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WIP your MRs!&lt;/strong&gt; If you add &lt;code&gt;WIP&lt;/code&gt; or &lt;code&gt;[WIP]&lt;/code&gt; (work in progress) to the start of the title of a merge request,
it will be protected from merging now.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_11/wip.png" alt="WIP blocking the merge request of this blog post!"&gt;&lt;/p&gt;

&lt;p&gt;This release has more improvements, including security fixes, please check out &lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/CHANGELOG"&gt;the Changelog&lt;/a&gt; to see the all named changes.&lt;/p&gt;

&lt;h2&gt;Upgrade barometer&lt;/h2&gt;

&lt;p&gt;Coming from 7.10, the migrations in 7.11 are pretty fast (under 1 minute), but one of them is tricky:
we rename any existing users with names ending in a period (&amp;#8216;.&amp;#8217;).
This migration updates both the database and the filesystem and previous versions
of this migration have proven to be fragile.&lt;/p&gt;

&lt;p&gt;If you have no user namespaces with paths ending in &amp;#8216;.&amp;#8217; in your database and if you trust your users not to
create any until after you upgrade to GitLab 7.11 you can perform this upgrade online.
If not, we recommend to take downtime (this is what we did for gitlab.com).
You can find the current number of affected database records with the following command:&lt;/p&gt;

&lt;pre class="line-numbers"&gt;&lt;p class="line-number"&gt;1&lt;/p&gt;
&lt;/pre&gt;&lt;pre&gt;&lt;code class=""&gt;&lt;p class="line"&gt; sudo gitlab-rails runner "puts Namespace.where(type: nil).where(%q{path LIKE '%.'}).count"&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;




&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;If you are setting up a new GitLab installation please see the &lt;a href="https://www.gitlab.com/installation/"&gt;installing GitLab page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Updating&lt;/h2&gt;

&lt;p&gt;Check out our &lt;a href="https://about.gitlab.com/update/"&gt;update page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please note that cookbook-omnibus-gitlab, our Chef cookbook that installs/manages GitLab omnibus packages,
does not yet support packages.gitlab.com. See &lt;a href="https://gitlab.com/gitlab-org/cookbook-omnibus-gitlab/issues/8"&gt;this issue&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Enterprise Edition&lt;/h2&gt;

&lt;p&gt;The mentioned EE-only features and things like LDAP group support can be found in GitLab Enterprise Edition.
For a complete overview please have a look at the &lt;a href="http://www.gitlab.com/gitlab-ee/"&gt;feature list of GitLab EE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Access to GitLab Enterprise Edition is included with a &lt;a href="http://www.gitlab.com/pricing/"&gt;subscription&lt;/a&gt;.
No time to upgrade GitLab yourself?
A subscription also entitles you to our upgrade and installation services.&lt;/p&gt;



                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>GitLab 7.10.5 Released</title><link href="http://www.ciandcd.com/gitlab-7105-released.html" rel="alternate"></link><updated>2015-06-21T01:11:24+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlab-7105-released.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;GitLab 7.10.5 released&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;In GitLab 7.11 we have &lt;a href="https://about.gitlab.com/2015/05/22/gitlab-7-11-released/"&gt;introduced&lt;/a&gt;
the requirement of a license key for users of GitLab Enterprise Edition.&lt;/p&gt;

&lt;p&gt;This can cause a moment of downtime when upgrading, as you will need to upload
the license key before being able to push to the GitLab instance.&lt;/p&gt;

&lt;p&gt;With this patch release we&amp;#8217;re adding a license upload functionality that allows
you to upload your license in GitLab 7.10.5, preventing downtime when upgrading
to GitLab 7.11 Enterprise Edition.&lt;/p&gt;

&lt;p&gt;This patch release also includes a fix for GitLab Annex and patches a MySQL
vulnerability in GitLab CI.&lt;/p&gt;

&lt;p&gt;If you are not using GitLab Enterprise Edition,
you can skip this patch and go straight to &lt;a href="https://about.gitlab.com/2015/05/22/gitlab-7-11-released/"&gt;GitLab 7.11&lt;/a&gt;.&lt;/p&gt;

 


&lt;h2&gt;Upgrade barometer&lt;/h2&gt;

&lt;p&gt;This is a minor update, without any migrations.
No downtime is necessary.&lt;/p&gt;

&lt;h2&gt;Updating&lt;/h2&gt;

&lt;p&gt;To update, check out our &lt;a href="https://about.gitlab.com/update"&gt;update page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As Enterprise Edition user, if you want to update to 7.10.5 rather than straight to 7.11,
download and install the Omnibus package
&lt;a href="https://gitlab.com/subscribers/gitlab-ee/blob/master/doc/install/packages.md"&gt;at the old download location, here.&lt;/a&gt;.
For installations from source, use &lt;a href="https://gitlab.com/subscribers/gitlab-ee/blob/master/doc/update/patch_versions.md"&gt;this guide&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Enterprise Edition&lt;/h2&gt;

&lt;p&gt;Interested in GitLab Enterprise Edition?
For an overview of feature exclusive to GitLab Enterprise Edition please have a look at the &lt;a href="http://about.gitlab.com/features/#enterprise"&gt;features exclusive to GitLab EE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Access to GitLab Enterprise Edition is included with a &lt;a href="http://www.gitlab.com/pricing"&gt;subscription&lt;/a&gt;.
No time to upgrade GitLab yourself?
A subscription also entitles to our upgrade and installation services.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>GitLab 7.11.4 Released</title><link href="http://www.ciandcd.com/gitlab-7114-released.html" rel="alternate"></link><updated>2015-06-21T01:11:20+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlab-7114-released.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;GitLab 7.11.4 released&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;We&amp;#8217;ve released GitLab 7.11.4 for GitLab CE, EE and CI.&lt;/p&gt;

&lt;p&gt;It includes the following fixes for CE and EE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fix rendering of list bullets&lt;/li&gt;
&lt;li&gt;Force a &lt;code&gt;rel="nofollow"&lt;/code&gt; attribute on all external links in markdown&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For GitLab Enterprise Edition this patch release also fixes a bug in
git-annex. This fix was also included in the (unannounced) 7.11.3 patch.&lt;/p&gt;

 


&lt;h2&gt;Upgrade barometer&lt;/h2&gt;

&lt;p&gt;This is a minor update, without any migrations.
No downtime is necessary.&lt;/p&gt;

&lt;h2&gt;Updating&lt;/h2&gt;

&lt;p&gt;To update, check out our &lt;a href="https://about.gitlab.com/update"&gt;update page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Enterprise Edition&lt;/h2&gt;

&lt;p&gt;Interested in GitLab Enterprise Edition?
For an overview of feature exclusive to GitLab Enterprise Edition please have a look at the &lt;a href="http://about.gitlab.com/features/#enterprise"&gt;features exclusive to GitLab EE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Access to GitLab Enterprise Edition is included with a &lt;a href="http://www.gitlab.com/pricing"&gt;subscription&lt;/a&gt;.
No time to upgrade GitLab yourself?
A subscription also entitles to our upgrade and installation services.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>GitLab Subscription Terms Have Changed</title><link href="http://www.ciandcd.com/gitlab-subscription-terms-have-changed.html" rel="alternate"></link><updated>2015-06-21T01:11:16+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlab-subscription-terms-have-changed.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;GitLab subscription terms have changed&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;In an effort to reduce red tape when subscribing to GitLab Enterprise Edition, we&amp;#8217;ve made some changes to &lt;a href="https://about.gitlab.com/terms/#subscription"&gt;our subscription Terms&lt;/a&gt; that make them more digestible to potential customers.&lt;/p&gt;

 


&lt;p&gt;Here is a summary of the important changes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Grant of License clause that provides a limited, non-exclusive, non-transferable, non-sublicensable license to use GitLab Enterprise Edition;&lt;/li&gt;
&lt;li&gt;Clarification that suggestions, feedback and code submitted for inclusion in GitLab, becomes the property of GitLab;&lt;/li&gt;
&lt;li&gt;Clarification on the payment process, including the &amp;#8216;true-up&amp;#8217; payment model;&lt;/li&gt;
&lt;li&gt;Inclusion of GitLab&amp;#8217;s warranty that there are no trojans or the like in GitLab EE;&lt;/li&gt;
&lt;li&gt;A new paragraph relating to US Government matters;&lt;/li&gt;
&lt;li&gt;A change in governing law from the Netherlands to California, USA.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;These updated subscription terms do not apply retroactively.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>GitLab.com Outage on 2015-05-29</title><link href="http://www.ciandcd.com/gitlabcom-outage-on-2015-05-29.html" rel="alternate"></link><updated>2015-06-21T01:11:08+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlabcom-outage-on-2015-05-29.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;GitLab.com outage on 2015-05-29&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;GitLab.com suffered an outage from  2015-05-29 01:00 to 2015-05-29 02:34 (times in UTC).
In this blog post we will discuss what happened, why it took so long to recover the service, and what we are doing to reduce the likelihood and impact of such incidents.&lt;/p&gt;

 


&lt;h1&gt;Background&lt;/h1&gt;

&lt;p&gt;GitLab.com is provided and maintained by the team of GitLab B.V., the company behind GitLab.
On 2015-05-02 we performed a major infrastructure upgrade, moving GitLab.com from a single server to a small cluster of servers, consisting of a load balancer (running HAproxy), three workers (NGINX/Unicorn/Sidekiq/gitlab-shell) and a backend server (PostgreSQL/Redis/NFS).
This new infrastructure configuration improved the responsiveness of GitLab.com, at the expense of having more moving parts.&lt;/p&gt;

&lt;p&gt;GitLab.com is backed up using Amazon EBS snapshots.
To protect against inconsistent snapshots our backup script &amp;#8216;freezes&amp;#8217; the filesystem on the backend server with &lt;code&gt;fsfreeze&lt;/code&gt; prior to making EBS snapshots, and &amp;#8216;unfreezes&amp;#8217; the filesystem immediately after.&lt;/p&gt;

&lt;h1&gt;Timeline&lt;/h1&gt;

&lt;p&gt;Italic comments below are written with the knowledge of hindsight&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1:00 The GitLab.com backup script is activated by Cron on the backend server.
For unknown reasons, the backup script hangs/crashes before or during the &amp;#8216;unfreeze&amp;#8217; of the filesystem holding all user data.&lt;/li&gt;
&lt;li&gt;1:07 Our on-call engineer is paged by &lt;a href="http://status.gitlab.com"&gt;Pingdom&lt;/a&gt;.
The on-call engineer tries to diagnose the issue on the worker servers but is unable to diagnose the problem.
The issue was on the backend server, not on the workers.&lt;/li&gt;
&lt;li&gt;1:30 The on-call engineer decides to call in more help.
The other team members with access and knowledge to resolve the issue are all in Europe at this time, where it is 3:30/4:30am.&lt;/li&gt;
&lt;li&gt;1:45 A second engineer in Europe has been woken up and takes the lead on the investigation of the outage.
More workers are rebooted because they appear to be stuck.
It becomes apparent that the workers cannot mount the NFS share which holds all Git repository data.&lt;/li&gt;
&lt;li&gt;1:51 One of the engineers notices that the load on the backend server is more than 150. A normal value would be less than 5.&lt;/li&gt;
&lt;li&gt;2:10 The engineers give up on running commands on the workers to bring the NFS share back, and start investigating the backend server.
The engineers discuss whether they should reboot the backend server but they are unsure if it is safe given that this setup is fairly new.&lt;/li&gt;
&lt;li&gt;2:21 The engineers reboot the backend server.
The reboot is taking a long time.
The AWS &amp;#8216;reboot&amp;#8217; command first tries a soft reboot, and only does a hard reboot after a 4-minute timeout.
The soft reboot probably hung when it tried to shut down services that were trying to write to the &amp;#8216;frozen&amp;#8217; disk.&lt;/li&gt;
&lt;li&gt;2:30 The backend server has rebooted and the engineers regain SSH access to it.
The worker servers are able to mount the NFS share now but GitLab.com is still not functioning because the Postgres database server is not responding.
One of the engineers restarts Postgres on the backend server.
It may have been that Postgres was still busy performing crash recovery.&lt;/li&gt;
&lt;li&gt;2:34 Gitlab.com is available again.&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;Root causes&lt;/h1&gt;

&lt;p&gt;Although we cannot explain what went wrong with the backup script it is hard to come to another conclusion that something did go wrong with it.&lt;/p&gt;

&lt;p&gt;The length of the outage was caused by insufficient training and documentation for our on-call engineers following the infrastructure upgrade rolled out on May 2nd.&lt;/p&gt;

&lt;h1&gt;Next steps&lt;/h1&gt;

&lt;p&gt;We have removed the freeze/unfreeze steps from our backup script.
Because this (theoretically) increases the risk of occasional corrupt backups we have added a second backup strategy for our SQL data.
In the future we would like to have automatical validation of our GitLab.com backups.&lt;/p&gt;

&lt;p&gt;The day before this incident we decided the training was our most important priority.
We have started to do regular operations drills in one-on-one sessions with all of our on-call engineers.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Note on License Expiration in GitLab 7.10.5 EE</title><link href="http://www.ciandcd.com/note-on-license-expiration-in-gitlab-7105-ee.html" rel="alternate"></link><updated>2015-06-21T01:11:03+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:note-on-license-expiration-in-gitlab-7105-ee.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;Note on license expiration in GitLab 7.10.5 EE&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;If you&amp;#8217;re upgrading to GitLab Enterprise Edition 7.11, which introduces
licenses keys, you&amp;#8217;re probably planning to upgrade to 7.10.5 first.
This way you are able to &lt;a href="https://about.gitlab.com/2015/05/27/gitlab-7-dot-10-dot-5-released/"&gt;upload your license key in advance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of our customers notified us of a faulty description in the license
uploader in GitLab 7.10.5. Upon uploading, the license is checked properly,
however the text in the license view in the admin page in GitLab will show:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_10_5/wrong.png" alt="Wrong text"&gt;&lt;/p&gt;

&lt;p&gt;While it should look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/7_10_5/correct.png" alt="Correct text"&gt;&lt;/p&gt;

&lt;p&gt;This only occurs in GitLab 7.10.5 and does not affect functionality.
The license information is correctly shown in GitLab 7.11 and up.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments do not hesitate to comment below
or contact support.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>How GitLab Uses Unicorn and Unicorn-worker-killer</title><link href="http://www.ciandcd.com/how-gitlab-uses-unicorn-and-unicorn-worker-killer.html" rel="alternate"></link><updated>2015-06-21T01:10:58+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:how-gitlab-uses-unicorn-and-unicorn-worker-killer.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;How GitLab uses Unicorn and unicorn-worker-killer&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;We just wrote some new documentation on how Gitlab uses Unicorn and
unicorn-worker-killer, available on &lt;a href="http://doc.gitlab.com/ce/operations/unicorn.html"&gt;doc.gitlab.com&lt;/a&gt; but
also included below. We would love to hear from the community if you have other
questions so we can improve this documentation resource!&lt;/p&gt;

 


&lt;p&gt;Update 19:29 CEST: made link to doc.gitlab.com more specific.&lt;/p&gt;

&lt;h1&gt;Understanding Unicorn and unicorn-worker-killer&lt;/h1&gt;

&lt;h2&gt;Unicorn&lt;/h2&gt;

&lt;p&gt;GitLab uses &lt;a href="http://unicorn.bogomips.org/"&gt;Unicorn&lt;/a&gt;, a pre-forking Ruby web
server, to handle web requests (web browsers and Git HTTP clients). Unicorn is
a daemon written in Ruby and C that can load and run a Ruby on Rails
application; in our case the Rails application is GitLab Community Edition or
GitLab Enterprise Edition.&lt;/p&gt;

&lt;p&gt;Unicorn has a multi-process architecture to make better use of available CPU
cores (processes can run on different cores) and to have stronger fault
tolerance (most failures stay isolated in only one process and cannot take down
GitLab entirely). On startup, the Unicorn &amp;#8216;master&amp;#8217; process loads a clean Ruby
environment with the GitLab application code, and then spawns &amp;#8216;workers&amp;#8217; which
inherit this clean initial environment. The &amp;#8216;master&amp;#8217; never handles any
requests, that is left to the workers. The operating system network stack
queues incoming requests and distributes them among the workers.&lt;/p&gt;

&lt;p&gt;In a perfect world, the master would spawn its pool of workers once, and then
the workers handle incoming web requests one after another until the end of
time. In reality, worker processes can crash or time out: if the master notices
that a worker takes too long to handle a request it will terminate the worker
process with SIGKILL (&amp;#8216;kill -9&amp;#8217;). No matter how the worker process ended, the
master process will replace it with a new &amp;#8216;clean&amp;#8217; process again. Unicorn is
designed to be able to replace &amp;#8216;crashed&amp;#8217; workers without dropping user
requests.&lt;/p&gt;

&lt;p&gt;This is what a Unicorn worker timeout looks like in &lt;code&gt;unicorn_stderr.log&lt;/code&gt;. The
master process has PID 56227 below.&lt;/p&gt;

&lt;pre class="line-numbers"&gt;&lt;p class="line-number"&gt;1&lt;/p&gt;
&lt;p class="line-number"&gt;2&lt;/p&gt;
&lt;p class="line-number"&gt;3&lt;/p&gt;
&lt;p class="line-number"&gt;4&lt;/p&gt;
&lt;/pre&gt;&lt;pre&gt;&lt;code class=""&gt;&lt;p class="line"&gt;[2015-06-05T10:58:08.660325 #56227] ERROR -- : worker=10 PID:53009 timeout (61s &amp;gt; 60s), killing
&lt;/p&gt;&lt;p class="line"&gt;[2015-06-05T10:58:08.699360 #56227] ERROR -- : reaped #&amp;lt;Process::Status: pid 53009 SIGKILL (signal 9)&amp;gt; worker=10
&lt;/p&gt;&lt;p class="line"&gt;[2015-06-05T10:58:08.708141 #62538]  INFO -- : worker=10 spawned pid=62538
&lt;/p&gt;&lt;p class="line"&gt;[2015-06-05T10:58:08.708824 #62538]  INFO -- : worker=10 ready&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;Tunables&lt;/h3&gt;

&lt;p&gt;The main tunables for Unicorn are the number of worker processes and the
request timeout after which the Unicorn master terminates a worker process.
See the &lt;a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/unicorn.md"&gt;omnibus-gitlab Unicorn settings
documentation&lt;/a&gt;
if you want to adjust these settings.&lt;/p&gt;

&lt;h2&gt;unicorn-worker-killer&lt;/h2&gt;

&lt;p&gt;GitLab has memory leaks. These memory leaks manifest themselves in long-running
processes, such as Unicorn workers. (The Unicorn master process is not known to
leak memory, probably because it does not handle user requests.)&lt;/p&gt;

&lt;p&gt;To make these memory leaks manageable, GitLab comes with the
&lt;a href="https://github.com/kzk/unicorn-worker-killer"&gt;unicorn-worker-killer gem&lt;/a&gt;. This
gem &lt;a href="http://en.wikipedia.org/wiki/Monkey_patch"&gt;monkey-patches&lt;/a&gt; the Unicorn
workers to do a memory self-check after every 16 requests. If the memory of the
Unicorn worker exceeds a pre-set limit then the worker process exits. The
Unicorn master then automatically replaces the worker process.&lt;/p&gt;

&lt;p&gt;This is a robust way to handle memory leaks: Unicorn is designed to handle
workers that &amp;#8216;crash&amp;#8217; so no user requests will be dropped. The
unicorn-worker-killer gem is designed to only terminate a worker process in
between requests, so no user requests are affected.&lt;/p&gt;

&lt;p&gt;This is what a Unicorn worker memory restart looks like in unicorn_stderr.log.
You see that worker 4 (PID 125918) is inspecting itself and decides to exit.
The threshold memory value was 254802235 bytes, about 250MB. With GitLab this
threshold is a random value between 200 and 250 MB.  The master process (PID
117565) then reaps the worker process and spawns a new &amp;#8216;worker 4&amp;#8217; with PID
127549.&lt;/p&gt;

&lt;pre class="line-numbers"&gt;&lt;p class="line-number"&gt;1&lt;/p&gt;
&lt;p class="line-number"&gt;2&lt;/p&gt;
&lt;p class="line-number"&gt;3&lt;/p&gt;
&lt;p class="line-number"&gt;4&lt;/p&gt;
&lt;p class="line-number"&gt;5&lt;/p&gt;
&lt;/pre&gt;&lt;pre&gt;&lt;code class=""&gt;&lt;p class="line"&gt;[2015-06-05T12:07:41.828374 #125918]  WARN -- : #&amp;lt;Unicorn::HttpServer:0x00000002734770&amp;gt;: worker (pid: 125918) exceeds memory limit (256413696 bytes &amp;gt; 254802235 bytes)
&lt;/p&gt;&lt;p class="line"&gt;[2015-06-05T12:07:41.828472 #125918]  WARN -- : Unicorn::WorkerKiller send SIGQUIT (pid: 125918) alive: 23 sec (trial 1)
&lt;/p&gt;&lt;p class="line"&gt;[2015-06-05T12:07:42.025916 #117565]  INFO -- : reaped #&amp;lt;Process::Status: pid 125918 exit 0&amp;gt; worker=4
&lt;/p&gt;&lt;p class="line"&gt;[2015-06-05T12:07:42.034527 #127549]  INFO -- : worker=4 spawned pid=127549
&lt;/p&gt;&lt;p class="line"&gt;[2015-06-05T12:07:42.035217 #127549]  INFO -- : worker=4 ready&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;One other thing that stands out in the log snippet above, taken from
Gitlab.com, is that &amp;#8216;worker 4&amp;#8217; was serving requests for only 23 seconds. This
is a normal value for our current GitLab.com setup and traffic.&lt;/p&gt;

&lt;p&gt;The high frequency of Unicorn memory restarts on some GitLab sites can be a
source of confusion for administrators. Usually they are a &lt;a href="http://en.wikipedia.org/wiki/Red_herring"&gt;red
herring&lt;/a&gt;.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Implementing .gitlab-ci.yml</title><link href="http://www.ciandcd.com/implementing-gitlab-ciyml.html" rel="alternate"></link><updated>2015-06-21T01:10:55+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:implementing-gitlab-ciyml.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;Implementing .gitlab-ci.yml&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;We &lt;a href="https://about.gitlab.com/2015/05/06/why-were-replacing-gitlab-ci-jobs-with-gitlab-ci-dot-yml/"&gt;wrote&lt;/a&gt; about why we&amp;#8217;re replacing GitLab CI jobs with a &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; file.
As we&amp;#8217;ve started on implementing this large change, we wanted to share the details
of that process with you and would love to hear what you think.&lt;/p&gt;

 


&lt;p&gt;To recap the &lt;a href="https://about.gitlab.com/2015/05/06/why-were-replacing-gitlab-ci-jobs-with-gitlab-ci-dot-yml/"&gt;previous article&lt;/a&gt;:
currently you are required to write out your CI jobs in GitLab CI&amp;#8217;s interface.
We&amp;#8217;re replacing this with a single file &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;, that you place in the root
of your repository.&lt;/p&gt;

&lt;h2&gt;Schema change&lt;/h2&gt;

&lt;p&gt;Currently, on a push to GitLab, GitLab sends a web-hook to the CI Coordinator.
The coordinator creates a build based on the jobs that are defined in its UI,
which can then be executed by the connected Runners.&lt;/p&gt;

&lt;p&gt;In the new schema, GitLab sends the web-hook and the &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; contents
to the CI Coordinator, which creates builds based on the yml file. In turn,
these builds are executed by the Runners as before.&lt;/p&gt;

&lt;h2&gt;Migrating to new style&lt;/h2&gt;

&lt;p&gt;Keeping two different ways of doing things would be a strain on development and
support, not to mention confusing. So we&amp;#8217;re not just deprecating the old style
of defining jobs, we&amp;#8217;re removing it entirely and will migrate existing jobs.&lt;/p&gt;

&lt;p&gt;Upon upgrading your existing jobs defined in the GitLab CI Coordinator will be
converted into a YAML file with the new syntax. You can download this file at any
time from the project settings.&lt;/p&gt;

&lt;p&gt;When the GitLab webhook triggers and doesn&amp;#8217;t transmit the content from &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;,
the coordinator will use the converted YAML file instead.&lt;/p&gt;

&lt;p&gt;This makes migrating to the new style very easy. You can start by simply copy-pasting
the contents of the converted YAML file to the root of your repository. Existing projects
will continue to build successfully, yet new projects do not have the option to
use anything else.&lt;/p&gt;

&lt;h2&gt;An example &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;To get an idea of how the &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; will look, we&amp;#8217;ve prepared an example
for a Ruby on Rails project (such as GitLab itself). Of course, this is due to
change as we&amp;#8217;re still working on this.&lt;/p&gt;

&lt;pre class="line-numbers"&gt;&lt;p class="line-number"&gt;1&lt;/p&gt;
&lt;p class="line-number"&gt;2&lt;/p&gt;
&lt;p class="line-number"&gt;3&lt;/p&gt;
&lt;p class="line-number"&gt;4&lt;/p&gt;
&lt;p class="line-number"&gt;5&lt;/p&gt;
&lt;p class="line-number"&gt;6&lt;/p&gt;
&lt;p class="line-number"&gt;7&lt;/p&gt;
&lt;p class="line-number"&gt;8&lt;/p&gt;
&lt;p class="line-number"&gt;9&lt;/p&gt;
&lt;p class="line-number"&gt;10&lt;/p&gt;
&lt;p class="line-number"&gt;11&lt;/p&gt;
&lt;p class="line-number"&gt;12&lt;/p&gt;
&lt;p class="line-number"&gt;13&lt;/p&gt;
&lt;p class="line-number"&gt;14&lt;/p&gt;
&lt;p class="line-number"&gt;15&lt;/p&gt;
&lt;p class="line-number"&gt;16&lt;/p&gt;
&lt;p class="line-number"&gt;17&lt;/p&gt;
&lt;p class="line-number"&gt;18&lt;/p&gt;
&lt;p class="line-number"&gt;19&lt;/p&gt;
&lt;p class="line-number"&gt;20&lt;/p&gt;
&lt;p class="line-number"&gt;21&lt;/p&gt;
&lt;p class="line-number"&gt;22&lt;/p&gt;
&lt;p class="line-number"&gt;23&lt;/p&gt;
&lt;p class="line-number"&gt;24&lt;/p&gt;
&lt;p class="line-number"&gt;25&lt;/p&gt;
&lt;p class="line-number"&gt;26&lt;/p&gt;
&lt;p class="line-number"&gt;27&lt;/p&gt;
&lt;p class="line-number"&gt;28&lt;/p&gt;
&lt;p class="line-number"&gt;29&lt;/p&gt;
&lt;p class="line-number"&gt;30&lt;/p&gt;
&lt;p class="line-number"&gt;31&lt;/p&gt;
&lt;p class="line-number"&gt;32&lt;/p&gt;
&lt;p class="line-number"&gt;33&lt;/p&gt;
&lt;p class="line-number"&gt;34&lt;/p&gt;
&lt;/pre&gt;&lt;pre&gt;&lt;code class=""&gt;&lt;p class="line"&gt;# Refs to skip
&lt;/p&gt;&lt;p class="line"&gt;skip_refs: &amp;#8220;deploy*&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;# Run before each script
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;# Refs to skip
&lt;/p&gt;&lt;p class="line"&gt;skip_refs: &amp;#8220;deploy*&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;# Run before each script
&lt;/p&gt;&lt;p class="line"&gt;before_script:
&lt;/p&gt;&lt;p class="line"&gt;  - export PATH=$HOME/bin:/usr/local/bin:/usr/bin:/bin
&lt;/p&gt;&lt;p class="line"&gt;  - gem install bundler
&lt;/p&gt;&lt;p class="line"&gt;  - cp config/database.yml.mysql config/database.yml
&lt;/p&gt;&lt;p class="line"&gt;  - cp config/gitlab.yml.example config/gitlab.yml
&lt;/p&gt;&lt;p class="line"&gt;  - touch log/application.log
&lt;/p&gt;&lt;p class="line"&gt;  - touch log/test.log
&lt;/p&gt;&lt;p class="line"&gt;  - bundle install --without postgres production --jobs $(nproc)
&lt;/p&gt;&lt;p class="line"&gt;  - &amp;#8220;bundle exec rake db:create RAILS_ENV=test&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;# Parallel jobs, each line is a parallel build
&lt;/p&gt;&lt;p class="line"&gt;jobs:
&lt;/p&gt;&lt;p class="line"&gt;  - script: &amp;#8220;rake spec&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;    runner: &amp;#8220;ruby,postgres&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;    name: &amp;#8220;Rspec&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;  - script: &amp;#8220;rake spinach&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;    runner: &amp;#8220;ruby,mysql&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;    name: &amp;#8220;Spinach&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;    tags: true
&lt;/p&gt;&lt;p class="line"&gt;    branches: false
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;# Parallel deploy jobs
&lt;/p&gt;&lt;p class="line"&gt;on_success:
&lt;/p&gt;&lt;p class="line"&gt;  - &amp;#8220;cap deploy production&amp;#8221;
&lt;/p&gt;&lt;p class="line"&gt;  - &amp;#8220;cap deploy staging&amp;#8221;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;UPDATE&lt;/h2&gt;

&lt;p&gt;Dmitriy and Sytse spend some time thinking about file syntax.
Scripting should be simple and memorable. Thats why we come with better proposal:&lt;/p&gt;

&lt;pre class="line-numbers"&gt;&lt;p class="line-number"&gt;1&lt;/p&gt;
&lt;p class="line-number"&gt;2&lt;/p&gt;
&lt;p class="line-number"&gt;3&lt;/p&gt;
&lt;p class="line-number"&gt;4&lt;/p&gt;
&lt;p class="line-number"&gt;5&lt;/p&gt;
&lt;p class="line-number"&gt;6&lt;/p&gt;
&lt;p class="line-number"&gt;7&lt;/p&gt;
&lt;p class="line-number"&gt;8&lt;/p&gt;
&lt;p class="line-number"&gt;9&lt;/p&gt;
&lt;p class="line-number"&gt;10&lt;/p&gt;
&lt;p class="line-number"&gt;11&lt;/p&gt;
&lt;p class="line-number"&gt;12&lt;/p&gt;
&lt;p class="line-number"&gt;13&lt;/p&gt;
&lt;p class="line-number"&gt;14&lt;/p&gt;
&lt;p class="line-number"&gt;15&lt;/p&gt;
&lt;p class="line-number"&gt;16&lt;/p&gt;
&lt;p class="line-number"&gt;17&lt;/p&gt;
&lt;p class="line-number"&gt;18&lt;/p&gt;
&lt;p class="line-number"&gt;19&lt;/p&gt;
&lt;p class="line-number"&gt;20&lt;/p&gt;
&lt;p class="line-number"&gt;21&lt;/p&gt;
&lt;p class="line-number"&gt;22&lt;/p&gt;
&lt;p class="line-number"&gt;23&lt;/p&gt;
&lt;p class="line-number"&gt;24&lt;/p&gt;
&lt;p class="line-number"&gt;25&lt;/p&gt;
&lt;p class="line-number"&gt;26&lt;/p&gt;
&lt;p class="line-number"&gt;27&lt;/p&gt;
&lt;p class="line-number"&gt;28&lt;/p&gt;
&lt;p class="line-number"&gt;29&lt;/p&gt;
&lt;p class="line-number"&gt;30&lt;/p&gt;
&lt;p class="line-number"&gt;31&lt;/p&gt;
&lt;p class="line-number"&gt;32&lt;/p&gt;
&lt;p class="line-number"&gt;33&lt;/p&gt;
&lt;p class="line-number"&gt;34&lt;/p&gt;
&lt;p class="line-number"&gt;35&lt;/p&gt;
&lt;p class="line-number"&gt;36&lt;/p&gt;
&lt;p class="line-number"&gt;37&lt;/p&gt;
&lt;p class="line-number"&gt;38&lt;/p&gt;
&lt;p class="line-number"&gt;39&lt;/p&gt;
&lt;/pre&gt;&lt;pre&gt;&lt;code class=""&gt;&lt;p class="line"&gt;before_script:
&lt;/p&gt;&lt;p class="line"&gt;  - gem install bundler
&lt;/p&gt;&lt;p class="line"&gt;  - bundle install
&lt;/p&gt;&lt;p class="line"&gt;  - bundle exec rake db:create
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;rspec:
&lt;/p&gt;&lt;p class="line"&gt;  test: "rake spec"
&lt;/p&gt;&lt;p class="line"&gt;  tags:
&lt;/p&gt;&lt;p class="line"&gt;    - ruby
&lt;/p&gt;&lt;p class="line"&gt;    - postgres
&lt;/p&gt;&lt;p class="line"&gt;  only:
&lt;/p&gt;&lt;p class="line"&gt;    - branches
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;spinach:
&lt;/p&gt;&lt;p class="line"&gt;  test: "rake spinach"
&lt;/p&gt;&lt;p class="line"&gt;  tags:
&lt;/p&gt;&lt;p class="line"&gt;    - ruby
&lt;/p&gt;&lt;p class="line"&gt;    - mysql
&lt;/p&gt;&lt;p class="line"&gt;  except:
&lt;/p&gt;&lt;p class="line"&gt;    - tags
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;staging:
&lt;/p&gt;&lt;p class="line"&gt;  deploy: "cap deploy stating"
&lt;/p&gt;&lt;p class="line"&gt;  tags:
&lt;/p&gt;&lt;p class="line"&gt;    - capistrano
&lt;/p&gt;&lt;p class="line"&gt;    - debian
&lt;/p&gt;&lt;p class="line"&gt;  except:
&lt;/p&gt;&lt;p class="line"&gt;    - stable
&lt;/p&gt;&lt;p class="line"&gt;
&lt;/p&gt;&lt;p class="line"&gt;production:
&lt;/p&gt;&lt;p class="line"&gt;  deploy:
&lt;/p&gt;&lt;p class="line"&gt;    - cap deploy production
&lt;/p&gt;&lt;p class="line"&gt;    - cap notify
&lt;/p&gt;&lt;p class="line"&gt;  tags:
&lt;/p&gt;&lt;p class="line"&gt;    - capistrano
&lt;/p&gt;&lt;p class="line"&gt;    - debian
&lt;/p&gt;&lt;p class="line"&gt;  only:
&lt;/p&gt;&lt;p class="line"&gt;    - master
&lt;/p&gt;&lt;p class="line"&gt;    - /^deploy-.*$/&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt;


&lt;h2&gt;Contribute&lt;/h2&gt;

&lt;p&gt;GitLab is nothing without its community.
Contribute or follow the development in the &lt;a href="https://gitlab.com/gitlab-org/gitlab-ci/commit/c2c9236cde807e98ff9571f8d23ac4def75eb9ba"&gt;GitLab CI repository&lt;/a&gt;.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Did You Install GitLab From Source? Check Your Git Version</title><link href="http://www.ciandcd.com/did-you-install-gitlab-from-source-check-your-git-version.html" rel="alternate"></link><updated>2015-06-21T01:10:51+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:did-you-install-gitlab-from-source-check-your-git-version.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;Did you install GitLab from source? Check your Git version&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;Although the preferred way to install GitLab is to use our &lt;a href="/downloads"&gt;omnibus
packages&lt;/a&gt;, you can also install GitLab Community Edition or
Enterprise Edition &amp;#8216;from source&amp;#8217;. If you used this installation method, and if
you compiled Git from source in the process then please check whether your Git
version defends against Git vulnerability CVE-2014-9390. This issue does not
apply to our Omnibus packages (DEB or RPM).&lt;/p&gt;

 


&lt;p&gt;Although &lt;a href="/2014/12/19/gitlab-not-affected-by-CVE-2014-9390-git-vulnerability/"&gt;GitLab itself is not affected by
CVE-2014-9390&lt;/a&gt;,
a GitLab server may be used to deliver &amp;#8216;poisoned&amp;#8217; Git repositories to users on
vulnerable systems. Upgrading Git on your GitLab server stops users from
pushing poisoned repositories to your GitLab server.&lt;/p&gt;

&lt;p&gt;Due to an oversight, the &lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/install/installation.md"&gt;guide for installing GitLab from
source&lt;/a&gt;
still contained instructions telling administrators to install Git 2.1.2 if the
version of Git provided by their Linux distribution was too old. Git 2.1.2 does
not defend against CVE-2014-9390.&lt;/p&gt;

&lt;p&gt;If your GitLab server uses &lt;code&gt;/usr/local/bin/git&lt;/code&gt; please check your Git version
using the instructions in this &lt;a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/update/7.11-to-7.12.md#0-double-check-your-git-version"&gt;upgrade
guide&lt;/a&gt;.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Changes to Enterprise Edition Subscription Pricing</title><link href="http://www.ciandcd.com/changes-to-enterprise-edition-subscription-pricing.html" rel="alternate"></link><updated>2015-06-21T01:10:46+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:changes-to-enterprise-edition-subscription-pricing.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;Changes to Enterprise Edition subscription pricing&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;Today we are announcing two changes to GitLab Enterprise Edition subscription pricing.
The changes are intended to better reflect the value of each offering and
ensure our subscription options cater to the needs of different organizations.&lt;/p&gt;

&lt;p&gt;In short, our basic subscription is now $19,10 more expensive, but in 10-user packs.
Our Plus subscription is now $100 more affordable. Standard and terms remain unchanged.&lt;/p&gt;

 


&lt;p&gt;As of today (June 12, 2015) the following will take affect:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Basic Subscriptions will cost $390 per year for a 10-user pack ($39 per user / per year).
Current Basic Subscribers will be offered a 25% discount on this new pricing at their next renewal.
However, new pricing will apply to subsequent renewals and any additional user packs.
Basic subscriptions are now available in 10-user packs, making it slightly more
affordable for small teams.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Plus Subscriptions will cost $14,900 for a 100-user pack ($149 per user / per year).
Current Plus subscribers will receive a prorated refund on the price differece.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are no changes in the software features or service level of Basic or Plus subscriptions,
which you can view on our &lt;a href="https://about.gitlab.com/pricing/"&gt;website here&lt;/a&gt;.
Standard Subscription pricing will also remain unchanged at $4,900 per year for
each 100-user pack ($49 per user / per year).&lt;/p&gt;

&lt;p&gt;All current quotes will be honored until their expiration (60 days from issue date)
but the new pricing will apply to any subsequent orders, including renewals.&lt;/p&gt;

&lt;p&gt;Our goal is to keep GitLab the most affordable enterprise grade development platform available.
These changes should not have any significant effect on our ability to achieve that.
We felt our Basic plan was underpriced and Plus plan was overpriced.
These changes reduce the price difference between them.&lt;/p&gt;

&lt;p&gt;If you have questions about the changes or about pricing in general,
please contact our sales team at &lt;a href="mailto:sales@gitlab.com."&gt;sales@gitlab.com.&lt;/a&gt;&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Feature Highlight: Approve Merge Request</title><link href="http://www.ciandcd.com/feature-highlight-approve-merge-request.html" rel="alternate"></link><updated>2015-06-21T01:10:42+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:feature-highlight-approve-merge-request.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;Feature Highlight: Approve Merge Request&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;With less than a week until GitLab 7.12, we&amp;#8217;ve got a nice preview for you today:
Merge Request Approvals.&lt;/p&gt;

&lt;p&gt;Usually you accept a merge request the moment it is ready and reviewed.
But in some cases you want to make sure that every merge request is reviewed
and signed off by several people before merging it.
With GitLab Enterprise Edition 7.12, you can enforce such a workflow
that requires multiple reviewers with the new Merge Request Approval feature.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/feature_approval/mr.png" alt="approve_merge_request"&gt;&lt;/p&gt;

 


&lt;p&gt;To enable approvals, go to project settings page and set the
&amp;#8220;Approvals required&amp;#8221; field to a numeric value. For example, if you set it to &lt;code&gt;3&lt;/code&gt;
each merge request has to receive 3 approvals from different people
before it can be merged through the user interface.&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/feature_approval/settings.png" alt="approve_setting"&gt;&lt;/p&gt;

&lt;p&gt;After setting the approval, you will see an &lt;code&gt;Approve&lt;/code&gt; button on merge requests,
rather than an &lt;code&gt;Accept&lt;/code&gt; button. Once the merge request has enough approvals,
you will be able to merge it as usual.&lt;/p&gt;

&lt;p&gt;We&amp;#8217;d love to hear what you think of this new feature in the comments below.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>GitLab.com and Logjam</title><link href="http://www.ciandcd.com/gitlabcom-and-logjam.html" rel="alternate"></link><updated>2015-06-21T01:10:39+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:gitlabcom-and-logjam.html</id><summary type="html">&lt;div&gt;&lt;h1 class="title"&gt;GitLab.com and Logjam&lt;/h1&gt;
                     
                    
                  

                  &lt;p&gt;We&amp;#8217;ve previously announced &lt;a href="https://about.gitlab.com/2015/05/21/security-advisory-for-logjam-vulnerability/"&gt;security advisory for Logjam vulnerability&lt;/a&gt;. In that announcement we&amp;#8217;ve mentioned that GitLab.com is using 1024-bit DH groups to retain compatibility with older Java-based clients.&lt;/p&gt;

&lt;p&gt;We&amp;#8217;ve updated the default/recommended SSL ciphers for all GitLab installations and implemented new ciphers on GitLab.com.&lt;/p&gt;

 


&lt;p&gt;After some reasearch and testing we&amp;#8217;ve decided to change the SSL cipher suite served by the web server/load balancer.&lt;/p&gt;

&lt;p&gt;This decision was made after weighing on the trade-offs between having the stronger DH params and denying access to Java 6 based clients.&lt;/p&gt;

&lt;h4&gt;Using 2048-bit DHE params&lt;/h4&gt;

&lt;p&gt;Generating the 2048-bit DHE params was advised to help against the Logjam vulnerability. While this is a way to go for most servers, with GitLab.com we have to keep in mind that we have users using older Java-based clients.
Adopting the stronger params suites would prevent those users using GitLab.com completely.
Although the number of these users is not high, denying them access does not seem like an option.&lt;/p&gt;

&lt;h4&gt;Removing DHE suites&lt;/h4&gt;

&lt;p&gt;DHE suites have a couple of issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://community.qualys.com/blogs/securitylabs/2013/06/25/ssl-labs-deploying-forward-secrecy"&gt;DHE is slow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Not all browsers support all the necessary suites&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;One advantage of having DHE together with ECDHE suites is that this allows forward secrecy to all clients.&lt;/p&gt;

&lt;p&gt;We then turned to investigating how others are handling this issue and we found out that, for example, Google sites mostly &lt;a href="https://www.ssllabs.com/ssltest/analyze.html?d=www.google.com"&gt;do not have DHE suites in their configuration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With this in mind we&amp;#8217;ve tried removing the DHE suites and the result was as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All major browsers and clients retain forward secrecy using ECDHE&lt;/li&gt;
&lt;li&gt;SSL labs score went from B to A&lt;/li&gt;
&lt;li&gt;There is no forward secrecy for Android 2.3.7, Java 6 and OpenSSL 0.9.8&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;After considering the trade-offs, we&amp;#8217;ve decided to remove the DHE suites from our cipher suite on GitLab.com.&lt;/p&gt;

&lt;p&gt;Forward secrecy is now denied for Android 2.3.7, Java 6 and OpenSSL 0.9.8 but we suspect that number of users affected will be extremely low.&lt;/p&gt;

&lt;p&gt;We have also updated the recommended configurations for omnibus-gitlab packages and GitLab installation from source.&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Highlights to My First Remote Job</title><link href="http://www.ciandcd.com/highlights-to-my-first-remote-job.html" rel="alternate"></link><updated>2015-06-21T01:10:35+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:highlights-to-my-first-remote-job.html</id><summary type="html">&lt;div&gt;&lt;p&gt;Some time ago, GitLab&amp;#8217;s CEO Sytse wrote &lt;a href="https://about.gitlab.com/2015/04/08/the-remote-manifesto/"&gt;The Remote Manifesto&lt;/a&gt;. It inspired me to write about it from an employee&amp;#8217;s perspective.&lt;/p&gt;

&lt;p&gt;I started working with GitLab 2 months ago and it has been quite an interesting experience to work remotely with a team that&amp;#8217;s spread out in the world.&lt;/p&gt;

 


&lt;p&gt;I have been working from home for a while, with freelance jobs, but it was very different to today, that I am part of a remote team. Here are the highlights of my experience so far:&lt;/p&gt;

&lt;h2&gt;Learning how to communicate&lt;/h2&gt;

&lt;p&gt;It was hard at the beginning to communicate with my team. I hadn&amp;#8217;t met them in person and if I had a doubt about something, I had to go to Slack to find the person who seemed the nicest and ask him. I was shy to write people to ask for their help all the time, but I learned that it is &amp;#8220;the way&amp;#8221; to learn and to stay communicated in a remote job. I learned not to be afraid to ask and to provide as much context as I could, trying not to include so many links without information.&lt;/p&gt;

&lt;h2&gt;Avoiding interruptions&lt;/h2&gt;

&lt;p&gt;So it is great to have coworkers and being with people, but they usually talk with each other, they are friendly and they get you distracted. I love working from home. I got myself nice headphones and I wear them when I don&amp;#8217;t want anybody at home to distract me. I think I can focus more and get into my &amp;#8220;zone&amp;#8221; easier.&lt;/p&gt;

&lt;h2&gt;Morning calls in my PJs&lt;/h2&gt;

&lt;p&gt;The first few days I would wake up really early to look fresh and dressed up for my morning call with the team. Then, I realized that Hangouts won&amp;#8217;t show the difference, so I learned to wake up, fix some coffee, sit down and work in my PJs all morning and then have a late shower during a brake. It is absolutely comfortable and fun, but it&amp;#8217;s important to learn to be disciplined. No matter how you look or if you are in bed, you need to get into the mindset of working and have a disciplined productive day.&lt;/p&gt;

&lt;h2&gt;It&amp;#8217;s all about trust before they can see results&lt;/h2&gt;

&lt;p&gt;Trust is a strong word and for me, it is what I feel about having a remote job. They trust that I work and that I use my time wisely. I have been learning to be more efficient, but since GitLab is very technical and I&amp;#8217;ve had to learn so much, my speed has been very slowly increasing. I believe they trust that I am putting all my efforts into my job and that even though nobody is next to me looking at me working, I am doing my job. That makes me work more because when somebody trusts you, you don&amp;#8217;t want to disappoint them&lt;/p&gt;

&lt;h2&gt;Find a comfortable place where you can be productive&lt;/h2&gt;

&lt;p&gt;I have been traveling for a couple of years and when I started, I would just try to find a comfortable  and cheap place to stay at, close to a yoga studio. Now, I find myself looking for an Airbnb with a good wifi connection and a comfortable desk or table. The rest is second. This is very important for my mental and physical health and I believe it&amp;#8217;s one of the most important things to make sure you have. If I can&amp;#8217;t find this, I will look for a co-working space or a working cafe. It is important to be able to sit comfortably and stay connected with no distractions.&lt;/p&gt;

&lt;h2&gt;I am able to travel&lt;/h2&gt;

&lt;p&gt;This is my favorite highlight. I used to work in the traditional corporate world, which helped me save some money and start traveling with it. When I was running out of savings, I thought that my travels had to end soon. The fact that I could work remotely was one for the best things that could happen to me, since it allows me to work from anywhere and to see the world. I can also spend quality time with my dog and it lets me take care of her.&lt;/p&gt;

&lt;p&gt;So, are you thinking about applying for a remote job? Do it! It&amp;#8217;s awesome!&lt;/p&gt;

&lt;p&gt;By the way, in Gitlab we&amp;#8217;re always &lt;a href="https://about.gitlab.com/jobs/"&gt;hiring&lt;/a&gt;!&lt;/p&gt;

                  &lt;a&gt;&lt;/a&gt;&lt;p&gt;Install GitLab on your own server in 2 minutes &lt;a href="/downloads" id="dl-partial"&gt;Let's do it!&lt;/a&gt; &lt;/p&gt;&lt;a href="/downloads" class="btn btn-block btn-lg btn-purple visible-xs" id="dl-partial-sm"&gt;
  Install GitLab on your own server in 2 minutes
&lt;/a&gt;


                  
                  &lt;p&gt;&amp;#8594; &lt;a href="/blog/archives.html"&gt;Browse all posts&lt;/a&gt;&lt;/p&gt;

                  &lt;strong&gt;&lt;a href="https://twitter.com/gitlab"&gt;@gitlab&lt;/a&gt;&lt;/strong&gt;
    on Twitter.

    &lt;a&gt;&lt;/a&gt;&lt;p&gt;For the latest and most detailed news followon Twitter. &lt;a href="/atom.xml" class="rss-btn"&gt;
      
    &lt;/a&gt; &lt;/p&gt;&lt;p&gt;Get every GitLab blog post and stay up to date.&lt;/p&gt;
     
    &lt;p id="mc_embed_signup" class="newsletter-form"&gt;
       
    &lt;/p&gt;
     

  &lt;p id="disqus_thread"&gt;&lt;/p&gt;
                   
                  Please enable JavaScript to view the &amp;lt;a href="http://disqus.com/?ref_noscript"&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;
                &lt;/div&gt;</summary></entry><entry><title>Helix Versioning Engine for Hg Users</title><link href="http://www.ciandcd.com/helix-versioning-engine-for-hg-users.html" rel="alternate"></link><updated>2015-06-21T01:10:16+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:helix-versioning-engine-for-hg-users.html</id><summary type="html">&lt;div&gt;&lt;p&gt;As I said recently &lt;a href="http://www.perforce.com/blog/150521/helix-versioning-engine-git-users"&gt;when offering advice for Git users&lt;/a&gt;, the new DVCS features of Perforce Helix are easy to use, but making the transition from another system always involves climbing a learning curve. The purpose of today&amp;#8217;s post is to provide some guidance specifically for Mercurial (Hg) users.&lt;/p&gt;
&lt;p align="center"&gt;&lt;img alt="" src="/sites/default/files/mercurialhg-users%281%29.png"&gt;&lt;/p&gt;
&lt;h4&gt;Concepts&lt;/h4&gt;
&lt;p&gt;Let&amp;#8217;s start with some basics. Hg supplies only DVCS features and was developed with a particular eye toward simplifying branching and merging. In contrast, Helix was developed with a more broadly based feature set for a wider variety of workflows/needs. Yet Hg and Helix actually have more in common than one might otherwise expect.&lt;/p&gt;
&lt;h4&gt;Status&lt;/h4&gt;
&lt;p&gt;For starters, work-in-progress is handled similarly by Hg and Helix. Modifications to versioned files are part of your next commit by default, so the only operations an Hg user typically expects to &amp;#8220;tell&amp;#8221; the system about are file adds and deletes.&lt;/p&gt;
&lt;p&gt;This is usually handled via the &amp;#8220;hg add&amp;#8221; and &amp;#8220;hg remove&amp;#8221; commands, but the &amp;#8220;hg addremove&amp;#8221; command is a third alternative. It adds all new files and removes all missing files previously tracked with a single command. I mention this because the Helix reconcile command achieves a similar end result.&lt;/p&gt;
&lt;p&gt;The main difference is that while Hg includes modifications automatically, Helix does not. Helix maintains all work-in-progress via a concept known as a changelist, and in particular your DVCS work-in-progress is maintained in a changelist named &amp;#8220;default&amp;#8221;.&lt;/p&gt;
&lt;p&gt;Hg users largely don&amp;#8217;t need to worry about this. Simply run the reconcile command to prepare for a commit, and it will include all adds, deletes, and modifications in your default changelist.&lt;/p&gt;
&lt;h4&gt;Shelving&lt;/h4&gt;
&lt;p&gt;Hg users have long enjoyed shelving as a feature, previously as an extension and natively since the v2.8 release. Shelving in Helix is similar but differs in that Hg shelves can be named whereas Helix shelves are a unary feature of a changelist, which is numbered and has a description instead. For example, the default changelist has one shelf where work in progress will be saved automatically when switching branches or what not.&lt;/p&gt;
&lt;h4&gt;Paths&lt;/h4&gt;
&lt;p&gt;In Hg parlance, a &amp;#8220;path&amp;#8221; is a &amp;#8220;pointer&amp;#8221; from/to which content may be cloned/pushed, whereas Helix users know these as &amp;#8220;remote specifications&amp;#8221; or just &amp;#8220;remotes&amp;#8221; for short. Further, an Hg &amp;#8220;path&amp;#8221; offers only a small subset of what Helix offers. A Helix remote specification is much more powerful insofar as it includes the ability to map content very selectively.&lt;a href="#_ftn1" name="_ftnref1" title="" id="_ftnref1"&gt;[1]&lt;/a&gt; Folders and files may be flexibly remapped, completely changing the hierarchical structure for the local repository as needed.&lt;/p&gt;
&lt;p&gt;And unlike Hg, a single Helix local repository may also include content from multiple remote specifications (all of whose content may be re-mapped). But that&amp;#8217;s an advanced feature for a future post. It suffices for now that remotes are much more advanced with Helix.&lt;/p&gt;
&lt;h4&gt;Commit&lt;/h4&gt;
&lt;p&gt;The Hg notion of commit is also quite similar to the Helix submit, with one important difference. Hg users are accustomed to their commits having two separate IDs: (1) a monotonically increasing integer unique and valid only within the scope of the current, local repository, and (2) a forty-character hash value that is both unique and valid in every version of the repository.&lt;/p&gt;
&lt;p&gt;In contrast, each Helix changelist, submitted or pending, is identified by a single, monotonically increasing integer number. Many developers won&amp;#8217;t care about these details, but DevOps personnel tasked with tying revision IDs to other integrated systems should be aware of them.&lt;/p&gt;
&lt;h4&gt;Defaults&lt;/h4&gt;
&lt;p&gt;There are also minor differences in the naming conventions. Hg users are accustomed to their default path for push and their default branch name both being &amp;#8220;default&amp;#8221;. In contrast, Helix uses &amp;#8220;origin&amp;#8221; for its default remote name and &amp;#8220;main&amp;#8221; for the default branch name. This can be a source of confusion when Hg users first get started and can&amp;#8217;t seem to switch back to the &amp;#8220;default&amp;#8221; branch; just use &amp;#8220;main&amp;#8221; instead and you&amp;#8217;ll be fine.&lt;/p&gt;
&lt;h4&gt;Commands&lt;/h4&gt;
&lt;p&gt;Having vaulted the conceptual hurdles, let&amp;#8217;s look at the commands for the most common tasks. Initializing a new repository requires a &amp;#8220;p4 init&amp;#8221; rather than an &amp;#8220;hg init&amp;#8221;, while the usual &amp;#8220;hg addremove&amp;#8221; followed by &amp;#8220;hg commit&amp;#8221; is instead &amp;#8220;p4 rec&amp;#8221; followed by &amp;#8220;p4 submit&amp;#8221;. All along the way &amp;#8220;hg status&amp;#8221; is replaced by &amp;#8220;p4 status&amp;#8221;. Many of the other commands are equally similar. Take a look:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Hg Command&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Helix Equivalent&lt;/strong&gt;&lt;/p&gt;


&lt;p&gt;Stage your changes&lt;/p&gt;


&lt;p&gt;addremove&lt;/p&gt;


&lt;p&gt;reconcile (rec for short)&lt;/p&gt;


&lt;p&gt;List all branches&lt;/p&gt;


&lt;p&gt;branches&lt;/p&gt;


&lt;p&gt;switch -l&lt;/p&gt;


&lt;p&gt;Branch and switch to it&lt;/p&gt;


&lt;p&gt;branch newBranch&lt;/p&gt;


&lt;p&gt;switch -c newStream&lt;/p&gt;


&lt;p&gt;Create an empty branch&lt;/p&gt;


&lt;p&gt;(no equivalent)&lt;/p&gt;


&lt;p&gt;switch -cm newStream&lt;/p&gt;


&lt;p&gt;Switch to a branch&lt;/p&gt;


&lt;p&gt;up branchName&lt;/p&gt;


&lt;p&gt;switch streamName&lt;/p&gt;


&lt;p&gt;Clone a repository&lt;/p&gt;


&lt;p&gt;clone repository&lt;/p&gt;


&lt;p&gt;clone -p host:port -r remote&lt;/p&gt;


&lt;p&gt;Clone part of a repository&lt;/p&gt;


&lt;p&gt;(no equivalent)&lt;/p&gt;


&lt;p&gt;clone -p host:port -f fileSpecification&lt;a href="#_ftn1" id="_ftnref3" name="_ftnref3" title=""&gt;[2]&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Commit your work&lt;/p&gt;


&lt;p&gt;commit&lt;/p&gt;


&lt;p&gt;submit&lt;/p&gt;


&lt;p&gt;Initialize a repository&lt;/p&gt;


&lt;p&gt;init&lt;/p&gt;


&lt;p&gt;init&lt;/p&gt;


&lt;p&gt;Merge work from a branch&lt;/p&gt;


&lt;p&gt;merge branchName&lt;/p&gt;


&lt;p&gt;merge --from streamName&lt;/p&gt;


&lt;p&gt;Get latest updates&lt;/p&gt;


&lt;p&gt;pull&amp;#160;update&lt;a href="#_ftn1" name="_ftnref1" title="" id="_ftnref1"&gt;[3]&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;fetch -u -r remoteName -S streamName&lt;/p&gt;


&lt;p&gt;Push all local commits&lt;/p&gt;


&lt;p&gt;push&lt;/p&gt;


&lt;p&gt;push&lt;/p&gt;


&lt;p&gt;Rewrite history&lt;/p&gt;


&lt;p&gt;rebase&lt;/p&gt;


&lt;p&gt;unsubmit / resubmit&lt;a href="#_ftn1" name="_ftnref1" title="" id="_ftnref1"&gt;[4]&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;List all remotes&lt;/p&gt;


&lt;p&gt;paths&lt;/p&gt;


&lt;p&gt;remotes&lt;/p&gt;


&lt;p&gt;Create a new remote&lt;/p&gt;


&lt;p&gt;(no equivalent)&lt;a href="#_ftn1" name="_ftnref1" title="" id="_ftnref1"&gt;[5]&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;remote newRemoteName&lt;/p&gt;


&lt;p&gt;View your changes&lt;/p&gt;


&lt;p&gt;status&lt;/p&gt;


&lt;p&gt;status&lt;/p&gt;

&lt;br clear="all"&gt;&lt;p&gt;As you can see, many of the commands are identical while others are a little different, but those provide what you need to get started. In fact, the above &amp;#8220;cheat sheet&amp;#8221; nicely serves the majority of day-to-day use cases. In conclusion, Hg users should feel right at home with Helix with very little effort, so why not try the industry&amp;#8217;s first DVCS built with the enterprise in mind?&lt;/p&gt;
&lt;p&gt;&amp;#160;&lt;/p&gt;
&lt;p&gt;&lt;a href="#_ftnref1" name="_ftn1" title="" id="_ftn1"&gt;[1]&lt;/a&gt; For more information about remote specifications see: http://www.perforce.com/perforce/doc.current/manuals/dvcs/_create_a_remote.html&lt;/p&gt;
&lt;p&gt;&lt;a href="#_ftnref2" name="_ftn2" title="" id="_ftn2"&gt;[2]&lt;/a&gt;&amp;#160;The Helix clone command may be used in a way that Hg cannot: to clone only&amp;#160;part&amp;#160;of a given shared server, though this has the side effect of bringing it all down in a single branch.&lt;/p&gt;
&lt;p&gt;&lt;a href="#_ftnref3" name="_ftn3" title="" id="_ftn3"&gt;[3]&lt;/a&gt;&amp;#160;Hg separates the act of pulling new work from updating the local repository for philosophical reasons, so you have to execute its two commands compared to Helix&amp;#8217; fetch command.&lt;/p&gt;
&lt;p&gt;&lt;a href="#_ftnref4" name="_ftn4" title="" id="_ftn4"&gt;[4]&lt;/a&gt;&amp;#160;For more information about changing local history see: http://www.perforce.com/blog/150401/neatness-counts-cleaning-history-sharing-work&lt;/p&gt;
&lt;p&gt;&lt;a href="#_ftnref5" name="_ftn5" title="" id="_ftn5"&gt;[5]&lt;/a&gt;&amp;#160;Hg users have to edit the .hg/.hgrc file manually and add a new entry to the &amp;#8220;[paths]&amp;#8221; section.&lt;/p&gt;
&lt;p&gt;All Perforce Version Management &amp;amp; Collaboration Products Are Free for 20 Users.&lt;/p&gt;
&lt;a href="http://info.perforce.com/free.html"&gt;TRY IT NOW&lt;/a&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Five Requirements for Securing and Protecting Your Intellectual Property</title><link href="http://www.ciandcd.com/five-requirements-for-securing-and-protecting-your-intellectual-property.html" rel="alternate"></link><updated>2015-06-21T01:10:10+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:five-requirements-for-securing-and-protecting-your-intellectual-property.html</id><summary type="html">&lt;div&gt;&lt;p&gt;In this age of industrial espionage, insider theft and advanced cyber threats, it is becoming increasingly difficult to secure intellectual property (IP). The stakes are high. In fact, the &lt;a href="http://www.ipcommission.org/report/ip_commission_report_052213.pdf"&gt;IP Commission Report &lt;/a&gt;estimates annual losses of $300B attributed to IP theft in the United States alone. A &lt;a href="http://www.kroll.com/media/pdf/white-papers/Insider_Threat_WP_022213_THT_042_2013_Final.pdf"&gt;Kroll Advisory Systems white paper&lt;/a&gt; describes how industrial espionage and insider attacks were responsible for the loss of trade secrets valued at $300M at Dow Chemical; $225M in illicit proceeds of a DuPont competitor that obtained DuPont&amp;#8217;s Kevlar trade secrets; theft of Space Shuttle, jet and rocket design trade secrets from Rockwell and Boeing and technical IP theft from Motorola.&lt;/p&gt;
&lt;p align="center"&gt;&lt;img alt="" src="/sites/default/files/security-blog-6.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Many, if not most, large organizations are spread across multiple geographies. Their team members generally include not only internal staff but also contractors, service providers and business partners. They typically use an source code management system and content collaboration platform to create and store all their IP.&lt;/p&gt;
&lt;p&gt;However, collaboration and security are often at odds with each other. Shared source code, designs, specifications, and digital assets can be easy targets for IP theft and leaks. To secure and protect your IP, your collaboration platform must address the following five requirements:&lt;/p&gt;
&lt;h4&gt;1. Flexible Authentication&lt;/h4&gt;
&lt;p&gt;Industry-standard authentication for LDAP and Active Directory is the minimum for any enterprise platform. More secure environments require custom authentication methods (e.g., two-factor authentication) to reduce the risk of stolen or compromised user credentials. When working with external contractors, service providers or business partners, it&amp;#8217;s also important to be able to enforce the use of unique user credentials and to avoid using a single shared username or password.&lt;/p&gt;
&lt;h4&gt;2. Fine-Grained Access Control&lt;/h4&gt;
&lt;p&gt;Project collaboration with internal and external teams requires file-level access control. Most users need access to just the intellectual property they are working on. Being able to employ IP address-specific access and limit access to only authorized locations or users in different regions may be useful when dealing with partner companies or external service providers. For example, this would allow limiting access to external collaborators to a specific section of a repository or set of files that they need to perform their job, based on the network IP address of those external collaborators.&lt;/p&gt;
&lt;h4&gt;3. Strong Password Security&lt;/h4&gt;
&lt;p&gt;Setting strong password guidelines and enabling password-strengthening options, such as minimum length, maximum login attempts, password reset upon login and password expiration time frames, help reduce the risk of stolen or compromised user credentials. In addition, preventing the storage of passwords in configuration files, the Windows registry or other parts of the system used for authentication may further improve password security.&lt;/p&gt;
&lt;h4&gt;4. Detailed Audit Logs/Access Tracking&lt;/h4&gt;
&lt;p&gt;Keeping detailed audit logs is useful in determining who accessed which corporate assets when. Audit logs are valuable for monitoring access to corporate assets to determine potential data misuse, security breaches or data theft. Detailed audit logs are also necessary for forensic purposes, audits and regulatory compliance.&lt;/p&gt;
&lt;h4&gt;5. Automated Threat Detection&lt;/h4&gt;
&lt;p&gt;Even with all security measures in place, you have to assume that your systems have been breached and your IP is always at risk. Your last line of defense must include apparatus for monitoring all IP-related activity within your environment to detect suspicious events. Many existing SIEM security tools attempt to identify security threats using data from traditional security products (e.g., firewall, IDS or anti-malware) or even newer data sources (e.g., OS logs, LDAP/AD, badge data, DNS and/or email or web servers). These tools examine and process massive amounts of data and quickly identify anomalous behavior or outliers that could represent security threats. But this step is insufficient. To fully protect your valuable IP you must track activity and detect threats at the origin&amp;#8212;within your collaboration environment itself.&lt;/p&gt;
&lt;p&gt;A unified approach to securing and protecting your intellectual property addresses these challenges in a comprehensive manner, while informing your Security Operations Center and integrating with your existing security infrastructure.&amp;#160;&lt;/p&gt;
&lt;p&gt;To learn more download our white paper:&lt;br&gt;A Unified Approach to Securing and Protecting IP.&lt;/p&gt;
	&lt;a href="http://info.perforce.com/whitepaper-secure-protect-ip-ty.html"&gt;READ NOW&lt;/a&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Hear from Forrester DevOps and Security Analysts in Live Webinar June 16th</title><link href="http://www.ciandcd.com/hear-from-forrester-devops-and-security-analysts-in-live-webinar-june-16th.html" rel="alternate"></link><updated>2015-06-21T01:10:06+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:hear-from-forrester-devops-and-security-analysts-in-live-webinar-june-16th.html</id><summary type="html">&lt;div&gt;&lt;p&gt;LIVE WEBINARS on Tuesday, June 16th - Get Best Practices for Secure DevOps from Forrester Analysts&lt;/p&gt;
&lt;p align="center"&gt;&lt;em&gt;&lt;img alt="" src="/sites/default/files/devops-security-forrester-webinar%282%29.png"&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The advantages of DevOps and Continuous Delivery have been much touted the last several years: faster application delivery, better product quality, cost savings&amp;#8230; the list goes on. What have gotten less attention are the security risks these new practices can place on your intellectual property.&lt;/p&gt;
&lt;p&gt;Engineering and Operations teams need to understand these security implications. Similarly, Security teams need to better understand modern release practices. Above all, these teams need to work better together.&lt;/p&gt;
&lt;p&gt;And that&amp;#8217;s why we&amp;#8217;re hosting a &lt;a href="http://info.perforce.com/webinar-overview-security-devops.html"&gt;webinar&lt;/a&gt;&amp;#160;featuring two principal analysts from Forrester Research who come at this issue from different vantage points. &lt;strong&gt;Kurt Bittner&lt;/strong&gt; focuses on application development and delivery, while &lt;strong&gt;Rick Holland&lt;/strong&gt; focuses on security and risk.&lt;/p&gt;
&lt;p&gt;During our&amp;#160;webinar, Kurt and Rick will share&amp;#8230;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Perspectives on how modern product delivery practices introduce additional security threats to intellectual property&lt;/li&gt;
	&lt;li&gt;Insights on how DevOps and Security teams can work better together&lt;/li&gt;
	&lt;li&gt;Best practices for bringing greater security to product development and delivery&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;So here it is&amp;#8230; a great opportunity to get your Engineering, DevOps and Security teams on the same page. Book a conference room together. Jointly decide what questions to ask during the live Q&amp;amp;A.&lt;/p&gt;
&lt;p&gt;We look forward to seeing you on our webinar!&lt;/p&gt;
&lt;p&gt;Achieving Secure DevOps: Overcoming the Risks&lt;br&gt;
		of Modern Service Delivery&lt;/p&gt;
	&lt;p&gt;LIVE WEBINARS on Tuesday, June 16th&lt;/p&gt;
	&lt;a class="add-sc" href="http://info.perforce.com/webinar-overview-security-devops.html"&gt;REGISTER NOW&lt;/a&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>P4Python goes pip</title><link href="http://www.ciandcd.com/p4python-goes-pip.html" rel="alternate"></link><updated>2015-06-21T01:10:01+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:p4python-goes-pip.html</id><summary type="html">&lt;div&gt;&lt;p&gt;&lt;img alt="" src="/sites/default/files/title-tip-tricks9.png"&gt;&lt;/p&gt;
&lt;p&gt;In recent years Python has changed its package manager strategy, and the result is &lt;strong&gt;pip&lt;/strong&gt;. Pip is a powerful package manager that simplifies the creation and consumption of Python packages, turning the &lt;a href="http://pypi.python.org"&gt;Python Package Index&lt;/a&gt; into a hub of an ever-growing number of useful packages.&lt;/p&gt;
&lt;p&gt;P4Python always had to stay away from the package index because it requires binary builds for some platforms. With the advent of the &lt;a href="http://pythonwheels.com/"&gt;wheel&lt;/a&gt; format, this has changed. Wheels are Python packages that can contain binary builds on Windows and OSX, allowing package creators to precompile their packages.&lt;/p&gt;
&lt;p&gt;P4Python 2015.1 has been uploaded to the Python Package Index. For you this means installing the latest release of P4Python becomes a simple:&lt;/p&gt;
&lt;pre&gt;    pip install p4python&lt;/pre&gt;&lt;p&gt;Easier, isn&amp;#8217;t it?&lt;/p&gt;
&lt;p&gt;However, there are a few preparations you need to make before you can run this command the first time successfully:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You need to have the right version of Python installed: 2.7, 3.3 or 3.4. Python 2.6 is supported but we have not uploaded binaries for it.&lt;/li&gt;
&lt;li&gt;You need to install pip. It comes with Python 3.4 and 2.7.9 automatically; everyone else will need to install it, for example from &lt;a href="https://bootstrap.pypa.io/get-pip.py"&gt;here&lt;/a&gt;, and make sure the pip executable is in your PATH.&lt;/li&gt;
&lt;li&gt;There is currently no binary wheel format available for Linux, so pip will download the source code of P4Python and attempt to build it. This requires &amp;#8216;python-dev&amp;#8217; and &amp;#8216;build-essential&amp;#8217; installed on Debian-based distributions (using apt) and the equivalent on RPM-based (using yum).&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;In order to build P4Python automatically from Pip, setup.py has also gained some new tricks.&lt;/p&gt;
&lt;p&gt;First of all, it now uses setuptools and not distutils, so you need to have setuptools installed if you want to build it on, say, Python 2.6.&lt;/p&gt;
&lt;p&gt;If you run setup.py without the &amp;#8211;apidir option, setup will now go off and attempt to download the correct P4API binaries from &lt;a href="ftp://ftp.perforce.com"&gt;the Perforce FTP site&lt;/a&gt; for your platform. The API will be downloaded and unpacked into the temp directory and used automatically by the build process.&lt;/p&gt;
&lt;p&gt;You can still download the source or the packages, of course, and install P4Python the traditional way if you prefer.&lt;/p&gt;
&lt;p&gt;I found pip amazingly simple to use, and I hope it will make your life a lot easier when installing P4Python. As usual, if you have any issues or requests, let us know in &lt;a href="http://www.perforce.com/support-services"&gt;Perforce Support&lt;/a&gt; or ping me on my Twitter handle &lt;a href="https://twitter.com/p4sven"&gt;@p4sven&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Happy hacking.&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Helix Swarm 2015.1 Released</title><link href="http://www.ciandcd.com/helix-swarm-20151-released.html" rel="alternate"></link><updated>2015-06-21T01:09:56+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:helix-swarm-20151-released.html</id><summary type="html">&lt;div&gt;&lt;p&gt;&lt;a href="/collaboration"&gt;Swarm&lt;/a&gt; is two years old this month!&amp;#128079;&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s rewarding to think that just two years ago, our collaboration engine was only just getting into the hands of our customers. Fast-forward to today, where Swarm plays a big part in the daily workflows of so many innovative companies. With much of the functionality now matured, we wanted to expand Swarm beyond just our English-speaking customers.&lt;/p&gt;
&lt;p align="center"&gt;&lt;img alt="" src="/sites/default/files/swarm-japan-bee.jpg"&gt;&lt;/p&gt;
&lt;p&gt;With the latest release of Helix Swarm, we&amp;#8217;ve translated the product into Japanese. It&amp;#8217;s available through our exclusive partner in Japan, the &lt;a href="http://www.toyo.co.jp"&gt;TOYO Corporation&lt;/a&gt;. TOYO provides expert consulting and support to our Japanese customers, and Swarm joins the &lt;a href="http://www.perforce.com/versioning-engine"&gt;Helix Versioning Engine&lt;/a&gt; and our popular visual client, &lt;a href="http://www.perforce.com/product/components/perforce-visual-client"&gt;P4V&lt;/a&gt;, in the suite of Perforce products available in Japanese.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Localization Support for Swarm &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Swarm team spent the last couple of months creating a localization framework and translating the product and documentation into Japanese. The next languages on our list are Korean and Simplified Chinese. If there&amp;#8217;s a language you&amp;#8217;d like us to add to our list of localizations, please send us your request via the &lt;a href="http://forums.perforce.com/index.php?/forum/29-swarm/"&gt;Perforce Swarm Forums&lt;/a&gt; or by emailing &lt;a href="mailto:support@perforce.com?subject=Request%20for%20Perforce%20Helix%20Swarm"&gt;support&lt;/a&gt; and we&amp;#8217;ll put it on our radar.&lt;/p&gt;
&lt;p&gt;Aside from the &lt;strong&gt;localization support&lt;/strong&gt;, other new functionalities include: &amp;#160; &amp;#160;&amp;#160;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Files and folders are downloadable as ZIP archives&lt;/li&gt;
&lt;li&gt;Swarm now limits the number of files to display in a committed change to a configurable default of 1000&lt;/li&gt;
&lt;li&gt;Configurable timeout sets thresholds for large commits&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;More details can be found in the &lt;a href="http://www.perforce.com/perforce/doc.current/manuals/swarm/whatsnew.html"&gt;What's new in 2015.1&lt;/a&gt; section of our user guide.&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Living la Vida Helix: Submitting Without Fear</title><link href="http://www.ciandcd.com/living-la-vida-helix-submitting-without-fear.html" rel="alternate"></link><updated>2015-06-21T01:09:51+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:living-la-vida-helix-submitting-without-fear.html</id><summary type="html">&lt;div&gt;&lt;p&gt;One of the common complaints I hear about centralized version control systems is that they are scary. With every commit being immediately visible there is a feeling that you may screw up everything for your co-workers. What&amp;#8217;s worse is that you generally don&amp;#8217;t have the power to clean up after yourself. How many of us have had to sheepishly go ask the admin to obliterate something?&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/sites/default/files/viva-la-helix-fear-blog.jpg"&gt;&lt;/p&gt;
&lt;p&gt;With P4D (which we now call Helix Versioning Engine) becoming a proper DVCS, you now can manipulate history that has not yet been shared with other people. Than means you can commit to your heart&amp;#8217;s content, and then sweep through later to keep just the interesting commits. It also means that if you accidentally submit something you can deal with it.&lt;/p&gt;
&lt;p&gt;Just recently while doing some cleanup work in the Workshop I had just one of these cases. I&amp;#8217;d like to walk you through what happened so that you can see how unsubmit and resubmit will help you.&lt;/p&gt;
&lt;h4&gt;Setting the scene&lt;/h4&gt;
&lt;p&gt;A user had reported that a number of files that I had added the day before had all of their line endings mangled. The files were already in the shared server, so I didn&amp;#8217;t want to run p4 unsubmit there, and anyway I feel it is important for my failures to remain on display for all to see.&lt;/p&gt;
&lt;p&gt;So I got to work updating the files.&lt;/p&gt;
&lt;pre&gt; p4 fetch&lt;/pre&gt;
&lt;p&gt;Everyting was up-to-date. Next to find the files with the bad line endings.&lt;/p&gt;
&lt;pre&gt;grep -lIUr --color &lt;p&gt;"^R"&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;I was lucky and it was just a handful of files. Thankfully turning Windows line endings into Unixones is a piece of cake with P4D.&lt;/p&gt;
&lt;pre&gt;p4 client -o | sed s/LineEnd: local/LineEnd: share | p4 client -i&lt;/pre&gt;
&lt;p&gt;Now to get the files synced with the correct line endings and submitted:&lt;/p&gt;
&lt;pre&gt;p4 sync -f &lt;/pre&gt;
&lt;pre&gt;p4 submit -d &lt;p&gt;"Fixing up some busted line endings that snuck in"&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;All was well and good until I realized that in my excitement I&amp;#8217;d mangled some solution files which probably wanted those '\R&amp;#8217;s. Thankfully I hadn&amp;#8217;t pushed, so I could quickly clean up my mess.&lt;/p&gt;
&lt;pre&gt;p4 changes -m1&lt;/pre&gt;
&lt;pre&gt;p4 unsubmit @&lt;p&gt;12345&lt;/p&gt;&lt;/pre&gt;
&lt;p&gt;I identified my last change number, and then unsubmitted it. At this point I had all of my changed files in a shelf. In this case I had only one changelist, but I still decided to use p4 resubmit to apply the change. p4 resubmit makes it easy to reapply the changes in order.&lt;/p&gt;
&lt;pre&gt;p4 resubmit&lt;/pre&gt;
&lt;p&gt;This kicks me into interactive mode. Because there is a lot you can do with resubmit and I always forget the options, I hit '?' to see the list.&lt;/p&gt;
&lt;pre&gt;Specify next action ( l/m/e/c/r/R/s/d/b/v/V/a/q ) or ? &lt;p class="s1"&gt;for &lt;/p&gt;help: ?
The following actions are available:
c Modify the change description &lt;p class="s1"&gt;for &lt;/p&gt;this change
m Merge this change, &lt;p class="s1"&gt;then &lt;/p&gt;submit &lt;p class="s1"&gt;if &lt;/p&gt;no conflicts
e Merge this change, &lt;p class="s1"&gt;then exit for &lt;/p&gt;further editing
r Interactively resolve this change, &lt;p class="s1"&gt;then&lt;/p&gt;
submit &lt;p class="s1"&gt;if &lt;/p&gt;no conflicts
a Add (squash) this change into the next unsubmitted
change
s Skip this change and move on to the next
d Delete this change without submitting it
b Begin again from the earliest remaining change
l List the changes remaining to be processed
v View the current change in short form
V View the current change with full diffs
R Display the status of resolved and unresolved merges
q Quit the resubmit operation&amp;lt;
? Display this help.&lt;/pre&gt;
&lt;p&gt;In this case I wanted to resubmit all of the files except the solution files, so I selected e&lt;/p&gt;
&lt;p&gt;That merged my change back in, but then dropped me back to the command prompt so I could further mangle the files. A quick revert got rid of the changed solution files, and then I used p4 resubmit -Re to resume the resubmit process.&lt;/p&gt;
&lt;pre&gt;p4 revert ....sln
p4 resubmit -Re&lt;/pre&gt;
&lt;p&gt;P4D submitted the change again, and cleaned up the shelf for me since I no longer needed it. With that tidied up I was ready to push and share my changes with the community.&lt;/p&gt;
&lt;pre&gt;p4 push&lt;/pre&gt;
&lt;p&gt;Sharing that broken change wouldn&amp;#8217;t have been the end of the world, but I felt so much more in control being able to clean up those .sln files before pushing out my change. Ever wish you could undo a merge between branches? With p4 unsubmit you can. Helix Versioning Engine gives you a way to safely experiment, modifying history as need be to make sure the changes your coworkers see are the ones you want them to see.&lt;/p&gt;
&lt;p&gt;Interested in trying it yourself? You&amp;#8217;re just a download of our Helix Versioning Engine and p4 init away from being able to try this all yourself. If you&amp;#8217;d like to push to a shared server the Workshop has been running 2015.1 since beta, and Helix Cloud is also using it. As always we&amp;#8217;re here to help, so if you have questions, just shout!&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>News from InfoSecurity 2015</title><link href="http://www.ciandcd.com/news-from-infosecurity-2015.html" rel="alternate"></link><updated>2015-06-21T01:09:46+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:news-from-infosecurity-2015.html</id><summary type="html">&lt;div&gt;&lt;p align="center"&gt;&lt;img alt="" src="/sites/default/files/infoSec-blog-post.png"&gt;&lt;/p&gt;
&lt;p&gt;I've just returned from my first visit to &lt;a href="http://www.infosecurityeurope.com/"&gt;InfoSecurity 2015 in London&lt;/a&gt;. With the launch earlier this year of &lt;a href="http://www.perforce.com/threat-detection"&gt;Perforce Helix Threat Detection&lt;/a&gt; this was a great opportunity to review the state of the cyber-security world, hear about the key challenges facing governments, businesses and individuals and review some of the solutions being offered. This couldn't be more timely as, right when I'm writing this, it has been &lt;a href="http://www.bbc.co.uk/news/world-us-canada-33017310"&gt;announced&lt;/a&gt; that the U.S. government suffered a serious attack earlier this year which compromised the personal details of thousands of federal employees.&lt;/p&gt;
&lt;p&gt;My particular area of interest is the emerging role of security in DevOps. There are a few key aspects to consider:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
		&lt;p&gt;As a developer what do you need to do and how does that fit with agile and development processes?&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;As a Release Manager/Operations Specialist/DevOps Engineer what do you need to know to roll out and manage secure applications?&lt;/p&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;p&gt;As a Chief Information Security Officer or Risk Manager what is going on in the development and operations areas that I ought to be concerned about?&lt;/p&gt;
	&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;I haven't got space here to cover all of these topics, but here are a few highlights from the conversations I had at the conference.&lt;/p&gt;
&lt;p&gt;Development Managers and DevOps specialists are increasingly aware of the need for secure applications. They are concerned that as release cycle times reduce with the adoption of Continuous Delivery they don't reduce security nor slow down deliveries. Some companies are working out how to do this by involving security experts in the earliest stages of sprint planning and ensuring security stories are &amp;#8220;groomed&amp;#8221; to ensure they are properly positioned for priority in their backlogs. They're also adopting tools for automated code and application validation. It was interesting to see an increasing number of tools addressing the need for dynamic security testing. Although the term seems to have been around a few years already, there were a number of people talking about &amp;#8220;&lt;a href="https://vimeo.com/36342207"&gt;Rugged DevOps&lt;/a&gt;&amp;#8221; and I think this is an area that will continue to grow.&lt;/p&gt;
&lt;p&gt;Security experts, especially those involved in IT audits or risk assessments are busier than ever. Some are aware of the potential risks that may exist in their development organizations but I suspect the majority are not. This is the result of two issues.&lt;/p&gt;
&lt;p&gt;Firstly, they may not fully appreciate the value of the software being developed. They know that they need to protect customer and staff personal data, but they don't necessarily realize that the software is actually their company&amp;#8217;s competitive differentiator and could be critical if leaked to a competitor.&lt;/p&gt;
&lt;p&gt;Secondly there is a lot of technology involved that they don't understand. They may be familiar with firewalls, VPNs, email, etc., but developers often bring tools into the business without their knowledge and these tools, such as Subversion or Git are inherently vulnerable. It's increasingly hard to keep track of business documents in a world full of email, cloud file sharing services and BYOD mobiles, but this technical software content is even harder to grasp.&lt;/p&gt;
&lt;p&gt;I saw a number of tools that try to address some of these problems by monitoring network traffic rather than trying to lock down each application. This generates another problem though &amp;#8211; if you're monitoring hundreds or thousands of different file types and communications, it quickly becomes an impossible management challenge.&lt;/p&gt;
&lt;p&gt;A few tools are trying to address that problem by using analytics to analyze the basic data and infer what looks like suspicious behavior.&amp;#160; This helps with the management issue but they still don't understand the context of the data being moved around the organization which makes them inefficient for DevOps.&lt;/p&gt;
&lt;p&gt;I didn't see anything that was close to &lt;a href="http://www.perforce.com/threat-detection"&gt;Perforce Helix Threat Detection&lt;/a&gt;, which focuses on protecting this valuable IP being created by design and development teams. Because it uses the rich data available from the &lt;a href="http://www.perforce.com/helix"&gt;Helix Versioning Engine&lt;/a&gt; it understands the context of the files being accessed. It can not only track that a user may be accessing more files than usual (and most tools can't work out what &amp;#8220;normal&amp;#8221; means), but it also understands whether those files are in projects they &amp;#8220;normally&amp;#8221; use or whether they're using the files in ways that are unusual for the user.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;m really looking forward to the &lt;a href="http://info.perforce.com/webinar-overview-security-devops.html"&gt;webinar Perforce are hosting on June 16th&lt;/a&gt; where the Forrester DevOps Analysts, Kirt Bittner, and Security Analyst, Rick Holland will talk about the issues raised above and the solutions to them.&amp;#160;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Next Round of Online Training: Helix DVCS</title><link href="http://www.ciandcd.com/next-round-of-online-training-helix-dvcs.html" rel="alternate"></link><updated>2015-06-21T01:09:42+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:next-round-of-online-training-helix-dvcs.html</id><summary type="html">&lt;div&gt;&lt;p align="center"&gt;&lt;img alt="Perforce Helix Training" src="/sites/default/files/training-blogimage.png"&gt;&lt;/p&gt;
&lt;p&gt;Back in March, we announced our new &lt;a href="http://www.perforce.com/blog/150402/now-available-helix-versioning-engine-dvcs-capabilities"&gt;Helix platform&lt;/a&gt; which includes highly anticipated distributed version control (DVCS) capabilities. For some of you, hearing that we now offer DVCS may have been music to your ears. For others, it may have invoked curiosity and added another acronym to your lexicon.&lt;/p&gt;
&lt;p&gt;Given the recent proliferation of Git-style workflows, we are seeing a lot of developers finding themselves working with their own private, local versioning repositories while collaborating with teammates via the new init/clone/pull/push command set. But did you know that you can now rewrite the history of changes in your personal repository before sharing them?&lt;/p&gt;
&lt;p&gt;To help you come up to speed with Helix DVCS, we are pleased to announce the availability of a new instructor-led training course. The Helix DVCS course will take place online via Webex and will include hands-on lab exercises within our lab environment.&lt;/p&gt;
&lt;p&gt;The class is taught by our expert Professional Services consultants who have a lot of experience advising customers. Topics on this new half-day course will include:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why do you need DVCS?&lt;/li&gt;
	&lt;li&gt;Overview of DVCS architecture and workflows&lt;/li&gt;
	&lt;li&gt;Basic DVCS operations&lt;/li&gt;
	&lt;li&gt;How to perform initial setup&lt;/li&gt;
	&lt;li&gt;Working with multiple streams&lt;/li&gt;
	&lt;li&gt;Rewriting history&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;The first class is now scheduled for European customers on June 29, 9am &amp;#8211; 1pm, British Summer Time (GMT+1). We will have a DVCS training for North American customers in the weeks that follow. So &lt;a href="http://www.perforce.com/support-services/instructor-led-training/course-schedule"&gt;sign up here&lt;/a&gt; and bring along your questions about DVCS.&amp;#160;&lt;/p&gt;
&lt;p&gt;The class does assume that you are already familiar with Perforce Helix, so if you&amp;#8217;re new to Helix, we also offer introductory courses. Check out our &lt;a href="http://www.perforce.com/support-services/instructor-led-training/course-schedule"&gt;course schedule&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;Any questions, just email training@perforce.com.&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Helix DVCS - How to Initialize Like a Pro</title><link href="http://www.ciandcd.com/helix-dvcs-how-to-initialize-like-a-pro.html" rel="alternate"></link><updated>2015-06-21T01:09:37+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:helix-dvcs-how-to-initialize-like-a-pro.html</id><summary type="html">&lt;div&gt;&lt;p&gt;&lt;img alt="" src="/sites/default/files/title-tip-tricks9.png"&gt;&lt;/p&gt;
&lt;p&gt;We are all very excited about the new distributed version control system (DVCS)&amp;#160;capabilities of Perforce Helix. Here are a few tips for getting started.&lt;/p&gt;
&lt;p&gt;Keep in mind that in order to use Helix DVCS, you need to have the 2015.1 version of both Helix client P4 and Helix server P4D installed. Some of the commands (e.g., &lt;strong&gt;init&lt;/strong&gt; and &lt;strong&gt;clone&lt;/strong&gt;) are implemented in P4, so you need the latest version of both executables.&lt;/p&gt;
&lt;p&gt;The first thing you need to do when you want to use a local Helix server (called a personal server) is to run &amp;#8220;p4 init&amp;#8221;.&amp;#160; This command will create the personal server for you (in a subdirectory called .p4root) and set up the P4CONFIG and P4IGNORE files, as well.&lt;/p&gt;
&lt;p&gt;&amp;#8220;p4 init&amp;#8221; also turns your current directory into the client workspace root for your new &lt;a&gt;personal server&lt;/a&gt;, which is useful if you already have some files and realize it might be a good thing to version them:&lt;/p&gt;
&lt;pre&gt;    p4 init
    p4 rec
    p4 submit -n "Initial checkin"
&lt;/pre&gt;&lt;p&gt;In the above, &amp;#8220;rec&amp;#8221; is a handy alias for &amp;#8220;reconcile&amp;#8221;&lt;a href="http://www.perforce.com/blog/150506/ten-time-savers-20151"&gt; to save you typing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you start a new project from scratch and want to place it in another directory instead, use the &amp;#8220;-d&amp;#8221; option like such:&lt;/p&gt;
&lt;pre&gt;    p4 &amp;#8211;d path-to-new-project init
&lt;/pre&gt;&lt;h2&gt;Case and Unicode&lt;/h2&gt;
&lt;p&gt;Let&amp;#8217;s take a closer look at the output of the &amp;#8220;p4 init&amp;#8221; command:&lt;/p&gt;
&lt;pre&gt;    Matching server configuration from &amp;#8216;wayfarer-p4d:1666':
    case-sensitive (-C0), non-unicode (-n)
    Server sknop-dvcs-1429629213 saved.
&lt;/pre&gt;&lt;p&gt;One might ask: what is case-sensitive and Unicode about?&lt;/p&gt;
&lt;p&gt;Because the Helix versioning engine supports many platforms, both case sensitive and insensitive, you can choose how your personal server handles case. By default, the Helix versioning engine adopts the case policy of the platform you run it on: insensitive on Mac and Windows, sensitive on Linux and other Unix platforms.&lt;/p&gt;
&lt;p&gt;Also by default, the Helix versioning engine does no Unicode translation and simply accepts any encoding for file content and metadata. For cross-platform development it is better to put a shared server into Unicode mode.&lt;/p&gt;
&lt;p&gt;For a personal server you may not care at first what these settings are, but what if you want to push your changes to another server at a later stage? The settings of your personal server have to match the settings on the destination server or there could be chaos, as the destination server will refuse the push if the settings do not match.&lt;/p&gt;
&lt;p&gt;It is cumbersome to change case sensitivity and Unicode settings after the Helix versioning engine is populated, so it is important to get this right up front. &amp;#8220;p4 init&amp;#8221; will &amp;#8220;guess&amp;#8221; what the standard settings within your enterprise are by connecting to and inquiring with the Helix versioning engine specified by the P4PORT environment variable (or &amp;#8220;perforce:1666&amp;#8221; if that is not set).&lt;/p&gt;
&lt;p&gt;If you&amp;#8217;d rather inquire with a particular server when initializing a personal server, use the &amp;#8220;-p&amp;#8221; option:&lt;/p&gt;
&lt;pre&gt;    p4 init &amp;#8211;p myserver:1666
&lt;/pre&gt;&lt;p&gt;Alternately, you can also explicitly set case and Unicode support with the following options:&lt;/p&gt;
&lt;strong&gt;Option&lt;/strong&gt;
&lt;strong&gt;Meaning&lt;/strong&gt;
&lt;strong&gt;-C0&lt;/strong&gt;
&lt;p&gt;Case insensitive&lt;/p&gt;
&lt;strong&gt;-C1&lt;/strong&gt;
&lt;p&gt;Case sensitive&lt;/p&gt;
&lt;strong&gt;-n&lt;/strong&gt;
&lt;p&gt;No Unicode support&lt;/p&gt;
&lt;strong&gt;-xi&lt;/strong&gt;
&lt;p&gt;Unicode support&lt;/p&gt;
&lt;p&gt;Server and User NameNote well: if you have P4CHARSET defined in your environment and not set to &amp;#8220;none&amp;#8221;, a new personal server will automatically be initialized as a Unicode-enabled server.&lt;/p&gt;
&lt;p&gt;So what is the story with the server and user name?&lt;/p&gt;
&lt;p&gt;The name of your personal server and client workspace coincide. Although in principle you can have more than one workspace against your personal server, in practice there is rarely any need for it. Locally the name does not matter, but when you push your changes into another server, the changes are linked to your local workspace name. An automatically generated name like &amp;#8220;sknop-dvcs-1429629213&amp;#8221; is highly likely do be unique, but you are free to choose a different name if you so wish by using the &amp;#8220;-c&amp;#8221; option.&lt;/p&gt;
&lt;p&gt;The same is true for your user name: locally it does not matter and will typically coincide with either your OS user name and/or whatever P4USER is set to, but when pushing to another server the user name becomes important.&lt;/p&gt;
&lt;p&gt;Take the Perforce workshop for example: my local user name is always &amp;#8220;sknop&amp;#8221;, but for the workshop I use &amp;#8220;sven_erik_knop&amp;#8221;. If I create a local DVCS server under the user name &amp;#8220;sknop&amp;#8221;, submit my changes, set up a remote to the workshop, and push, I&amp;#8217;ll receive only an error message.&lt;/p&gt;
&lt;p&gt;Fortunately, the solution is very simple. I add another user to my local server and update my local protection table:&lt;/p&gt;
&lt;pre&gt;    p4 user &amp;#8211;f sven_erik_knop
    p4 protect
&lt;/pre&gt;&lt;p&gt;Now I can push my changes under the new user name (I might have to log into the target server first):&lt;/p&gt;
&lt;pre&gt;    p4 &amp;#8211;u sven_erik_knop push
&lt;/pre&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;A simple &amp;#8220;p4 init&amp;#8221; will create you a new personal server to which you can submit changes, but if you want to push these changes to another server, it makes sense to pay attention to case sensitivity, Unicode support, and workspace and user name.&lt;/p&gt;
&lt;p&gt;Let me know if you are using our new DVCS features and how you are getting on. My Twitter handle is @p4sven.&lt;/p&gt;
&lt;p&gt;For a live technical overview of DVCS features in the Helix Versioning engine sign up for our &lt;a href="http://info.perforce.com/webinar-overview-helix-dvcs.html?utm_source=p4blog&amp;amp;utm_medium=social&amp;amp;utm_campaign=Global_2015Q2_EW_Helix_DVCS"&gt;DevTalk Webinar &lt;/a&gt;on June 26th.&amp;#160;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>Finding the ‘Needle in a Haystack’ with Helix Threat Detection</title><link href="http://www.ciandcd.com/finding-the-needle-in-a-haystack-with-helix-threat-detection.html" rel="alternate"></link><updated>2015-06-21T01:09:33+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:finding-the-needle-in-a-haystack-with-helix-threat-detection.html</id><summary type="html">&lt;div&gt;&lt;p&gt;Software development projects in bigger companies typically involve large teams collaborating across multiple locations. A large corporation may employ tens of thousands of developers working on thousands of projects over a span of many years.&amp;#160;&lt;/p&gt;
&lt;p align="center"&gt;&lt;img alt="" src="/sites/default/files/needle-in-haystack-blog.jpg"&gt;&lt;/p&gt;
&lt;p&gt;For many companies, developer access to older software projects and files may continue long after the project has been completed, sometimes because of lax processes and stagnant access control policies. Yet, these projects can represent valuable IP worth tens of millions of dollars. In light of the ramifications of a competitor getting ahold of these files, what can companies do to better protect their crown jewels from theft?&lt;/p&gt;
&lt;p&gt;The answer might be found in the source code management (SCM) or version control tools companies use to drive their development workflows. SCM tools typically track access to key projects and files via audit logs. However, the sheer volume of these logs can overwhelm security teams. A month of log data might yield millions of different interactions with files and projects, making it virtually impossibe to find important clues.&lt;/p&gt;
&lt;p&gt;Done the right way, however, this approach can bring the real threats to the surface. A recent Fortune article entitled&amp;#160;&lt;a href="http://www.forbes.com/sites/benkepes/2015/03/27/using-log-data-and-machine-learning-to-weed-out-the-bad-guys/"&gt;Using Log Data and Machine Learning to Weed out the Bad&amp;#160;Guys&lt;/a&gt;&amp;#160;shares how a large company&amp;#160;applied our Helix Threat Detection capabilities to quickly identify data theft. Likening this approach to &amp;#8216;finding a needle in a haystack,&amp;#8217; the article describes how effective it can be to apply&amp;#160;behavioral analytics to the audit logs in our Helix Versioning Engine.&amp;#160;&lt;/p&gt;
&lt;h4&gt;Leveraging Machine Learning to Establish a Baseline&lt;/h4&gt;
&lt;p&gt;Conventional security tools (e.g., SIEMs) are often rule-based and require time-consuming manual setting of thresholds and iterative tuning of multiple parameters in order to identify anomalous behavior. Yet manually setting alerts to trigger when developers access an arbitrary number of files may be problematic for large projects and can inundate security teams with too many false positives.&lt;/p&gt;
&lt;p&gt;A better approach is to use machine-learning algorithms and risk-based-behavior-analytics models to audit logs to first establish a baseline understanding of normal behavior. It&amp;#8217;s possible to create cluster models that group similar users based on their past activities. Continuous self-learning more accurately identifies high-risk events, like someone accessing a project he or she doesn't normally work on, putting a spotlight on threats to an organization&amp;#8217;s most sensitive assets.&lt;/p&gt;
&lt;h4&gt;Identifying High-Risk Behaviors&lt;/h4&gt;
&lt;p&gt;Once you've establised what's normal behavior, the next step is to apply advanced mathematical models that generate a behavioral risk score. This score represents multiple factors, including the importance of an asset or file, the method of access, the activity (e.g., volume or type), and the user. These behavioral analytics models can then be used to find anomalies by:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Comparing access patterns, data usage patterns and data movement patterns against historic behavior&lt;/li&gt;
&lt;li&gt;Determining similar user patterns across the environment and comparing behavioral patterns between users and groups of users&lt;/li&gt;
&lt;li&gt;Detecting dissimilar patterns among members of the same project group or job role&lt;/li&gt;
&lt;li&gt;Comparing individuals against the entire user group&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;To learn more about the behavioral analytics models used in Helix Threat Detection, download the white paper&amp;#160;&lt;a href="http://info.perforce.com/whitepaper-helix-threat-detection.html"&gt;Helix Threat Detection: IP Security and Risk Analytics.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To learn more download our white paper:&lt;br&gt;A Unified Approach to Securing and Protecting IP.&lt;/p&gt;
&lt;a href="http://info.perforce.com/whitepaper-secure-protect-ip-ty.html"&gt;READ NOW&lt;/a&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;
&lt;/div&gt;</summary></entry><entry><title>CodeConf 2015: Speakers, Workshops and Hotel Discount</title><link href="http://www.ciandcd.com/codeconf-2015-speakers-workshops-and-hotel-discount.html" rel="alternate"></link><updated>2015-06-21T01:09:10+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:codeconf-2015-speakers-workshops-and-hotel-discount.html</id><summary type="html">&lt;div&gt;

&lt;p&gt;We thought you'd like a preview of what we have in store for CodeConf 2015 in June before &lt;a href="http://www.ticketbase.com/events/codeconf-2015"&gt;discounted ticket sales end on May 25th&lt;/a&gt;. We're beyond excited to be welcoming speakers from all over the globe and from companies and organizations of all sizes, who work on every facet of open source technology and represent many different parts of the community. Here's a sneak peak at some of the excellent speakers who will be presenting at CodeConf this year:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eric Levine of Airbnb&lt;/li&gt;
&lt;li&gt;Casey Rosenthal of Netflix&lt;/li&gt;
&lt;li&gt;Christine Abernathy of Facebook&lt;/li&gt;
&lt;li&gt;Corinne Warnshuis of Girl Develop It&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is just a sampling of the amazing line-up. Check out the full preview over at the &lt;a href="http://codeconf.com/"&gt;CodeConf site&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But wait there's more!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reserve a spot in one of our &lt;a href="http://codeconf.com/#workshops"&gt;hands-on workshops&lt;/a&gt; led by expert trainers. Space is limited, so &lt;a href="http://codeconf.com/#workshops"&gt;register early&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Join us the evening before the conference to enjoy the company of the Nashville open source community and grab your badge early. You won't want to miss the food from legendary &lt;a href="http://www.hattieb.com/"&gt;Hattie B's&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Register for a discounted room at the &lt;a href="https://resweb.passkey.com/Resweb.do?mode=welcome_ei_new&amp;amp;eventID=13906369"&gt;Gaylord Opryland Hotel&lt;/a&gt;. Shuttles will depart at convenient intervals so you can easily get to and from the conference. By booking a room at the Opryland instead of a downtown hotel, you save about $100. &lt;/li&gt;
&lt;li&gt;There are still a few sponsorship opportunities left, including our scholarship program. &lt;a href="http://f.cl.ly/items/0V3p3p0D0l3d3s1j2l2r/CodeConf.Prospectus.2015.pdf"&gt;Check out the prospectus&lt;/a&gt; and drop us a line at &lt;a href="mailto:events@github.com"&gt;events@github.com&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Find more details about everything we have in store for you on the new &lt;a href="http://codeconf.com/"&gt;codeconf.com&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lastly, we'd like to thank everyone who took the time to send us their ideas. We were overwhelmed by the quality and creativity of the 300+ proposals submitted. You are the heart of CodeConf. &lt;/p&gt;

&lt;p&gt;Ticket prices go up to $399 on May 25th and we can't wait to see you in Nashville, &lt;a href="http://www.ticketbase.com/events/codeconf-2015"&gt;so what are you waiting for?&lt;/a&gt;&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>Adding a billing manager to your organization</title><link href="http://www.ciandcd.com/adding-a-billing-manager-to-your-organization.html" rel="alternate"></link><updated>2015-06-21T01:08:43+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:adding-a-billing-manager-to-your-organization.html</id><summary type="html">&lt;div&gt;&lt;p&gt;With the new billing manager role, you can invite individuals to manage the billing details of your organization without giving them access to code. The new role enables a user to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Upgrade or downgrade the organization&amp;#8217;s plan.&lt;/li&gt;
&lt;li&gt;Update payment details like the credit card on file.&lt;/li&gt;
&lt;li&gt;View history of past transactions and download receipts.&lt;/li&gt;
&lt;li&gt;Receive receipts via email.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Billing managers &lt;strong&gt;won&amp;#8217;t&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be able to create or access repositories in your organization.&lt;/li&gt;
&lt;li&gt;See private members of your organization.&lt;/li&gt;
&lt;li&gt;Be seen in the list of organization members.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/1153134/7747339/35f197fa-ffec-11e4-8123-bb546429f5b6.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/1153134/7747339/35f197fa-ffec-11e4-8123-bb546429f5b6.png" alt="billing-managers-list"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leave the payment details to your wonderful finance team, and get back to your code! &lt;/p&gt;

&lt;p&gt;For more information on adding a billing manager to your organization, check out the &lt;a href="https://help.github.com/articles/adding-a-billing-manager-to-your-organization/"&gt;help article&lt;/a&gt;.&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>Transforming the Future of NASA with CodeConf's Ariel Waldman</title><link href="http://www.ciandcd.com/transforming-the-future-of-nasa-with-codeconfs-ariel-waldman.html" rel="alternate"></link><updated>2015-06-21T01:08:41+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:transforming-the-future-of-nasa-with-codeconfs-ariel-waldman.html</id><summary type="html">&lt;div&gt;&lt;p&gt;&lt;a href="http://codeconf.com/"&gt;CodeConf 2015&lt;/a&gt; will take place in Nashville on June 25 and 26. Ariel Waldman is one of many incredible speakers that will take the stage at the Bell Tower to share her expertise. We asked her some questions about her experiences at NASA, her vision for the future, and more. Check out her answers below! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/4154342/7820484/84684f82-039d-11e5-93ef-3a6b726df867.jpg" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/4154342/7820484/84684f82-039d-11e5-93ef-3a6b726df867.jpg" alt="ariel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q: Why is collaboration important to you, and how do you think it can further scientific exploration and discovery?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A: To me, multidisciplinary collaboration is at the heart of furthering scientific exploration and discovery. In my work, I especially focus on unusual collaborations between people from different backgrounds. By having a fresh set of eyes from those who solve problems across a wide range of industries, new concepts emerge and go on to influence scientific processes, communication and discoveries in unexpected ways. Science doesn't require serendipity, but I'd argue it's significantly disadvantaged without it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q: You spoke at the very first CodeConf in 2011, and we&amp;#8217;re excited to have you back since you&amp;#8217;ve been doing so much exciting stuff in the meantime. What was your experience of CodeConf 2011, and what are you looking forward to seeing at CodeConf 2015?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A: CodeConf was fantastic. The community was so excited to have a wide range of topics at a "code" conference and I think it really helped open everyone up to new opportunities and aspirations. I think what made CodeConf 2011, and what will make CodeConf 2015, so special was the unexpected connections people end up drawing and a broadening of how big the universe to play in is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q: GitHub had the pleasure of hosting &lt;a href="http://sciencehackday.org/"&gt;Science Hack Day&lt;/a&gt; in 2014, and we&amp;#8217;ll do so again this year. What is the purpose of Science Hack Day, and what were some of the most exciting projects to come out of that event?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A: The mission of Science Hack Day is to get excited and make things with science! Science Hack Day is a 2-day-all-night event where anyone excited about making weird, silly or serious things with science comes together in the same physical space to see what they can prototype within 24 consecutive hours. Designers, developers, scientists and anyone who is excited about making things with science are welcome to attend &amp;#8211; no experience in science or hacking is necessary, just an insatiable curiosity.&lt;/p&gt;

&lt;p&gt;One of the projects I loved that came out of the Science Hack Day SF at GitHub last year was an interactive planetarium where you could explore the distance between stars, planets and constellations using your hands via a Kinect. I loved the idea of making a planetarium more physical. Because the code was made open source on GitHub, the project was then hacked on further and installed as a temporary exhibit at the American Museum of Natural History in NYC, where school kids, families and even an astronaut got to try it out!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q: Tell us about &lt;a href="http://www.nasa.gov/directorates/spacetech/niac/index.html"&gt;NASA Innovative Advanced Concepts (NIAC)&lt;/a&gt;. How can we participate in and contribute to the vision of this project?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A: NASA Innovative Advanced Concepts (NIAC) is arguably the coolest program at NASA - they fund and nurture all the radical, sci-fi-esque ideas that could one day transform future space missions. Submarines on Titan, human hibernation to Mars, comet hitchhiking space probes, you name it. Some utilize computer science and computer vision techniques &amp;#8211; one project analyzes light versus dark areas on the Moon so that a lunar rover could navigate staying in continuous sunlight, thus able to be more efficient by having continuous solar power. The cool thing about NIAC is that they accept proposals from anyone every year around October, so if you have a credible idea you'd like to do further research and prototyping on that could transform a future space mission, you can apply!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/arielwaldman"&gt;Follow Ariel on Twitter&lt;/a&gt; for more updates on all of her projects, and &lt;a href="http://www.ticketbase.com/events/codeconf-2015"&gt;grab your CodeConf ticket now&lt;/a&gt;! We can't wait to see you in Nashville next month. &lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>Diversity Partners for CodeConf 2015</title><link href="http://www.ciandcd.com/diversity-partners-for-codeconf-2015.html" rel="alternate"></link><updated>2015-06-21T01:08:39+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:diversity-partners-for-codeconf-2015.html</id><summary type="html">&lt;div&gt;&lt;p&gt;When a diverse set of presenters and participants comes together for a conference, everyone benefits from the variety of experiences, perspectives and voices in the room. We realize, however, that ticket costs can sometimes be prohibitive for individuals from underrepresented groups. That's why we've partnered with six fantastic organizations to distribute &lt;a href="http://codeconf.com"&gt;CodeConf&lt;/a&gt; tickets to their members. Each one has a mission to connect, support and/or educate people from backgrounds underrepresented in tech. This will help us build a diverse audience and a great experience for everyone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/2394243/7819632/f46ca1c4-03da-11e5-9851-8a77ad6ca5a3.jpg" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2394243/7819632/f46ca1c4-03da-11e5-9851-8a77ad6ca5a3.jpg" alt="untitled"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our partner groups have shared a little more about their work and upcoming projects, as well as details of how they're distributing their CodeConf tickets. Read on to get inspired, involved, and potentially grab a ticket for yourself, and remember too that you can help on a personal level by choosing to purchase the "scholarship" ticket option on the
&lt;a href="http://www.ticketbase.com/events/codeconf-2015"&gt;registration page&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;Black Girls CODE&lt;/h1&gt;

&lt;p&gt;Black Girls CODE is an international non-profit that empowers young women of color to enter the tech space as builders and creators by introducing them to coding and technology. &lt;a href="http://www.blackgirlscode.org"&gt;www.blackgirlscode.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upcoming events:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;June 19th - 21st:&lt;/strong&gt; All Girls Hackathon, Oakland&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;June 20th:&lt;/strong&gt; Oracle Academy's Greenfoot brought to you by Black Girls CODE, Memphis&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;June 20th:&lt;/strong&gt; Introduction to Javascript Workshop, New York&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;July 24th-26th:&lt;/strong&gt; All Girls Hackathon, New York&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;July:&lt;/strong&gt; 1 week summer camps, Raleigh, NC and Washington D.C.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;August:&lt;/strong&gt; 1 week summer camps, Bay Area and New York&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ticket Details&lt;/strong&gt;: We will be distributing our tickets directly to the Black Girls CODE network.&lt;/p&gt;

&lt;h1&gt;Coding While Black&lt;/h1&gt;

&lt;p&gt;Coding While Black is headquartered in Chicago; our focus is code education, professional development, and entrepreneurship. We welcome blacks in technology from around the globe to become active members of a growing community that supports, encourages, and connects black technology professionals. Members can post articles, share events, find other black technology professionals to connect with, and enjoy community features. &lt;a href="http://www.codingwhileblack.com"&gt;www.codingwhileblack.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ticket details&lt;/strong&gt;: Coding While Black is excited to partner in promoting CodeConf to a diverse audience. We will be distributing the tickets by sharing them with members who have volunteered with us and/or have been active participants in our community.&lt;/p&gt;

&lt;h1&gt;Girl Geek Dinner Nashville&lt;/h1&gt;

&lt;p&gt;The Nashville chapter of Girl Geek Dinner was founded with the goal to encourage and inspire Nashville&amp;#8217;s young women and girls to pursue technology careers. Girl Geek Dinners have grown into an international movement. The ask is simple to sponsors &amp;#8212; buy dinner and drinks for girl geeks, invite speakers and encourage networking amongst the girl geeks. &lt;a href="http://www.ggdnashville.com"&gt;www.ggdnashville.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upcoming events:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;June 5th:&lt;/strong&gt; Eventbrite is hosting our next Girl Geek Dinner where they are flying in 3 Software Engineers and a Product Manager to Nashville to give lighting tech talks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Third Thursday of every month:&lt;/strong&gt; Code &amp;amp; Pinot night is a great opportunity for beginner programmers to come out and get a taste of what programming is like. Bring your favorite wine and learn to code! Food provided.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ticket details&lt;/strong&gt;: We plan to distribute the tickets to our Girl Geeks through a coding contest and drawing. Coding contest: the first to give the correct answer will get a ticket.  Drawing: we will randomly select a winner from contest entries.&lt;/p&gt;

&lt;h1&gt;Lesbians Who Tech&lt;/h1&gt;

&lt;p&gt;Lesbians Who Tech is a global community of 9,000 queer women in tech. It exists to provide value to queer women in tech, a demographic that is rarely represented in both the tech community and the LGBTQ community. We've hosted events in 22 cities worldwide and focus on connecting our community, increasing visibility and increasing women in tech and leadership positions. &lt;a href="http://www.lesbianswhotech.org"&gt;www.lesbianswhotech.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upcoming events:&lt;/strong&gt; &lt;/p&gt;

 

&lt;p&gt;&lt;strong&gt;Ticket details&lt;/strong&gt;: We'll be offering the tickets through Lesbians Who Tech chapters in the Midwest&lt;/p&gt;

&lt;h1&gt;Rails Girls Atlanta&lt;/h1&gt;

&lt;p&gt;Rails Girls Atlanta is an encouraging place for women to take the plunge into learning to code. We host monthly meetups and socials where dev-minded ladies can ask questions, learn from others, and get the support they need to be successful. &lt;a href="http://www.meetup.com/Rails-Girls-Atlanta"&gt;www.meetup.com/Rails-Girls-Atlanta&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Upcoming events:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;June 1st:&lt;/strong&gt; All the Nerdy Ladies Social at Joystick. No agenda, just a time to visit and catch up with other nerdy lady types.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ticket details&lt;/strong&gt;: We&amp;#8217;re planning to raffle off the tickets at our May meetup.&lt;/p&gt;

&lt;h1&gt;Trans*H4CK&lt;/h1&gt;

&lt;p&gt;Trans*H4CK is a hackathon and speaker series that tackles social problems by developing new and useful open source tech products that benefit the trans and gender non-conforming communities, while bringing visibility to transgender tech innovators and entrepreneurs.&lt;/p&gt;

&lt;p&gt;We are planning to launch an online hackathon space this year--stay tuned! &lt;a href="http://www.transhack.org"&gt;http://www.transhack.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ticket details&lt;/strong&gt;: We will be distributing our CodeConf tickets through the Trans*H4CK network.&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>Support LGBTQ tech organizations with the Pridetocat Shirt</title><link href="http://www.ciandcd.com/support-lgbtq-tech-organizations-with-the-pridetocat-shirt.html" rel="alternate"></link><updated>2015-06-21T01:08:37+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:support-lgbtq-tech-organizations-with-the-pridetocat-shirt.html</id><summary type="html">&lt;div&gt;&lt;p&gt;With the purchase of the Pridetocat Shirt you will be assisting &lt;a href="http://www.lesbianswhotech.org"&gt;Lesbians Who Tech&lt;/a&gt;,
&lt;a href="http://www.mymaven.org"&gt;Maven&lt;/a&gt;, and &lt;a href="http://www.transhack.org"&gt;Trans*H4CK&lt;/a&gt; to further their work.  All proceeds from sales will be donated to these organizations that are helping educate, connect and empower LGBTQ people in tech.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://github.myshopify.com/products/pridetocat-shirt"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/5945961/7922248/daa5a220-085f-11e5-88fa-308dfd374aea.jpg" alt="Pridetocat Shirts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This limited edition shirt is available in the &lt;a href="http://github.myshopify.com/"&gt;GitHub Shop&lt;/a&gt; until August 31st.&lt;/p&gt;

&lt;p&gt;More info about the LGBTQ tech organizations that benefit from the purchase of this shirt:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lesbians Who Tech&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.lesbianswhotech.org"&gt;Lesbians Who Tech&lt;/a&gt; is a global community of 9,000 queer women in tech. It exists to provide value to queer women in tech, a demographic that is rarely represented in both the tech community and the LGBTQ community. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trans*H4CK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.transhack.org"&gt;Trans*H4CK&lt;/a&gt; is a hackathon and speaker series that tackles social problems by developing new and useful open source tech products that benefit the trans and gender non-conforming communities, while bringing visibility to transgender tech innovators and entrepreneurs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.mymaven.org"&gt;Maven&lt;/a&gt; partner with local LGBTQA youth serving organizations and LGBTQA tech professionals to provide free tech camps, workshops, Game Jams/hackathons for the queer youth community.&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>Focus on your changes in GitHub for Windows</title><link href="http://www.ciandcd.com/focus-on-your-changes-in-github-for-windows.html" rel="alternate"></link><updated>2015-06-21T01:08:36+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:focus-on-your-changes-in-github-for-windows.html</id><summary type="html">&lt;div&gt;&lt;p&gt;GitHub for Windows now makes it even easier to see everything local to your machine, whether it's uncommitted changes or commits you haven't synced yet.&lt;/p&gt;

&lt;p&gt;One of the things you'll notice when creating commits is the new, compact list of changed files in your working directory. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/634063/7920112/0f2085a0-089d-11e5-804b-d42eff5b5987.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/634063/7920112/0f2085a0-089d-11e5-804b-d42eff5b5987.png" alt="Dedicated view of your local changes"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;GitHub for Windows shows the number of files that a commit changed and lets you drill down to see what changed in a given file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/634063/7920127/295d7c3e-089d-11e5-9209-8592a431a208.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/634063/7920127/295d7c3e-089d-11e5-9209-8592a431a208.png" alt="Commit lists now show number of files and lets you select individual files to view changes for"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The updated branch selector now groups your recently used branches so that you can jump straight back in to what you were doing before that pesky hotfix distracted you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/634063/7920242/011e3d8e-089e-11e5-972c-c9c5ca5ff386.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/634063/7920242/011e3d8e-089e-11e5-972c-c9c5ca5ff386.png" alt="New branch selector lets you see recently checked out branches"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;We've given branch creation a dedicated place in the toolbar. As a bonus, you can pick which branch to base the new one off.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/634063/7920243/0122381c-089e-11e5-9d52-d82b168d49f4.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/634063/7920243/0122381c-089e-11e5-9d52-d82b168d49f4.png" alt="The new create branch popover lets you pick which base branch to use for your new branch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, you can collapse the repository list to reclaim some screen space.&lt;/p&gt;

&lt;p&gt;If you have GitHub for Windows installed it will automatically update to the latest version. If you don't have it installed, download GitHub for Windows from &lt;a href="https://windows.github.com"&gt;windows.github.com&lt;/a&gt;.&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>Filter Pull Requests by Status</title><link href="http://www.ciandcd.com/filter-pull-requests-by-status.html" rel="alternate"></link><updated>2015-06-21T01:08:28+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:filter-pull-requests-by-status.html</id><summary type="html">&lt;div&gt;&lt;p&gt;When we shipped &lt;a href="https://github.com/blog/1866-the-new-github-issues"&gt;the new GitHub Issues&lt;/a&gt;, we made it easy to &lt;a href="https://help.github.com/articles/searching-issues/"&gt;scope lists of Issues and Pull Requests&lt;/a&gt; with filters like author, date, mentions, and team mentions. With the new &lt;code&gt;status:&lt;/code&gt; filter you can now filter the Pull Requests in your repositories by &lt;a href="https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref"&gt;combined status&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/483/7819956/1422929e-039a-11e5-98d5-f273b9fe4472.gif" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/483/7819956/1422929e-039a-11e5-98d5-f273b9fe4472.gif" alt="example gif of filtering by status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're taking advantage of the &lt;a href="https://developer.github.com/v3/repos/statuses/"&gt;Status API&lt;/a&gt;, or using an integration that does, try out the new filters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;status:success&lt;/code&gt; Only pull requests with all successful statuses&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;status:failure&lt;/code&gt; Only pull requests that have statuses in the &lt;code&gt;failure&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt; state&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;status:pending&lt;/code&gt; Only pull requests with no statuses or at least one status in the &lt;code&gt;pending&lt;/code&gt; state&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;</summary></entry><entry><title>Atom at CodeConf 2015</title><link href="http://www.ciandcd.com/atom-at-codeconf-2015.html" rel="alternate"></link><updated>2015-06-21T01:08:20+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:atom-at-codeconf-2015.html</id><summary type="html">&lt;div&gt;&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/4154342/7970619/2b15c3e4-09f4-11e5-89e0-1affcfcf80ba.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/4154342/7970619/2b15c3e4-09f4-11e5-89e0-1affcfcf80ba.png" alt="atom"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://codeconf.com"&gt;CodeConf&lt;/a&gt; is coming June 25 &amp;amp; 26 to Nashville and will feature the best that the open source community has to offer.&lt;/p&gt;

&lt;p&gt;We're excited to share that there will be several talks about the &lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; ecosystem presented for your enjoyment and edification, kicked off by GitHub CEO &lt;a href="https://github.com/defunkt"&gt;Chris Wanstrath&lt;/a&gt;. Speakers will include: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/bolinfest"&gt;@bolinfest&lt;/a&gt; talking about &lt;a href="http://nuclide.io"&gt;Nuclide&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lee-dohm"&gt;@lee-dohm&lt;/a&gt; talking about the Atom community&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/paulcbetts"&gt;@paulcbetts&lt;/a&gt; talking about &lt;a href="https://slack.com"&gt;Slack&lt;/a&gt; and &lt;a href="http://electron.atom.io"&gt;Electron&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will also be hosting an Atom workshop led by &lt;a href="https://github.com/nathansobo"&gt;Nathan Sobo&lt;/a&gt;, and a lounge where you will be able to meet with the core team and hack on Atom together.  &lt;/p&gt;

&lt;p&gt;Grab your &lt;a href="http://www.ticketbase.com/events/codeconf-2015"&gt;CodeConf and workshop tickets now&lt;/a&gt; and we'll see you there in Nashville! &lt;/p&gt;


  &lt;/div&gt;</summary></entry><entry><title>Announcing GitHub Japan</title><link href="http://www.ciandcd.com/announcing-github-japan.html" rel="alternate"></link><updated>2015-06-21T01:08:16+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:announcing-github-japan.html</id><summary type="html">&lt;div&gt;&lt;p&gt;GitHub &amp;lt;3s Japan, and today we&amp;#8217;re excited to announce the formation of GitHub Japan G.K., a subsidiary of GitHub, Inc. Our new office in Tokyo is our first official office outside of the United States. &lt;/p&gt;

&lt;h3&gt;The Japanese developer community&lt;/h3&gt;

&lt;p&gt;GitHub couldn&amp;#8217;t exist without the Japanese open source community &amp;#8212; after all, our site is built on &lt;a href="https://github.com/rails/rails"&gt;Rails&lt;/a&gt;, which is built on &lt;a href="https://github.com/ruby/ruby"&gt;Ruby&lt;/a&gt;, an open source project &lt;a href="https://www.ruby-lang.org/en/about/"&gt;started in Japan&lt;/a&gt;. Japan has historically been one of the most active countries on GitHub, ranking in the top 10 countries visiting github.com since GitHub was founded in 2008. The thriving software community in Japan keeps growing; in 2014, activity on github.com from Japan increased more than 60 percent from the previous year. &lt;/p&gt;

&lt;h3&gt;GitHub Enterprise in Japan&lt;/h3&gt;

&lt;p&gt;In addition to an active local open source community, Japanese businesses including &lt;a href="http://www.hitachi-systems.com/eng/"&gt;Hitachi Systems&lt;/a&gt;, &lt;a href="https://enterprise.github.com/stories/cyberagent"&gt;CyberAgent&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=j1-G14EJRQ8"&gt;GREE&lt;/a&gt; are collaborating and building the best software with GitHub Enterprise. To that end, we&amp;#8217;re also announcing that we'll be partnering locally to provide Japanese language technical support for GitHub Enterprise users, as well as the ability to pay in Japanese Yen in Japan. &lt;/p&gt;

&lt;h3&gt;Stay up to date&lt;/h3&gt;

&lt;p&gt;Keep tabs on everything happening in our Tokyo office by following &lt;a href="https://twitter.com/githubjapan"&gt;@GitHubJapan&lt;/a&gt; on Twitter and checking out &lt;a href="http://github.co.jp/"&gt;github.co.jp&lt;/a&gt;. We&amp;#8217;d also love to see you at our &lt;a href="http://ptix.co/1cIsp83"&gt;meetup in Osaka on June 6&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Yoroshiku-Onegaiitashimasu!&lt;/p&gt;

&lt;h1&gt;&amp;#21021;&amp;#12417;&amp;#12414;&amp;#12375;&amp;#12390;GitHub Japan&amp;#12391;&amp;#12377;&amp;#65281;&lt;/h1&gt;

&lt;p&gt;GitHub &amp;lt;3s Japan, &amp;#26412;&amp;#26085;&amp;#12289;&amp;#31169;&amp;#36948;&amp;#12399;GitHub, Inc.&amp;#12398;&amp;#23376;&amp;#20250;&amp;#31038;&amp;#12391;&amp;#12354;&amp;#12427;&amp;#12289;GitHub Japan&amp;#21512;&amp;#21516;&amp;#20250;&amp;#31038;&amp;#12398;&amp;#35373;&amp;#31435;&amp;#12398;&amp;#30330;&amp;#34920;&amp;#12364;&amp;#12391;&amp;#12365;&amp;#12427;&amp;#20107;&amp;#12434;&amp;#12392;&amp;#12390;&amp;#12418;&amp;#20809;&amp;#26628;&amp;#12395;&amp;#24605;&amp;#12387;&amp;#12390;&amp;#12362;&amp;#12426;&amp;#12414;&amp;#12377; &amp;#12290;&amp;#26481;&amp;#20140;&amp;#12395;&amp;#12458;&amp;#12540;&amp;#12503;&amp;#12531;&amp;#12375;&amp;#12383;&amp;#26032;&amp;#12375;&amp;#12356;&amp;#12458;&amp;#12501;&amp;#12451;&amp;#12473;&amp;#12399;&amp;#12289;&amp;#31859;&amp;#22269;&amp;#22806;&amp;#12391;&amp;#12458;&amp;#12540;&amp;#12503;&amp;#12531;&amp;#12377;&amp;#12427;&amp;#21021;&amp;#12398;&amp;#12458;&amp;#12501;&amp;#12451;&amp;#12473;&amp;#12395;&amp;#12394;&amp;#12426;&amp;#12414;&amp;#12377;&amp;#12290;&lt;/p&gt;

&lt;h3&gt;&amp;#12316;&amp;#26085;&amp;#26412;&amp;#12398;&amp;#12487;&amp;#12505;&amp;#12525;&amp;#12483;&amp;#12497;&amp;#12540;&amp;#12539;&amp;#12467;&amp;#12511;&amp;#12517;&amp;#12491;&amp;#12486;&amp;#12451;&amp;#12395;&amp;#12416;&amp;#12369;&amp;#12390;&amp;#12316;&lt;/h3&gt;

&lt;p&gt;GitHub&amp;#12399;&amp;#12289;&amp;#26085;&amp;#26412;&amp;#12391;&amp;#29983;&amp;#12414;&amp;#12428;&amp;#12383;&amp;#12458;&amp;#12540;&amp;#12503;&amp;#12531;&amp;#12477;&amp;#12540;&amp;#12473;&amp;#12539;&amp;#12503;&amp;#12525;&amp;#12472;&amp;#12455;&amp;#12463;&amp;#12488;&amp;#12398;Ruby&amp;#12391;&amp;#20316;&amp;#12425;&amp;#12428;&amp;#12383;Rails&amp;#12392;&amp;#12356;&amp;#12358;&amp;#12501;&amp;#12524;&amp;#12540;&amp;#12512;&amp;#12527;&amp;#12540;&amp;#12463;&amp;#12395;&amp;#12424;&amp;#12387;&amp;#12390;&amp;#38283;&amp;#30330;&amp;#12373;&amp;#12428;&amp;#12390;&amp;#12362;&amp;#12426;&amp;#12289;&amp;#26085;&amp;#26412;&amp;#12398;&amp;#12458;&amp;#12540;&amp;#12503;&amp;#12531;&amp;#12477;&amp;#12540;&amp;#12473;&amp;#12539;&amp;#12467;&amp;#12511;&amp;#12517;&amp;#12491;&amp;#12486;&amp;#12451;&amp;#12540;&amp;#12394;&amp;#12375;&amp;#12391;&amp;#12399;GitHub&amp;#12399;&amp;#23384;&amp;#22312;&amp;#12375;&amp;#12360;&amp;#12394;&amp;#12356;&amp;#12392;&amp;#35328;&amp;#12387;&amp;#12390;&amp;#12399;&amp;#36942;&amp;#35328;&amp;#12391;&amp;#12399;&amp;#12394;&amp;#12356;&amp;#31243;&amp;#12289;&amp;#26085;&amp;#26412;&amp;#12392;GitHub&amp;#12399;&amp;#28145;&amp;#12356;&amp;#12388;&amp;#12394;&amp;#12364;&amp;#12426;&amp;#12364;&amp;#12354;&amp;#12426;&amp;#12414;&amp;#12377;&amp;#12290;
&amp;#12414;&amp;#12383;&amp;#12289;2008&amp;#24180;&amp;#12398;GitHub&amp;#35373;&amp;#31435;&amp;#24403;&amp;#21021;&amp;#12363;&amp;#12425;&amp;#12289;&amp;#26085;&amp;#26412;&amp;#12363;&amp;#12425;github.com&amp;#12408;&amp;#12398;&amp;#12450;&amp;#12463;&amp;#12475;&amp;#12473;&amp;#25968;&amp;#12399;&amp;#19978;&amp;#20301;10&amp;#12534;&amp;#22269;&amp;#12395;&amp;#20837;&amp;#12426;&amp;#32154;&amp;#12369;&amp;#12390;&amp;#12365;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12290;&amp;#12381;&amp;#12375;&amp;#12390;&amp;#12289;&amp;#26085;&amp;#26412;&amp;#12398;&amp;#12518;&amp;#12540;&amp;#12470;&amp;#12540;&amp;#12399;&amp;#29694;&amp;#22312;&amp;#12418;&amp;#22679;&amp;#21152;&amp;#12375;&amp;#32154;&amp;#12369;&amp;#12390;&amp;#12362;&amp;#12426;&amp;#12289;2014&amp;#24180;&amp;#12398;&amp;#26085;&amp;#26412;&amp;#12518;&amp;#12540;&amp;#12470;&amp;#12540;&amp;#12398;GitHub&amp;#19978;&amp;#12391;&amp;#12398;&amp;#12450;&amp;#12463;&amp;#12486;&amp;#12451;&amp;#12499;&amp;#12486;&amp;#12451;&amp;#12399;&amp;#12289;&amp;#21069;&amp;#24180;&amp;#27604;60&amp;#65285;&amp;#12418;&amp;#22679;&amp;#21152;&amp;#12375;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12290;&lt;/p&gt;

&lt;h3&gt;&amp;#65374;&amp;#12300;GitHub Enterprise&amp;#12301;&amp;#12398;&amp;#26085;&amp;#26412;&amp;#23637;&amp;#38283;&amp;#65374;&lt;/h3&gt;

&lt;p&gt;GitHub&amp;#12399;&amp;#24195;&amp;#12367;&amp;#38283;&amp;#12363;&amp;#12428;&amp;#12383;&amp;#38283;&amp;#30330;&amp;#12434;&amp;#25903;&amp;#25588;&amp;#12377;&amp;#12427;&amp;#12458;&amp;#12540;&amp;#12503;&amp;#12531;&amp;#12477;&amp;#12540;&amp;#12473;&amp;#12539;&amp;#12503;&amp;#12521;&amp;#12483;&amp;#12488;&amp;#12501;&amp;#12457;&amp;#12540;&amp;#12512;&amp;#20197;&amp;#22806;&amp;#12395;&amp;#12418;&amp;#12289;&amp;#20840;&amp;#19990;&amp;#30028;&amp;#12391;&amp;#20225;&amp;#26989;&amp;#21521;&amp;#12369;&amp;#12395;&amp;#12300;GitHub Enterprise&amp;#12301;&amp;#12434;&amp;#25552;&amp;#20379;&amp;#12375;&amp;#12390;&amp;#21442;&amp;#12426;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12290;&amp;#12371;&amp;#12428;&amp;#12414;&amp;#12391;&amp;#12300;GitHub Enterprise&amp;#12301;&amp;#12399;&amp;#12289;&amp;#33521;&amp;#35486;&amp;#12391;&amp;#12398;&amp;#12469;&amp;#12509;&amp;#12540;&amp;#12488;&amp;#12398;&amp;#12415;&amp;#12384;&amp;#12387;&amp;#12383;&amp;#12395;&amp;#12418;&amp;#12363;&amp;#12363;&amp;#12431;&amp;#12425;&amp;#12378;&amp;#12289;&amp;#26085;&amp;#26412;&amp;#22269;&amp;#20869;&amp;#12391;&amp;#12399;&amp;#12289;&lt;a href="http://www.hitachi-systems.com/"&gt;&amp;#26666;&amp;#24335;&amp;#20250;&amp;#31038;&amp;#26085;&amp;#31435;&amp;#12471;&amp;#12473;&amp;#12486;&amp;#12512;&amp;#12474;&lt;/a&gt;&amp;#12289;&lt;a href="http://www.yahoo.co.jp/"&gt;&amp;#12516;&amp;#12501;&amp;#12540;&amp;#26666;&amp;#24335;&amp;#20250;&amp;#31038;&lt;/a&gt;&amp;#12289;&lt;a href="https://enterprise.github.com/stories/cyberagent"&gt;&amp;#26666;&amp;#24335;&amp;#20250;&amp;#31038;&amp;#12469;&amp;#12452;&amp;#12496;&amp;#12540;&amp;#12456;&amp;#12540;&amp;#12472;&amp;#12455;&amp;#12531;&amp;#12488;&lt;/a&gt;&amp;#12420;&lt;a href="https://www.youtube.com/watch?v=j1-G14EJRQ8"&gt;&amp;#12464;&amp;#12522;&amp;#12540;&amp;#26666;&amp;#24335;&amp;#20250;&amp;#31038;&lt;/a&gt; &amp;#12394;&amp;#12393;&amp;#12398;&amp;#22823;&amp;#25163;&amp;#20225;&amp;#26989;&amp;#12434;&amp;#12399;&amp;#12376;&amp;#12417;&amp;#12392;&amp;#12375;&amp;#12390;&amp;#12289;&amp;#22810;&amp;#12367;&amp;#12398;&amp;#20808;&amp;#36914;&amp;#30340;&amp;#12394;&amp;#20225;&amp;#26989;&amp;#12395;&amp;#12372;&amp;#27963;&amp;#29992;&amp;#38914;&amp;#12356;&amp;#12390;&amp;#21442;&amp;#12426;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12290;&amp;#12381;&amp;#12375;&amp;#12390;&amp;#20170;&amp;#22238;&amp;#12289;&amp;#12373;&amp;#12425;&amp;#12395;&amp;#36805;&amp;#36895;&amp;#12391;&amp;#12365;&amp;#12417;&amp;#32048;&amp;#12363;&amp;#12356;&amp;#12469;&amp;#12540;&amp;#12499;&amp;#12473;&amp;#12420;&amp;#12469;&amp;#12509;&amp;#12540;&amp;#12488;&amp;#12434;&amp;#25552;&amp;#20379;&amp;#12377;&amp;#12427;&amp;#12383;&amp;#12417;&amp;#12289;GitHub&amp;#12399;&amp;#22823;&amp;#25163;&amp;#20195;&amp;#29702;&amp;#24215;&amp;#12392;&amp;#26989;&amp;#21209;&amp;#25552;&amp;#25658;&amp;#12434;&amp;#34892;&amp;#12356;&amp;#12289;&amp;#26085;&amp;#26412;&amp;#35486;&amp;#12395;&amp;#12424;&amp;#12427;&amp;#12300;GitHub Enterprise&amp;#12301;&amp;#12398;&amp;#27861;&amp;#20154;&amp;#21521;&amp;#12369;&amp;#23566;&amp;#20837;&amp;#12469;&amp;#12509;&amp;#12540;&amp;#12488;&amp;#12418;&amp;#38283;&amp;#22987;&amp;#12375;&amp;#12414;&amp;#12375;&amp;#12383;&amp;#12290;&amp;#12371;&amp;#12398;&amp;#36009;&amp;#22770;&amp;#12497;&amp;#12540;&amp;#12488;&amp;#12490;&amp;#12540;&amp;#25552;&amp;#25658;&amp;#12395;&amp;#12424;&amp;#12426;&amp;#12289;&amp;#20870;&amp;#24314;&amp;#12390;&amp;#27770;&amp;#28168;&amp;#12420;&amp;#26085;&amp;#26412;&amp;#35486;&amp;#12398;&amp;#12486;&amp;#12463;&amp;#12491;&amp;#12459;&amp;#12523;&amp;#12469;&amp;#12509;&amp;#12540;&amp;#12488;&amp;#12418;&amp;#21487;&amp;#33021;&amp;#12395;&amp;#12394;&amp;#12426;&amp;#12414;&amp;#12377;&amp;#12290;&lt;/p&gt;

&lt;h3&gt;GitHub &amp;#12398;&amp;#26368;&amp;#26032;&amp;#12398;&amp;#24773;&amp;#22577;&amp;#12434;&amp;#24471;&amp;#12424;&amp;#12358;&lt;/h3&gt;

&lt;p&gt;&amp;#26481;&amp;#20140;&amp;#12458;&amp;#12501;&amp;#12451;&amp;#12473;&amp;#12391;&amp;#20309;&amp;#12364;&amp;#36215;&amp;#12371;&amp;#12387;&amp;#12390;&amp;#12356;&amp;#12427;&amp;#12363;&amp;#30693;&amp;#12427;&amp;#28858;&amp;#12395;&amp;#12399;Twitter&amp;#12391;  &lt;a href="https://twitter.com/githubjapan"&gt;@GitHubJapan&lt;/a&gt;&amp;#160;&amp;#12434;&amp;#12501;&amp;#12457;&amp;#12525;&amp;#12540;&amp;#12377;&amp;#12427;&amp;#12363;&amp;#12289; &lt;a href="http://github.co.jp/"&gt;github.co.jp&lt;/a&gt;&amp;#12395;&amp;#12450;&amp;#12463;&amp;#12475;&amp;#12473;&amp;#12375;&amp;#12390;&amp;#12367;&amp;#12384;&amp;#12373;&amp;#12356;&amp;#12397;&amp;#12290;&amp;#12381;&amp;#12375;&amp;#12390;&lt;a href="http://ptix.co/1cIsp83"&gt;&amp;#22823;&amp;#38442;&amp;#12391;&amp;#38283;&amp;#20652;&amp;#12373;&amp;#12428;&amp;#12427;user meetup&lt;/a&gt; &amp;#12395;&amp;#12418;&amp;#26159;&amp;#38750;&amp;#12362;&amp;#36234;&amp;#12375;&amp;#12367;&amp;#12384;&amp;#12373;&amp;#12356;&amp;#65281; &amp;#12362;&amp;#24453;&amp;#12385;&amp;#12375;&amp;#12390;&amp;#12362;&amp;#12426;&amp;#12414;&amp;#12377;&amp;#65281;.&lt;/p&gt;

&lt;p&gt;&amp;#12424;&amp;#12429;&amp;#12375;&amp;#12367;&amp;#12362;&amp;#39000;&amp;#12356;&amp;#33268;&amp;#12375;&amp;#12414;&amp;#12377;&amp;#65281;&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>How to undo (almost) anything with Git</title><link href="http://www.ciandcd.com/how-to-undo-almost-anything-with-git.html" rel="alternate"></link><updated>2015-06-21T01:08:15+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:how-to-undo-almost-anything-with-git.html</id><summary type="html">&lt;div&gt;&lt;p&gt;One of the most useful features of any version control system is the ability to "undo" your mistakes. In Git, "undo" can mean many slightly different things.&lt;/p&gt;

&lt;p&gt;When you make a new commit, Git stores a snapshot of your repository at that specific moment in time; later, you can use Git to go back to an earlier version of your project.&lt;/p&gt;

&lt;p&gt;In this post, I'm going to take a look at some common scenarios where you might want to "undo" a change you've made and the best way to do it using Git.&lt;/p&gt;

&lt;h2&gt;Undo a "public" change&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You just ran &lt;code&gt;git push&lt;/code&gt;, sending your changes to GitHub, now you realize there's a problem with one of those commits. You'd like to undo that commit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git revert &amp;lt;SHA&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; &lt;code&gt;git revert&lt;/code&gt; will create a new commit that's the opposite (or inverse) of the given SHA. If the old commit is "matter", the new commit is "anti-matter"&amp;#8212;anything removed in the old commit will be added in the new commit and anything added in the old commit will be removed in the new commit. &lt;/p&gt;

&lt;p&gt;This is Git's safest, most basic "undo" scenario, because it doesn't alter history&amp;#8212;so you can now &lt;code&gt;git push&lt;/code&gt; the new "inverse" commit to undo your mistaken commit.&lt;/p&gt;

&lt;h2&gt;Fix the last commit message&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You just typo'd the last commit message, you did &lt;code&gt;git commit -m "Fxies bug #42"&lt;/code&gt; but before &lt;code&gt;git push&lt;/code&gt; you realized that really should say "Fixes bug #42".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git commit --amend&lt;/code&gt; or &lt;code&gt;git commit --amend -m "Fixes bug #42"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; &lt;code&gt;git commit --amend&lt;/code&gt; will update and replace the most recent commit with a new commit that combines any staged changes with the contents of the previous commit. With nothing currently staged, this just rewrites the previous commit message.&lt;/p&gt;

&lt;h2&gt;Undo "local" changes&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; The cat walked across the keyboard and somehow saved the changes, then crashed the editor. You haven't committed those changes, though. You want to undo everything in that file&amp;#8212;just go back to the way it looked in the last commit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git checkout -- &amp;lt;bad filename&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; &lt;code&gt;git checkout&lt;/code&gt; alters files in the working directory to a state previously known to Git. You could provide a branch name or specific SHA you want to go back to or, by default, Git will assume you want to checkout &lt;code&gt;HEAD&lt;/code&gt;, the last commit on the currently-checked-out branch.&lt;/p&gt;

&lt;p&gt;Keep in mind: any changes you "undo" this way are really gone. They were never committed, so Git can't help us recover them later. Be sure you know what you're throwing away here! (Maybe use &lt;code&gt;git diff&lt;/code&gt; to confirm.)&lt;/p&gt;

&lt;h2&gt;Reset "local" changes&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You've made some commits locally (not yet pushed), but everything is terrible, you want to undo the last three commits&amp;#8212;like they never happened.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git reset &amp;lt;last good SHA&amp;gt;&lt;/code&gt; or &lt;code&gt;git reset --hard &amp;lt;last good SHA&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; &lt;code&gt;git reset&lt;/code&gt; rewinds your repository's history all the way back to the specified SHA. It's as if those commits never happened. By default, &lt;code&gt;git reset&lt;/code&gt; preserves the working directory. The commits are gone, but the contents are still on disk. This is the safest option, but often, you'll want to "undo" the commits and the changes in one move&amp;#8212;that's what &lt;code&gt;--hard&lt;/code&gt; does.&lt;/p&gt;

&lt;h2&gt;Redo after undo "local"&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You made some commits, did a &lt;code&gt;git reset --hard&lt;/code&gt; to "undo" those changes (see above), and then realized: you want those changes back!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git reflog&lt;/code&gt; and &lt;code&gt;git reset&lt;/code&gt; or &lt;code&gt;git checkout&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; &lt;code&gt;git reflog&lt;/code&gt; is an amazing resource for recovering project history. You can recover almost anything&amp;#8212;anything you've committed&amp;#8212;via the reflog.&lt;/p&gt;

&lt;p&gt;You're probably familiar with the &lt;code&gt;git log&lt;/code&gt; command, which shows a list of commits. &lt;code&gt;git reflog&lt;/code&gt; is similar, but instead shows a list of times when &lt;code&gt;HEAD&lt;/code&gt; changed.&lt;/p&gt;

&lt;p&gt;Some caveats:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;HEAD&lt;/code&gt; changes only.&lt;code&gt;HEAD&lt;/code&gt; changes when you switch branches, make commits with &lt;code&gt;git commit&lt;/code&gt; and un-make commits with &lt;code&gt;git reset&lt;/code&gt;, but &lt;code&gt;HEAD&lt;/code&gt; does not change when you &lt;code&gt;git checkout -- &amp;lt;bad filename&amp;gt;&lt;/code&gt; (from an earlier scenario&amp;#8212;as mentioned before, those changes were never committed, so the reflog can't help us recover those.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git reflog&lt;/code&gt; doesn't last forever. Git will periodically clean up objects which are "unreachable." Don't expect to find months-old commits lying around in the reflog forever.&lt;/li&gt;
&lt;li&gt;Your &lt;code&gt;reflog&lt;/code&gt; is yours and yours alone. You can't use &lt;code&gt;git reflog&lt;/code&gt; to restore another developer's un-pushed commits.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/2077/6953866/f6b9f054-d891-11e4-8c53-838eff9f40ae.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2077/6953866/f6b9f054-d891-11e4-8c53-838eff9f40ae.png" alt="reflog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So... how do you use the reflog to "redo" a previously "undone" commit or commits? It depends on what exactly you want to accomplish:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you want to restore the project's history as it was at that moment in time use &lt;code&gt;git reset --hard &amp;lt;SHA&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If you want to recreate one or more files in your working directory as they were at that moment in time, without altering history use &lt;code&gt;git checkout &amp;lt;SHA&amp;gt; -- &amp;lt;filename&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If you want to replay exactly one of those commits into your repository use &lt;code&gt;git cherry-pick &amp;lt;SHA&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Once more, with branching&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You made some commits, then realized you were checked out on &lt;code&gt;master&lt;/code&gt;. You wish you could make those commits on a feature branch instead.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git branch feature&lt;/code&gt;, &lt;code&gt;git reset --hard origin/master&lt;/code&gt;, and &lt;code&gt;git checkout feature&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; You may be used to creating new branches with &lt;code&gt;git checkout -b &amp;lt;name&amp;gt;&lt;/code&gt;&amp;#8212;it's a popular short-cut for creating a new branch and checking it out right away&amp;#8212;but you don't want to switch branches just yet. Here, &lt;code&gt;git branch feature&lt;/code&gt; creates a new branch called &lt;code&gt;feature&lt;/code&gt; pointing at your most recent commit, but leaves you checked out to &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, &lt;code&gt;git reset --hard&lt;/code&gt; rewinds &lt;code&gt;master&lt;/code&gt; back to &lt;code&gt;origin/master&lt;/code&gt;, before any of your new commits. Don't worry, though, they are still available on &lt;code&gt;feature&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, &lt;code&gt;git checkout&lt;/code&gt; switches to the new &lt;code&gt;feature&lt;/code&gt; branch, with all of your recent work intact.&lt;/p&gt;

&lt;h2&gt;Branch in time saves nine&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You started a new branch &lt;code&gt;feature&lt;/code&gt; based on &lt;code&gt;master&lt;/code&gt;, but &lt;code&gt;master&lt;/code&gt; was pretty far behind &lt;code&gt;origin/master&lt;/code&gt;. Now that &lt;code&gt;master&lt;/code&gt; branch is in sync with &lt;code&gt;origin/master&lt;/code&gt;, you wish commits on &lt;code&gt;feature&lt;/code&gt; were starting now, instead of being so far behind.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git checkout feature&lt;/code&gt; and &lt;code&gt;git rebase master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; You could have done this with &lt;code&gt;git reset&lt;/code&gt; (no &lt;code&gt;--hard&lt;/code&gt;, intentionally preserving changes on disk) then &lt;code&gt;git checkout -b &amp;lt;new branch name&amp;gt;&lt;/code&gt; and then re-commit the changes, but that way, you'd lose the commit history. There's a better way.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git rebase master&lt;/code&gt; does a couple of things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First it locates the common ancestor between your currently-checked-out branch and &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Then it resets the currently-checked-out branch to that ancestor, holding all later commits in a temporary holding area.&lt;/li&gt;
&lt;li&gt;Then it advances the currently-checked-out-branch to the end of &lt;code&gt;master&lt;/code&gt; and replays the commits from the holding area after &lt;code&gt;master&lt;/code&gt;'s last commit.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Mass undo/redo&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You started this feature in one direction, but mid-way through, you realized another solution was better. You've got a dozen or so commits, but you only want some of them. You'd like the others to just disappear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git rebase -i &amp;lt;earlier SHA&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; &lt;code&gt;-i&lt;/code&gt; puts &lt;code&gt;rebase&lt;/code&gt; in "interactive mode". It starts off like the rebase discussed above, but before replaying any commits, it pauses and allows you to gently modify each commit as it's replayed. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;rebase -i&lt;/code&gt; will open in your default text editor, with a list of commits being applied, like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/2077/6953863/f6b1ab88-d891-11e4-97c1-e0630ac74e74.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2077/6953863/f6b1ab88-d891-11e4-97c1-e0630ac74e74.png" alt="rebase-interactive1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first two columns are key: the first is the selected command for the commit identified by the SHA in the second column. By default, &lt;code&gt;rebase -i&lt;/code&gt; assumes each commit is being applied, via the &lt;code&gt;pick&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;To drop a commit, just delete that line in your editor. If you no longer want the bad commits in your project, you can delete lines 1 and 3-4 above. &lt;/p&gt;

&lt;p&gt;If you want to preserve the contents of the commit but edit the commit message, you use the &lt;code&gt;reword&lt;/code&gt; command. Just replace the word &lt;code&gt;pick&lt;/code&gt; in the first column with the word &lt;code&gt;reword&lt;/code&gt; (or just &lt;code&gt;r&lt;/code&gt;). It can be tempting to rewrite the commit message right now, but that won't work&amp;#8212;&lt;code&gt;rebase -i&lt;/code&gt; ignores everything after the SHA column. The text after that is really just to help us remember what &lt;code&gt;0835fe2&lt;/code&gt; is all about. When you've finished with &lt;code&gt;rebase -i&lt;/code&gt;, you'll be prompted for any new commit messages you need to write.&lt;/p&gt;

&lt;p&gt;If you want to combine two commits together, you can use the &lt;code&gt;squash&lt;/code&gt; or &lt;code&gt;fixup&lt;/code&gt; commands, like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/2077/6953865/f6b605ca-d891-11e4-98cf-d567ca9f4edc.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2077/6953865/f6b605ca-d891-11e4-98cf-d567ca9f4edc.png" alt="rebase-interactive2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;squash&lt;/code&gt; and &lt;code&gt;fixup&lt;/code&gt; combine "up"&amp;#8212;the commit with the "combine" command will be merged into the commit immediately before it. In this scenario, &lt;code&gt;0835fe2&lt;/code&gt; and &lt;code&gt;6943e85&lt;/code&gt; will be combined into one commit, then &lt;code&gt;38f5e4e&lt;/code&gt; and &lt;code&gt;af67f82&lt;/code&gt; will be combined together into another. &lt;/p&gt;

&lt;p&gt;When you select &lt;code&gt;squash&lt;/code&gt;, Git will prompt us to give the new, combined commit a new commit message; &lt;code&gt;fixup&lt;/code&gt; will give the new commit the message from the first commit in the list. Here, you know that &lt;code&gt;af67f82&lt;/code&gt; is an "ooops" commit, so you'll just use the commit message from &lt;code&gt;38f5e4e&lt;/code&gt; as is, but you'll write a new message for the new commit you get from combining &lt;code&gt;0835fe2&lt;/code&gt; and &lt;code&gt;6943e85&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When you save and exit your editor, Git will apply your commits in order from top to bottom. You can alter the order commits apply by changing the order of commits before saving. If you'd wanted, you could have combined &lt;code&gt;af67f82&lt;/code&gt; with &lt;code&gt;0835fe2&lt;/code&gt; by arranging things like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/2077/6953864/f6b4a9d2-d891-11e4-9ac9-10039c031d06.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2077/6953864/f6b4a9d2-d891-11e4-9ac9-10039c031d06.png" alt="rebase-interactive3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Fix an earlier commit&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You failed to include a file in an earlier commit, it'd be great if that earlier commit could somehow include the stuff you left out. You haven't pushed, yet, but it wasn't the most recent commit, so you can't use &lt;code&gt;commit --amend&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git commit --squash &amp;lt;SHA of the earlier commit&amp;gt;&lt;/code&gt; and &lt;code&gt;git rebase --autosquash -i &amp;lt;even earlier SHA&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; &lt;code&gt;git commit --squash&lt;/code&gt; will create a new commit with a commit message like &lt;code&gt;squash! Earlier commit&lt;/code&gt;. (You could manually create a commit with a message like that, but &lt;code&gt;commit --squash&lt;/code&gt; saves you some typing.)&lt;/p&gt;

&lt;p&gt;You can also use &lt;code&gt;git commit --fixup&lt;/code&gt; if you don't want to be prompted to write a new commit message for the combined commit. In this scenario, you'd probably use &lt;code&gt;commit --fixup&lt;/code&gt;, since you just want to use the earlier commit's commit message during &lt;code&gt;rebase&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rebase --autosquash -i&lt;/code&gt; will launch an interactive &lt;code&gt;rebase&lt;/code&gt; editor, but the editor will open with any &lt;code&gt;squash!&lt;/code&gt; and &lt;code&gt;fixup!&lt;/code&gt; commits already paired to the commit target in the list of commits, like so:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/2077/6953862/f6a7a1d8-d891-11e4-8784-c32262ff54da.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2077/6953862/f6a7a1d8-d891-11e4-8784-c32262ff54da.png" alt="rebase-autosquash"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When using &lt;code&gt;--squash&lt;/code&gt; and &lt;code&gt;--fixup&lt;/code&gt;, you might not remember the SHA of the commit you want to fix&amp;#8212;only that it was one or five commits ago. You might find using Git's &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt; operators especially handy. &lt;code&gt;HEAD^&lt;/code&gt; is one commit before &lt;code&gt;HEAD&lt;/code&gt;. &lt;code&gt;HEAD~4&lt;/code&gt; is four commits before &lt;code&gt;HEAD&lt;/code&gt; - or, altogether, five commits back. &lt;/p&gt;

&lt;h2&gt;Stop tracking a tracked file&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scenario:&lt;/strong&gt; You accidentally added &lt;code&gt;application.log&lt;/code&gt; to the repository, now every time you run the application, Git reports there are unstaged changes in &lt;code&gt;application.log&lt;/code&gt;. You put &lt;code&gt;*.log&lt;/code&gt; in the &lt;code&gt;.gitignore&lt;/code&gt; file, but it's still there&amp;#8212;how do you tell git to to "undo" tracking changes in this file?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Undo with:&lt;/strong&gt; &lt;code&gt;git rm --cached application.log&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's happening:&lt;/strong&gt; While &lt;code&gt;.gitignore&lt;/code&gt; prevents Git from tracking changes to files or even noticing the existence of files it's never tracked before, once a file has been added and committed, Git will continue noticing changes in that file. Similarly, if you've used &lt;code&gt;git add -f&lt;/code&gt; to "force", or override, &lt;code&gt;.gitignore&lt;/code&gt;, Git will keep tracking changes. You won't have to use &lt;code&gt;-f&lt;/code&gt; to add it in the future.&lt;/p&gt;

&lt;p&gt;If you want to remove that should-be-ignored file from Git's tracking, &lt;code&gt;git rm --cached&lt;/code&gt; will remove it from tracking but leave the file untouched on disk. Since it's now being ignored, you won't see that file in &lt;code&gt;git status&lt;/code&gt; or accidentally commit changes from that file again.&lt;/p&gt;



&lt;p&gt;That's how to undo anything with Git. To learn more about any of the Git commands used here, check out the relevant documentation:&lt;/p&gt;

 
  &lt;/div&gt;</summary></entry><entry><title>Improved organization permissions</title><link href="http://www.ciandcd.com/improved-organization-permissions.html" rel="alternate"></link><updated>2015-06-21T01:08:10+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:improved-organization-permissions.html</id><summary type="html">&lt;div&gt;&lt;p&gt;Organizations have always been the best way for teams to work together and collaborate on code. We're happy to announce &lt;a href="https://github.com/orgs/improved-permissions?utm_source=github_site&amp;amp;utm_medium=blog&amp;amp;utm_campaign=organization-permissions"&gt;major improvements to GitHub organization permissions&lt;/a&gt;. These improvements include new customizable member privileges, fine-grained team permissions, and more open communication.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/orgs/improved-permissions?utm_source=github_site&amp;amp;utm_medium=blog&amp;amp;utm_campaign=organization-permissions"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/874145/8073289/cc2561da-0ed7-11e5-8bed-36f15367c914.png" alt="improved-organization-permissions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The improved permissions system gives your organization the flexibility to work the way you want. Here are just a few highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;(Opt-in) Members can view and mention all teams, even when they're not on those teams.&lt;/li&gt;
&lt;li&gt;(Opt-in) Members can create repositories without help from an owner.&lt;/li&gt;
&lt;li&gt;Members can create new teams to self-organize with the people they work with.&lt;/li&gt;
&lt;li&gt;Owners can give just the right amount of access to contractors and interns by adding them to repositories without giving them the privileges of organization members.&lt;/li&gt;
&lt;li&gt;And many more! &lt;a href="https://github.com/orgs/improved-permissions?utm_source=github_site&amp;amp;utm_medium=blog&amp;amp;utm_campaign=organization-permissions"&gt;Learn about GitHub's improved organization permissions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of these new features give your organization the ability to work together seamlessly without everyone needing to be an owner.&lt;/p&gt;

&lt;p&gt;Once these features launch, organization owners will be able to turn on new permissions as needed. Simply opt-in when you're ready.&lt;/p&gt;

&lt;h2&gt;Early access&lt;/h2&gt;

&lt;p&gt;We're rolling out our improved permissions system to a select group of users who will be asked to provide feedback over a short survey as part of the program. If you're interested in being one of the first to try it out on GitHub.com, &lt;a href="https://github.com/orgs/improved-permissions?utm_source=github_site&amp;amp;utm_medium=blog&amp;amp;utm_campaign=organization-permissions"&gt;sign your organization up for early access&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the next few months, every organization on GitHub.com will have the improved permissions system.&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>An updated header, just for you</title><link href="http://www.ciandcd.com/an-updated-header-just-for-you.html" rel="alternate"></link><updated>2015-06-21T01:08:09+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:an-updated-header-just-for-you.html</id><summary type="html">&lt;div&gt;&lt;p&gt;Navigating what's most important to you on GitHub.com just got a little easier with our updated site header.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/98681/8116294/212a0ff0-1036-11e5-9450-b08d1cb7999c.jpg" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/98681/8116294/212a0ff0-1036-11e5-9450-b08d1cb7999c.jpg" alt="New GitHub header"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The new header gives you faster access to &lt;a href="https://github.com/blog/1901-managing-issues-and-pull-requests-across-repositories"&gt;your pull requests and issues dashboards&lt;/a&gt; from anywhere on the site. If you're unfamiliar with them, these dashboards list all of your open pull requests and issues&amp;#8212;as well as those you've been mentioned in or are assigned to&amp;#8212;in one place. Use them to stay up to date on what needs to be done across your projects.&lt;/p&gt;

&lt;p&gt;Lastly, clicking your avatar now opens a new dropdown menu with links to your profile, account settings, and more. As a small bonus, we've also included a new Your stars link for easy access to your starred repositories.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>Read-only deploy keys</title><link href="http://www.ciandcd.com/read-only-deploy-keys.html" rel="alternate"></link><updated>2015-06-21T01:08:07+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:read-only-deploy-keys.html</id><summary type="html">&lt;div&gt;&lt;p&gt;You can now create deploy keys with read-only access. A deploy key is an SSH key that is stored on your server and grants access to a single GitHub repository. They are often used to clone repositories during deploys or continuous integration runs. Deploys sometimes involve merging branches and pushing code, so deploy keys have always allowed both read and write access. Because write access is undesirable in many cases, you now have the ability to create deploy keys with read-only access.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/1144197/8164374/e76a0e24-1345-11e5-93b0-fd04b6a3446c.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/1144197/8164374/e76a0e24-1345-11e5-93b0-fd04b6a3446c.png" alt="viewing and adding deploy keys"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;New deploy keys created through GitHub.com will be read-only by default and can be given write access by selecting "Allow write access" during creation. Access level can be specified when &lt;a href="https://developer.github.com/v3/repos/keys/"&gt;creating deploy keys from the API&lt;/a&gt; as well.&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>A closer look at Europe</title><link href="http://www.ciandcd.com/a-closer-look-at-europe.html" rel="alternate"></link><updated>2015-06-21T01:08:06+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:a-closer-look-at-europe.html</id><summary type="html">&lt;div&gt;&lt;p&gt;Last week we opened our first &lt;a href="https://github.com/blog/2017-announcing-github-japan"&gt;international office in Japan&lt;/a&gt;. This week we thought we'd take a closer look at Europe, which happens to be the largest demographic of GitHub users around the world, representing 36% of site traffic.&lt;/p&gt;

&lt;p&gt;Around 32 million people visit GitHub each month, and most of this traffic comes from outside of the United States (74% in fact!).
The most active countries in Europe are Germany, the United Kingdom, and France, but if we look at users per capita we see a different story -- Sweden, Finland, and the Netherlands lead the way. London, Paris and Stockholm top the list of European cities most active on GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/25/8152704/83b76acc-12d5-11e5-851c-3fa139ee3137.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/25/8152704/83b76acc-12d5-11e5-851c-3fa139ee3137.png" alt="Growth of most active European countries on GitHub"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The goals of building better software are universal, and several European organizations are setting the example.
Companies like &lt;a href="https://enterprise.github.com/stories/sap"&gt;SAP&lt;/a&gt; and XS4ALL are driving innovation with software, while &lt;a href="https://alphagov.github.io/"&gt;The UK Government Digital Services&lt;/a&gt; and &lt;a href="https://government.github.com/community/"&gt;dozens of other European government agencies and services&lt;/a&gt; are developing new ways to serve citizens.&lt;/p&gt;

&lt;p&gt;Today, around 10% of GitHub employees are based in Europe, with a dozen new faces in the last year alone -- many of whom are focused solely on helping our European customers build great software.
A few of us are here in the UK for &lt;a href="http://londontechnologyweek.co.uk/"&gt;London Tech Week&lt;/a&gt; and &lt;a href="https://enterconf.com/"&gt;EnterConf&lt;/a&gt; in Belfast. There will be plenty more meetups ahead if we don't see you there.&lt;/p&gt;
  &lt;/div&gt;</summary></entry><entry><title>CodeConf Updates: Meet &amp; Greet and Workshop Tickets</title><link href="http://www.ciandcd.com/codeconf-updates-meet-greet-and-workshop-tickets.html" rel="alternate"></link><updated>2015-06-21T01:08:03+08:00</updated><author><name>itech001</name></author><id>tag:www.ciandcd.com,2015-06-21:codeconf-updates-meet-greet-and-workshop-tickets.html</id><summary type="html">&lt;div&gt;&lt;p&gt;&lt;a href="https://cloud.githubusercontent.com/assets/4154342/8258112/331e2444-1667-11e5-8e3a-d14384941fd5.png" target="_blank"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/4154342/8258112/331e2444-1667-11e5-8e3a-d14384941fd5.png" alt="codeconf-twitter-topheader"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://codeconf.com/"&gt;CodeConf&lt;/a&gt; is next week, and I couldn't be more excited to bring the open source community together to exchange ideas and have some fun in Nashville. There are a few updates I'd like to share: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On June 24, the day before the conference, we'll be hosting a &lt;strong&gt;meet &amp;amp; greet&lt;/strong&gt; for attendees who would like to register early. This event is free and open to the public, so if you aren't attending CodeConf but live in the Nashville area and would like to stop by, &lt;a href="http://www.ticketbase.com/events/codeconf-2015"&gt;grab a ticket here&lt;/a&gt;. We'll be congregating on the second floor of &lt;a href="http://theacmenashville.com/"&gt;Acme Feed &amp;amp; Seed&lt;/a&gt; downtown beginning at 5:30pm &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;strong&gt;workshop schedule&lt;/strong&gt; has been updated, and I have opened up more space in each session for those interested. If you'd like to snag one of the newly available tickets, &lt;a href="http://www.ticketbase.com/events/codeconf-2015"&gt;go for it!&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There's still time to grab a CodeConf ticket. &lt;a href="http://codeconf.com/"&gt;Take a look at the website for the full schedule of sessions, workshops, and sponsors.&lt;/a&gt; I hope to see you in Nashville. &lt;/p&gt;
  &lt;/div&gt;</summary></entry></feed>